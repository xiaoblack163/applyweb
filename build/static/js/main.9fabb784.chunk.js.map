{"version":3,"sources":["../webpack/universalModuleDefinition","middleware/globalMiddleware.ts","pages/user/product/useColumns.tsx","pages/home/images/banner.png","pages/home/images/pic_01.jpeg","pages/home/images/pic_02.jpeg","pages/home/index.tsx","pages/exception/NotFound.tsx","apiStore/index.ts","pages/home/api.ts","pages/user/apis/index.ts","pages/admin/apis/index.ts","hooks/useApiSelector.ts","hooks/useUserInfo.ts","pages/admin/auth/Login.tsx","pages/layouts/LodingCom.tsx","pages/admin/PrivateRoute.tsx","pages/admin/layouts/BaseLayout.tsx","pages/admin/review/has/useColumns.tsx","pages/admin/review/has/index.tsx","pages/admin/review/treat/useColumns.tsx","pages/admin/review/treat/index.tsx","pages/admin/manage/has/index.tsx","pages/admin/manage/treat/index.tsx","pages/admin/review/index.tsx","pages/admin/layouts/PrimaryRouter.tsx","pages/admin/ModuleRouter.tsx","pages/user/auth/Login.tsx","pages/user/auth/Register.tsx","pages/user/auth/Reset.tsx","pages/user/PrivateRoute.tsx","pages/user/layouts/BaseLayout.tsx","pages/user/info/index.tsx","pages/user/product/index.tsx","pages/user/product/UploadImg.tsx","pages/user/product/AddProduct.tsx","pages/user/Password.tsx","pages/user/info/FormLabel.tsx","pages/user/info/UploadImg.tsx","pages/user/info/EditInfo.tsx","pages/user/layouts/PrimaryRouter.tsx","pages/user/ModuleRouter.tsx","App.tsx","configurations/constants.ts","configurations/combineUrl.ts","configurations/index.ts","configurations/configuration.dev.ts","configurations/configuration.pro.ts","serviceWorker.ts","index.tsx","middleware/axiosMiddleware.ts","middleware/antdMiddleware.tsx","middleware/index.ts","services/tokenService.ts"],"names":["root","factory","exports","module","define","amd","this","GlobalState_middleware","userInfo","globalLoading","global_middleware","middleware","useGlobalContext","useColumns","publicUrl","React","useMemo","columns","title","dataIndex","width","render","txt","imgUrl","eval","img","OPEN_IMG_URL","className","content","src","fixed","split","to","Home","banner","href","pic_one","pic_two","Notfind","status","subTitle","extra","type","apis","home","getTest","createGetApi","url","getPost","createPostApi","user","prefix_config","login","fetchUserInfo","register","sendCode","reset","updatePassword","completeInfo","addProduct","productList","admin","manage_config","review_config","manageLogin","reviewLogin","reviewList","reviewDetail","signupScoringInfo","saveOrUpdate","useApiSelector","useUserInfo","state","dispatch","dispatchUserInfo","value","a","dispatchAsync","dataJson","error","FormItem","Item","Index","useForm","form","useParams","history","useHistory","onFinish","validateFields","values","respone","TokenService","set","token","message","success","push","layout","name","label","rules","required","placeholder","size","htmlType","block","LodingCom","children","spinning","style","height","backgroundColor","PrimaryLayout","rest","renderFn","useCallback","renderProps","Component","component","TokenServeice","isAuthenticated","location","pathname","Header","Content","Footer","Sider","useLocation","breakpoint","collapsedWidth","onBreakpoint","broken","console","log","onCollapse","collapsed","theme","mode","defaultSelectedKeys","indexOf","key","icon","FileOutlined","FileDoneOutlined","LogoutOutlined","minHeight","padding","margin","textAlign","revalidate","useConfiguration","text","record","save","id","onClick","confirm","onOk","submit","arr","filterObj","useImmer","scoring","productType","entryDirection","setState","useRequest","dataArray","isValidating","list","filter","item","allowClear","onChange","e","dart","Option","draft","dataSource","scroll","x","loading","rowKey","useEffect","setFieldsValue","signupId","goBack","bordered","span","labelCol","xs","md","wrapperCol","max","min","noStyle","shouldUpdate","getFieldsValue","sum","Object","reduce","pre","cur","Number","color","fontSize","gutter","PrimaryRoutes","match","useRouteMatch","useScrollTop","path","BaseLayout","exact","ReviewHas","ReviewTreat","Review","ManageHas","ManageTreat","ModuleRouter","Login","PrivateRoute","PrimaryRouter","complete","warning","pattern","useState","time","setTime","isShowCode","setIsShowCode","fileds","active","setInterval","preSecond","clearInterval","phone","data","maxLength","suffix","getFieldValue","validator","rule","Promise","reject","resolve","VideoCameraOutlined","UserOutlined","EyeInvisibleOutlined","email","address","contact","column","Qrcode","props","fileList","tips","uploadFileList","setUploadFilelist","triggerChange","changedValue","fileLists","uploadprops","action","OPEN_API_URL","accept","headers","tokenInstance","get","listType","PlusOutlined","marginTop","normFile","Array","isArray","getUpload","uploadResponse","map","transformUpload","prefix","response","filePath","thumbUrl","productPics","productVideos","payload","JSON","parse","stringify","Group","valuePropName","getValueFromEvent","UploadImg","TextArea","en","position","fontFamily","length","idcardBack","idcardFront","photo","province","city","county","birthday","area","moment","format","FormLabel","options","PassWord","Info","EditInfo","ProductList","ProductAdd","Register","Reset","App","NotFound","AdminRouter","userRouter","BaseUrl","upstreams","document","protocol","combineUrl","upstream","baseName","Error","window","configurations","whiteHosts","Boolean","hostname","app","Friday","onInjectConfigBefore","onInjectConfigAfter","onInjectRouterAfter","onStarted","configuration","injectConfigurations","use","require","default","injectRouters","start","navigator","serviceWorker","ready","then","registration","unregister","catch","getConfiguration","axiosConifg","baseURL","timeout","errorNotice","redirect","nextUrl","replace","axiosInstance","httpAxios","requestSuccessHook","config","responseErrorHooks","code","isApiTimeout","isNetworkError","prototype","toString","call","reader","FileReader","readAsText","onload","result","notice","axios_middleware","request_middleware","validateMessages","middlewares","locale","zhCN","tokenName","v","warn","Cookie","remove"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,kBAAZC,SAA0C,kBAAXC,OACxCA,OAAOD,QAAUD,IACQ,oBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,kBAAZC,QACdA,QAAQ,eAAiBD,IAEzBD,EAAK,eAAiBC,IARxB,CASGK,MAAM,WACT,O,mGCVA,gFAGO,EAA4DC,YAAuB,CACzFC,SAAU,GACVC,eAAe,IAFWC,EAApB,EAAQC,WAA+BC,EAAvC,EAAuCA,kB,s6BCGxCC,WAAa,SAAbA,WAAeC,WACjB,OAAOC,6CAAMC,SAAQ,WACjB,IAAMC,QAAU,CAAC,CACbC,MAAO,2BACPC,UAAW,eACZ,CACCD,MAAO,qBACPC,UAAW,cACXC,MAAO,QACPC,OAAQ,gBAACC,KACL,IAAMC,OAAS,kDAAIC,KAAKF,KAAM,OACxBG,IAAOX,UAAUY,aAAeH,OACtC,OACI,kEAAKI,UAAU,gBACX,2GAASC,QAAS,kEAAKC,IAAKJ,OACxB,kEAAKI,IAAKJ,UAK3B,CACCP,MAAO,2BACPC,UAAW,eACZ,CACCD,MAAO,2BACPC,UAAW,kBACZ,CACCD,MAAO,2BACPC,UAAW,MACXE,OAAQ,iBAAM,uBACf,CACCH,MAAO,eACPC,UAAW,MACXW,MAAO,QACPT,OAAQ,WACJ,OACI,yGAAOU,MAAO,iHACV,mEAAMJ,UAAU,aACZ,2DAAC,8CAAD,CAAMK,GAAG,wBAAT,iBAIJ,mEAAML,UAAU,aAAhB,qBAMhB,OAAOV,UAER,KAGQJ,kC,0jvTC3DA,MAA0B,mCCA1B,MAA0B,oCCA1B,MAA0B,oCCiI1BoB,G,OA1HF,WAEZ,OACC,yBAAKN,UAAU,kBACd,yBAAKA,UAAU,iBACd,yBAAKE,IAAKK,KAEX,yBAAKP,UAAU,cACd,4BACC,4BACC,wDAED,4BACC,wDAED,4BACC,wDAED,4BACC,wDAED,4BACC,wDAED,4BACC,uBAAGQ,KAAK,eAAR,6BAED,4BACC,uBAAGA,KAAK,uBAAR,6BAED,4BACC,uBAAGA,KAAK,uBAAR,yBAIH,yBAAKR,UAAU,eACd,yBAAKA,UAAU,kBACd,wDACA,26BAmBD,yBAAKA,UAAU,kBACd,wDACA,ssCAUD,yBAAKA,UAAU,kBACd,wDACA,2uHAsBD,yBAAKA,UAAU,kBACd,wDACA,uBAAGA,UAAU,MACZ,yBAAKE,IAAKO,MAGZ,yBAAKT,UAAU,kBACd,wDAEA,uBAAGA,UAAU,MAAb,sKACA,wBAAIA,UAAU,MACb,wDACA,wDACA,wDACA,0DAGF,yBAAKA,UAAU,kBACd,wDACA,uBAAGA,UAAU,MACZ,yBAAKE,IAAKQ,U,kCCtGDC,EAdC,WACf,OACC,uBACCC,OAAO,MACPrB,MAAM,MACNsB,SAAS,8CACTC,MACC,uBAAQC,KAAK,WACZ,kBAAC,IAAD,CAAMV,GAAG,KAAT,gC,iGCRQW,EAAO,CACnBC,KAAM,I,sCCANC,QAAUC,YAAkC,CAAEC,IAAK,U,KACnDC,QAAUC,YAAc,CAAEF,IAAK,gBDA/BG,KAAM,I,sCEDKC,cAAgB,Q,KAGpBC,MAAQH,YAAc,CAAEF,IAAI,GAAD,OAAKzC,KAAK6C,cAAV,Y,KAGxBE,cAAgBP,YAAkB,CAAEC,IAAI,GAAD,OAAKzC,KAAK6C,cAAV,W,KAGvCG,SAAWL,YAAkB,CAAEF,IAAI,GAAD,OAAKzC,KAAK6C,cAAV,e,KAGlCI,SAAWN,YAAmB,CAACF,IAAK,oB,KAGpCS,MAAQP,YAAmB,CAACF,IAAI,GAAD,OAAKzC,KAAK6C,cAAV,gB,KAG/BM,eAAiBR,YAAmB,CAACF,IAAI,GAAD,OAAKzC,KAAK6C,cAAV,iB,KAGxCO,aAAeT,YAAmB,CAACF,IAAI,GAAD,OAAKzC,KAAK6C,cAAV,e,KAGtCQ,WAAaV,YAAmB,CAACF,IAAI,GAAD,OAAKzC,KAAK6C,cAAV,a,KAGpCS,YAAcd,YAAkB,CAACC,IAAI,GAAD,OAAKzC,KAAK6C,cAAV,mBFzB9CU,MAAO,I,sCGFIC,cAAgB,U,KAEhBC,cAAgB,S,KAGpBC,YAAcf,YAAc,CAAEF,IAAI,GAAD,OAAKzC,KAAKwD,cAAV,Y,KAG9BG,YAAchB,YAAc,CAAEF,IAAI,GAAD,OAAKzC,KAAKyD,cAAV,Y,KAGjCG,WAAapB,YAAa,CAAEC,IAAI,GAAD,OAAKzC,KAAKyD,cAAV,W,KAG/BI,aAAerB,YAAa,CAAEC,IAAI,GAAD,OAAKzC,KAAKyD,cAAV,mB,KAGjCK,kBAAoBtB,YAAa,CAAEC,IAAI,GAAD,OAAKzC,KAAKyD,cAAV,6B,KAItCM,aAAepB,YAAc,CAAEF,IAAI,GAAD,OAAKzC,KAAKyD,cAAV,kCCnB9BO,EAJQ,WACtB,OAAO3B,G,SC2BO4B,EAxBK,WAEnB,MAA4B3D,cAApB4D,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAET9B,EAAO2B,IAEPI,EAAmB,SAACC,GACzBF,EAAS,CAAC/B,KAAM,WAAYiC,WAIvBtB,EAAa,uCAAG,8BAAAuB,EAAA,sEACaC,YAAclC,EAAKO,KAAKG,cAAc,KADnD,mBACbyB,EADa,EACbA,UADa,EACHC,MADG,iDAGrBL,EAAiBI,GAHI,2CAAH,qDAMnB,MAAO,CACNtE,SAAUgE,EAAMhE,UAAY,GAC5B6C,gBACAqB,qB,QCjBIM,G,OAAW,IAAKC,MAsEPC,EApED,WAEV,MAAe,IAAKC,UAAbC,EAAP,oBAEQ1C,EAAS2C,cAAT3C,KAEFC,EAAO2B,IAENI,EAAoBH,IAApBG,iBAEDY,EAAUC,cAGVC,EAAQ,uCAAG,8BAAAZ,EAAA,sEACQQ,EAAKK,iBADb,cACPC,EADO,gBAESb,YAAsB,UAARnC,EAAmBC,EAAKkB,MAAMI,YAAYyB,GAAU/C,EAAKkB,MAAMG,YAAY0B,IAFlG,YAEPC,EAFO,QAGDZ,MAHC,iDAIba,IAAaC,IAAb,OAAiBF,QAAjB,IAAiBA,OAAjB,EAAiBA,EAASG,MAAMA,OAChCpB,EAAiBiB,EAAQb,UACzBiB,EAAA,EAAQC,QAAQ,4BAChBV,EAAQW,KAAR,iBAAuBvD,EAAvB,QAPa,4CAAH,qDAUd,OACI,yBAAKf,UAAU,WACX,yBAAKA,UAAU,kBAAf,sBAGA,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,WAAd,gBACA,uBACIyD,KAAMA,EACNI,SAAUA,EACVU,OAAO,YAEP,kBAAClB,EAAD,CACImB,KAAK,WACLC,MAAM,eACNC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,oCAElC,uBAAQQ,YAAY,iCAAQC,KAAK,YAErC,kBAACxB,EAAD,CACImB,KAAK,WACLC,MAAM,eACNC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,oCAElC,uBAAOrD,KAAK,WAAW6D,YAAY,iCAAQC,KAAK,YAEpD,sBAAMvB,KAAN,KACI,uBACItD,UAAU,oBACVe,KAAK,UACL+D,SAAS,SACTD,KAAK,SACLE,OAAK,GALT,sB,4CCjDbC,EAXkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEhC,OACI,uBAAMC,UAAW,GACb,yBAAKC,MAAO,CAACC,OAAQ,IAAKC,gBAAiB,SACtCJ,K,eCgCFK,EAjCsB,SAAC,GAAyB,EAAvBL,SAAwB,IAAXM,EAAU,iBAE3D,EAAoC3C,IAA5B/D,EAAR,EAAQA,SAAU6C,EAAlB,EAAkBA,cACZ8D,EAAWC,uBAAY,SAACC,GAE1B,IAAmBC,EAAcJ,EAAzBK,UAGR,OAAKC,IAAcC,kBAOd,IAAQjH,IAQb6C,IACQ,kBAAC,EAAD,OAPCiE,EAGE,kBAACA,EAAcD,GAFX,KARP,kBAAC,IAAD,CACIrF,GAAE,8BAAyB0F,SAASC,cAejD,CAAEnH,IAEL,OACI,kBAAC,IAAD,iBAAW0G,EAAX,CAAiBK,UAAWJ,M,6DC9B5BS,G,OAAR,IAAQA,QAAQC,EAAhB,IAAgBA,QAASC,EAAzB,IAAyBA,OAAQC,EAAjC,IAAiCA,MAoFlB7C,EA/ED,SAAC,GAAgB,IAAf0B,EAAc,EAAdA,SAIJlE,EAFa6B,IAAb/D,SAEAkC,KAEAiF,EAAaK,cAAbL,SAWR,OACI,2BACI,kBAACI,EAAD,CACIE,WAAW,KACXC,eAAe,IACfC,aAAc,SAAAC,GACVC,QAAQC,IAAIF,IAEhBG,WAAY,SAACC,EAAW9F,GACpB2F,QAAQC,IAAIE,EAAW9F,KAG3B,yBAAKf,UAAU,WACf,uBAAM8G,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CApB1DhB,EAASiB,QAAQ,gBAAkB,EAAU,IAC7CjB,EAASiB,QAAQ,cAAgB,EAAU,IAC3CjB,EAASiB,QAAQ,gBAAkB,EAAU,KAC7CjB,EAASiB,QAAQ,aAA0B,OAmB1B,GAARlG,GACG,sBAAMuC,KAAN,CAAW4D,IAAI,IAAIC,KAAM,kBAACC,EAAA,EAAD,OACrB,kBAAC,IAAD,CAAM/G,GAAG,sBAAT,mCAKC,GAARU,GACG,sBAAMuC,KAAN,CAAW4D,IAAI,IAAIC,KAAM,kBAACE,EAAA,EAAD,OACrB,kBAAC,IAAD,CAAMhH,GAAG,oBAAT,mCAKC,GAARU,GACG,sBAAMuC,KAAN,CAAW4D,IAAI,IAAIC,KAAM,kBAACC,EAAA,EAAD,OACrB,kBAAC,IAAD,CAAM/G,GAAG,sBAAT,mCAKA,GAAPU,GACG,sBAAMuC,KAAN,CAAW4D,IAAI,IAAIC,KAAM,kBAACE,EAAA,EAAD,OACrB,kBAAC,IAAD,CAAMhH,GAAG,oBAAT,mCAKR,sBAAMiD,KAAN,CAAW4D,IAAI,IAAIC,KAAM,kBAACG,EAAA,EAAD,OACrB,kBAAC,IAAD,CAAMjH,GAAG,uBAAT,+BAMZ,uBAAQ8E,MAAO,CAACoC,UAAW,UACvB,kBAACtB,EAAD,CAAQjG,UAAU,oCAAoCmF,MAAO,CAAEqC,QAAS,KACxE,kBAACtB,EAAD,CAASf,MAAO,CAAEsC,OAAQ,gBACtB,yBAAKzH,UAAU,yBAAyBmF,MAAO,CAAEqC,QAAS,GAAID,UAAW,MACpEtC,IAGT,kBAACkB,EAAD,CAAQhB,MAAO,CAAEuC,UAAW,WAA5B,oD,gGCxBDxI,EApDI,SAACyI,GAEMC,cAAdzI,UAAR,IACM6B,EAAO2B,IAcb,OAAOvD,IAAMC,SAAQ,WA8BjB,MA7BgB,CAAC,CACbE,MAAO,2BACPC,UAAW,eACX,CACAD,MAAO,2BACPC,UAAW,eACZ,CACCD,MAAO,2BACPC,UAAW,kBACZ,CACCD,MAAO,eACPC,UAAW,OACZ,CACCD,MAAO,eACPC,UAAW,MACXW,MAAO,QACPT,OAAQ,SAACmI,EAAMC,GACX,IAAOC,EAAYD,EAAZC,KAAMC,EAAMF,EAANE,GACb,OACI,uBAAO5H,MAAO,6BACD,GAAR2H,EACG,0BAAM/H,UAAU,QAAhB,uBACA,0BAAMA,UAAU,YAAYiI,QAAS,kBAnC/C,SAACD,GACX,IAAME,QAAQ,CACVjI,QAAS,iCACTkI,KAAK,WAAD,4BAAE,4BAAAlF,EAAA,sEACoBC,YAAclC,EAAKkB,MAAMO,kBAAkB,CAACuF,QADhE,sBACK5E,MADL,iDAGFgB,EAAA,EAAQC,QAAQ,4BAChBsD,IAJE,2CAAF,kDAAC,KAgCsDS,CAAOJ,KAAlD,uBASrB,K,SCsBQzE,GAtED,WAEV,IAIiB8E,EAAKC,EAJhBtH,EAAO2B,IAcb,EAA0B4F,YAAS,CAC/BC,SAAQ,EACRC,YAAa,GACbC,eAAgB,KAHpB,mBAAO7F,EAAP,KAAc8F,EAAd,KAMA,EAA8CC,YAAW5H,EAAKkB,MAAMK,WAAW,KAAxEsG,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,aAAcnB,EAAhC,EAAgCA,WAE1BoB,GAlBWV,EAkBIQ,EAlBCP,EAkBUzF,EAjBxB,IAAQwF,GAAa,GAClBA,EAAIW,QAAO,SAAAC,GACd,OAAOA,EAAKT,SAAWF,EAAUE,WAChCF,EAAUG,aAAcQ,EAAKR,aAAgBH,EAAUG,gBACvDH,EAAUI,gBAAkBO,EAAKP,gBAAmBJ,EAAUI,oBAejEpJ,EAAUJ,EAAWyI,GAI3B,OACI,6BACI,wBAAI3H,UAAU,UAAd,kCACA,yBAAKA,UAAU,oBACX,2BACI,8DAEI,uBAAQmF,MAAO,CAAC1F,MAAO,SACnByJ,YAAU,EACVtE,YAAY,6CACZuE,SAAU,SAACC,GAAD,OAAOT,GAAS,SAAAU,GAAUA,EAAKX,eAAiBU,OAE1D,sBAAQE,OAAR,CAAetG,MAAO,kCAAtB,kCACA,sBAAQsG,OAAR,CAAetG,MAAO,kCAAtB,kCACA,sBAAQsG,OAAR,CAAetG,MAAO,8CAAtB,gDAGR,8DAEI,uBAAQmC,MAAO,CAAC1F,MAAO,SAAUyJ,YAAU,EAACtE,YAAY,6CAAUuE,SAAU,SAACC,GAAD,OAAOT,GAAS,SAAAY,GAAWA,EAAMd,YAAcW,OACvH,sBAAQE,OAAR,CAAetG,MAAO,sBAAtB,sBACA,sBAAQsG,OAAR,CAAetG,MAAO,sBAAtB,sBACA,sBAAQsG,OAAR,CAAetG,MAAO,sBAAtB,0BAKhB,uBACI1D,QAASA,EACTkK,WAAYT,EACZU,OAAQ,CACJC,EAAG,eAEPC,QAASb,EACTc,OAAQ,SCVT1K,GAzDI,WAEO0I,cAAdzI,UAER,OAAOC,IAAMC,SAAQ,WAgDjB,MA/CgB,CAAC,CACbE,MAAO,2BACPC,UAAW,eAkBf,CACID,MAAO,2BACPC,UAAW,eACZ,CACCD,MAAO,2BACPC,UAAW,kBACZ,CACCD,MAAO,eACPC,UAAW,MACXE,OAAQ,iBAAM,uBACf,CACCH,MAAO,eACPC,UAAW,MACXW,MAAO,QACPT,OAAQ,SAACmI,EAAMC,GACX,OACI,uBAAO1H,MAAO,6BACV,0BAAMJ,UAAU,aACZ,kBAAC,IAAD,CAAMK,GAAE,wBAAmByH,EAAOE,GAA1B,WAAR,6BAWrB,KCiBQzE,GApED,WAEV,IAIiB8E,EAAKC,EAJhBtH,EAAO2B,IAEPrD,EAAUJ,KAYhB,EAA0BqJ,YAAS,CAC/BC,SAAQ,EACRC,YAAa,GACbC,eAAgB,KAHpB,mBAAO7F,EAAP,KAAc8F,EAAd,KAMA,EAAkCC,YAAW5H,EAAKkB,MAAMK,WAAW,KAA5DsG,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,aAEZC,GAlBWV,EAkBIQ,EAlBCP,EAkBUzF,EAjBxB,IAAQwF,GAAa,GAClBA,EAAIW,QAAO,SAAAC,GACd,OAAOA,EAAKT,SAAWF,EAAUE,WAChCF,EAAUG,aAAcQ,EAAKR,aAAgBH,EAAUG,gBACvDH,EAAUI,gBAAkBO,EAAKP,gBAAmBJ,EAAUI,oBAiBvE,OACI,6BACI,wBAAI1I,UAAU,UAAd,kCACA,yBAAKA,UAAU,oBACX,2BACI,8DAEI,uBAAQmF,MAAO,CAAC1F,MAAO,SACnByJ,YAAU,EACVtE,YAAY,6CACZuE,SAAU,SAACC,GAAD,OAAOT,GAAS,SAAAU,GAAUA,EAAKX,eAAiBU,OAE1D,sBAAQE,OAAR,CAAetG,MAAO,kCAAtB,kCACA,sBAAQsG,OAAR,CAAetG,MAAO,kCAAtB,kCACA,sBAAQsG,OAAR,CAAetG,MAAO,8CAAtB,gDAGR,8DAEI,uBAAQmC,MAAO,CAAC1F,MAAO,SAAUyJ,YAAU,EAACtE,YAAY,6CAAUuE,SAAU,SAACC,GAAD,OAAOT,GAAS,SAAAY,GAAWA,EAAMd,YAAcW,OACvH,sBAAQE,OAAR,CAAetG,MAAO,sBAAtB,sBACA,sBAAQsG,OAAR,CAAetG,MAAO,sBAAtB,sBACA,sBAAQsG,OAAR,CAAetG,MAAO,sBAAtB,0BAKhB,uBACI1D,QAASA,EACTkK,WAAYT,EACZU,OAAQ,CACJC,EAAG,eAEPC,QAASb,EACTc,OAAQ,SC7DTrG,GARD,WACV,OACI,oDCMOA,GARD,WACV,OACI,oD,uGCEFF,GAAW,IAAKC,KAmLPC,GAjLD,WAEV,IAAMvC,EAAO2B,IAEb,EAAiB,IAAKa,UAAdC,EAAR,oBAEQuE,EAAOtE,cAAPsE,GAEA7E,EAAayF,YAAW5H,EAAKkB,MAAMM,aAAa,CAACwF,QAAjD7E,SAEFQ,EAAUC,cAEhBxE,IAAMyK,WAAU,WACP,IAAQ1G,IACTM,EAAKqG,eAAe3G,KAEzB,CAACA,IAGJ,IAAMU,EAAQ,uCAAG,WAAO9C,GAAP,eAAAkC,EAAA,sEACQQ,EAAKK,iBADb,cACPC,EADO,gBAGSb,YAAclC,EAAKkB,MAAMQ,aAAX,6BAC7BqB,GAD6B,IAEhCgG,SAAU/B,EACVD,KAAMhH,MANG,kBASDqC,MATC,iDAUbgB,EAAA,EAAQC,QAAQ,4BAChBV,EAAQqG,SAXK,4CAAH,sDAed,OACI,6BACI,wBAAIhK,UAAU,UAAd,4BACA,wBAAOoE,QAAS,yCAChB,wBAAc6F,UAAQ,EAAEjK,UAAU,kBAAkBuE,OAAO,YACvD,uBAAcjB,KAAd,CAAmBmB,MAAM,4BAAQ,KAAItB,EAAU,OAC/C,uBAAcG,KAAd,CAAmBmB,MAAM,4BAAQ,KAAItB,EAAU,mBAC/C,uBAAcG,KAAd,CAAmBmB,MAAM,4BAAQ,KAAItB,EAAU,gBAC/C,uBAAcG,KAAd,CAAmBmB,MAAM,0CAAY,KAAItB,EAAU,gBACnD,uBAAcG,KAAd,CAAmBmB,MAAM,0CACpB,KAAItB,EAAU,kBAAoB,MAEvC,uBAAcG,KAAd,CAAmBmB,MAAM,sBACpB,KAAItB,EAAU,kBAAoB,MAEvC,uBAAcG,KAAd,CAAmBmB,MAAM,2BAAOyF,KAAM,IAGtC,uBAAc5G,KAAd,CAAmBmB,MAAM,2BAAOyF,KAAM,IAGtC,uBAAc5G,KAAd,CAAmBmB,MAAM,uEAAgByF,KAAM,GAC1C,KAAI/G,EAAU,gBAAkB,MAErC,uBAAcG,KAAd,CAAmBmB,MAAM,uEAAgByF,KAAM,GAC1C,KAAI/G,EAAU,kBAAoB,OAK3C,wBAAOiB,QAAS,iBAEhB,uBACIX,KAAMA,EACN0G,SAAU,CACNC,GAAG,EACHC,GAAG,GAEPC,WAAY,CACRF,GAAI,GACJC,GAAI,IAERrK,UAAU,WAEV,kBAAC,GAAD,CACIyE,MAAO,wBACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,2BAClCI,KAAK,SAEL,uBAAOI,YAAY,yBAAU2F,IAAK,GAAIC,IAAK,KAG/C,kBAAC,GAAD,CACI/F,MAAO,wBACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,2BAClCI,KAAK,SAEL,uBAAOI,YAAY,yBAAU2F,IAAK,GAAIC,IAAK,KAG/C,kBAAC,GAAD,CACI/F,MAAO,wBACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,2BAClCI,KAAK,SAEL,uBAAOI,YAAY,yBAAU2F,IAAK,GAAIC,IAAK,KAG/C,kBAAC,GAAD,CACI/F,MAAO,wBACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,2BAClCI,KAAK,SAEL,uBAAOI,YAAY,yBAAU2F,IAAK,GAAIC,IAAK,KAG/C,kBAAC,GAAD,CACI/F,MAAO,wBACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,2BAClCI,KAAK,SAEL,uBAAOI,YAAY,yBAAU2F,IAAK,GAAIC,IAAK,KAG/C,kBAAC,GAAD,CACI/F,MAAO,8BACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,2BAClCI,KAAK,SAEL,uBAAOI,YAAY,yBAAU2F,IAAK,GAAIC,IAAK,KAE/C,kBAAC,GAAD,CACIC,SAAO,EACPC,cAAc,IAEb,YAAyB,IAAtBC,EAAqB,EAArBA,eAEMC,EADSC,OAAO9G,OAAO4G,KAAkB3B,QAAO,SAAAC,GAAI,OAAIA,KAC3C6B,QAAO,SAACC,EAAKC,GAE5B,OADAD,EAAME,OAAOF,GAAOE,OAAOD,KAE5B,GACH,OACI,sBAAM1H,KAAN,CACImB,MAAO,sBAEP,yBAAKU,MAAO,CAAC+F,MAAO,MAAOC,SAAU,SAChCP,OAMrB,yBAAK5K,UAAU,KAAKmF,MAAO,CAAC1F,MAAO,QAASgI,OAAQ,WAChD,wBAAK2D,OAAQ,IACT,wBAAKlB,KAAM,IACP,uBACIrF,KAAK,SACLoD,QAAS,kBAAMpE,EAAS,IACxBkB,OAAK,GAHT,iBAQJ,wBAAKmF,KAAM,IACP,uBACInJ,KAAK,UACL+D,SAAS,SACTD,KAAK,SACLoD,QAAS,kBAAMpE,EAAS,IACxBkB,OAAK,GALT,sBC5IbsG,GAfO,WAClB,IAAMC,EAAQC,cAGd,OAFAC,cACA9E,QAAQC,IAAR,UAAe2E,EAAMG,KAArB,eAEI,kBAACC,EAAD,KACI,kBAAC,IAAD,CAAOD,KAAI,UAAKH,EAAMG,KAAX,cAA6BE,OAAK,EAAC/F,UAAWgG,KACzD,kBAAC,IAAD,CAAOH,KAAI,UAAKH,EAAMG,KAAX,gBAA+BE,OAAK,EAAE/F,UAAWiG,KAC5D,kBAAC,IAAD,CAAOJ,KAAI,UAAKH,EAAMG,KAAX,qBAAoCE,OAAK,EAAC/F,UAAWkG,KAChE,kBAAC,IAAD,CAAOL,KAAI,UAAKH,EAAMG,KAAX,cAA6B7F,UAAWmG,KACnD,kBAAC,IAAD,CAAON,KAAI,UAAKH,EAAMG,KAAX,gBAA+B7F,UAAWoG,OCNlDC,GAVM,WACpB,IAAMX,EAAQC,cACX,OACF,kBAAC,IAAD,KACU,kBAAC,IAAD,CAAOE,KAAI,UAAKH,EAAMG,KAAX,gBAA+BE,OAAK,EAAC/F,UAAWsG,IAC3D,kBAACC,EAAD,CAAcV,KAAI,UAAKH,EAAMG,MAAQ7F,UAAWwG,OCDtD/I,I,OAAW,IAAKC,MA8FPC,GA5FD,WAEV,MAAe,IAAKC,UAAbC,EAAP,oBAEMzC,EAAO2B,IAENI,EAAoBH,IAApBG,iBAEDY,EAAUC,cAGVC,EAAQ,uCAAG,8BAAAZ,EAAA,sEACQQ,EAAKK,iBADb,cACPC,EADO,gBAESb,YAAclC,EAAKO,KAAKE,MAAMsC,IAFvC,YAEPC,EAFO,QAGDZ,MAHC,iDAIba,IAAaC,IAAb,OAAiBF,QAAjB,IAAiBA,OAAjB,EAAiBA,EAASG,MAAMA,OAChCpB,EAAiBiB,EAAQb,UACJa,EAAQb,SAArBkJ,UAEJjI,EAAA,EAAQC,QAAQ,4BAChBV,EAAQW,KAAK,gBAEbF,EAAA,EAAQkI,QAAQ,8CAChB3I,EAAQW,KAAK,oBAZJ,4CAAH,qDAgBd,OACI,yBAAKtE,UAAU,WACX,yBAAKA,UAAU,kBAAf,sBAGA,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,WAAd,gBACA,uBAAMyD,KAAMA,EACRI,SAAUA,EACVU,OAAO,YAEP,kBAAC,GAAD,CACIE,MAAM,qBACND,KAAK,WACLE,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,yDACTmI,QAAS,uBAGb,uBAAQ3H,YAAY,uCAASC,KAAK,YAEtC,kBAAC,GAAD,CACIJ,MAAM,eACND,KAAK,WACLE,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,oCAElC,uBACIrD,KAAK,WACL6D,YAAY,iCACZC,KAAK,YAGb,sBAAMvB,KAAN,KACI,uBACItD,UAAU,oBACVe,KAAK,UACL+D,SAAS,SACTD,KAAK,SACLE,OAAK,GALT,kBAWR,yBAAK/E,UAAU,cAAcmF,MAAO,CAACgG,SAAU,SAC3C,kBAAC,IAAD,CAAM9K,GAAG,cAAcL,UAAU,QAAjC,6BAIJ,yBAAKA,UAAU,kBAAkBmF,MAAO,CAACgG,SAAU,SAAnD,mCACA,6BACI,uBAAQpG,OAAK,GACT,kBAAC,IAAD,CAAM1E,GAAG,kBAAT,sB,qBCnFtBgD,GAAW,IAAKC,KA+HPC,GA7HD,WAEV,MAAe,IAAKC,UAAbC,EAAP,oBACMzC,EAAO2B,IAEb,EAAwB6J,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,oBAAkB,GAAtD,mBAAOG,EAAP,KAAmBC,EAAnB,KACMjJ,EAAUC,cAEVhC,EAAQ,uCAAG,oCAAAqB,EAAA,sEACQQ,EAAKK,eAAe,CAAC,UAD7B,UACP+I,EADO,QAETF,EAFS,wDAKbC,GAAc,GACRE,EAASC,aAAY,WACvBL,GAAQ,SAACM,GACP,OAAIA,GAAa,GACfJ,GAAc,GACdK,cAAcH,GAEP,IAEFE,EAAY,OAEtB,KACKE,EAAUL,EAAVK,MAjBK,UAkBiBhK,YAAclC,EAAKO,KAAKK,SAAS,CAC3DsL,QACAnM,KAAM,KApBG,oBAkBLqC,EAlBK,EAkBLA,MAlBK,EAkBE+J,MAIX/J,EAtBS,0CAsBKgB,EAAA,EAAQhB,MAAMA,IAtBnB,QAuBbgB,EAAA,EAAQC,QAAQ,4BAvBH,4CAAH,qDA0BRR,EAAQ,uCAAG,4BAAAZ,EAAA,sEACQQ,EAAKK,iBADb,cACPC,EADO,gBAESb,YAAclC,EAAKO,KAAKI,SAAV,gBAC7B,KAAKoC,EAAQ,UAHP,kBAKDX,MALC,iDAMbgB,EAAA,EAAQC,QAAQ,4BAChBV,EAAQW,KAAK,SAPA,4CAAH,qDAUd,OACI,yBAAKtE,UAAU,WACX,yBAAKA,UAAU,kBAAf,sBAGA,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,WAAd,gBACA,uBAAMyD,KAAMA,EACR0G,SAAU,CAAED,KAAM,GAClBrG,SAAUA,EACVU,OAAO,YAEP,kBAAC,GAAD,CACIC,KAAK,QACLC,MAAM,qBACNC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,+DAAcmI,QAAS,uBAEzD,uBAAO3H,YAAY,6CAAUC,KAAK,YAEtC,kBAAC,GAAD,CACIL,KAAK,OACLC,MAAM,qBACNC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,0CAElC,uBACIQ,YAAY,6CACZC,KAAK,SACLuI,UAAW,EACXC,OAAQ,uBAAGpF,QAAS,kBAAMrG,MACvB+K,EAAU,UAAMF,EAAN,wCAAqB,qCAI1C,kBAAC,GAAD,CACIjI,KAAK,WACLC,MAAM,eACNC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,oCAElC,uBAAQrD,KAAK,WAAW6D,YAAY,mEAAiBC,KAAK,YAE9D,kBAAC,GAAD,CACIL,KAAK,MACLC,MAAM,2BACNC,MAAO,CACH,gBAAE4I,EAAF,EAAEA,cAAF,MAAoB,CAChBC,UADgB,SACNC,EAAKxK,GACX,OAAIA,GAASsK,EAAc,cAAgBtK,EAGpCyK,QAAQC,OAAO,0DAFXD,QAAQE,eAO/B,uBAAO5M,KAAK,WAAW6D,YAAY,6CAAUC,KAAK,YAEtD,sBAAMvB,KAAN,CAAYgH,WAAY,CAACJ,KAAM,KAC3B,uBACIlK,UAAU,oBACVe,KAAK,UACL+D,SAAS,SACTD,KAAK,SACLE,OAAK,GALT,iBAUJ,yBAAK/E,UAAU,cAAcmF,MAAO,CAACgG,SAAU,SAC3C,kBAAC,IAAD,CAAM9K,GAAG,cAAcL,UAAU,QAAjC,gECvHtBqD,GAAW,IAAKC,KAwHPC,GAtHD,WAEV,MAAe,IAAKC,UAAbC,EAAP,oBACMzC,EAAO2B,IAEb,EAAwB6J,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,oBAAkB,GAAtD,mBAAOG,EAAP,KAAmBC,EAAnB,KACMjJ,EAAUC,cAEVhC,EAAQ,uCAAG,oCAAAqB,EAAA,sEACQQ,EAAKK,eAAe,CAAC,UAD7B,UACP+I,EADO,QAETF,EAFS,wDAKbC,GAAc,GACRE,EAASC,aAAY,WACvBL,GAAQ,SAACM,GACP,OAAIA,GAAa,GACfJ,GAAc,GACdK,cAAcH,GAEP,IAEFE,EAAY,OAEtB,KACKE,EAAUL,EAAVK,MAjBK,UAkBiBhK,YAAclC,EAAKO,KAAKK,SAAS,CAC3DsL,QACAnM,KAAM,KApBG,oBAkBLqC,EAlBK,EAkBLA,MAlBK,EAkBE+J,MAIX/J,EAtBS,0CAsBKgB,EAAA,EAAQhB,MAAMA,IAtBnB,QAuBbgB,EAAA,EAAQC,QAAQ,4BAvBH,4CAAH,qDA0BRR,EAAQ,uCAAG,4BAAAZ,EAAA,sEACQQ,EAAKK,iBADb,cACPC,EADO,gBAESb,YAAclC,EAAKO,KAAKM,MAAMkC,IAFvC,kBAGDX,MAHC,iDAIbgB,EAAA,EAAQC,QAAQ,4BAChBV,EAAQW,KAAK,eALA,4CAAH,qDAQd,OACI,yBAAKtE,UAAU,WACX,yBAAKA,UAAU,kBAAf,sBAGA,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,WAAd,4BACA,uBACIyD,KAAMA,EACN0G,SAAU,CAAED,KAAM,GAClBrG,SAAUA,EACVU,OAAO,YAGP,kBAAC,GAAD,CACIC,KAAK,QACLC,MAAM,qBACNC,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,yDACTmI,QAAS,uBAGb,uBAAQ3H,YAAY,uCAASC,KAAK,YAEtC,kBAAC,GAAD,CACIL,KAAK,OACLC,MAAM,qBACNC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,0CAElC,uBACIQ,YAAY,6CACZC,KAAK,SACLuI,UAAW,EACXC,OAAQ,uBAAGpF,QAAS,kBAAMrG,MACvB+K,EAAU,UAAMF,EAAN,wCAAqB,qCAI1C,kBAAC,GAAD,CACIjI,KAAK,SACLC,MAAM,qBACNC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,0CAElC,uBAAOrD,KAAK,WAAW6D,YAAY,uCAASC,KAAK,YAErD,sBAAMvB,KAAN,KACI,wBAAK8H,OAAQ,IACT,wBAAKlB,KAAM,IACP,uBAAQnF,OAAK,GACT,kBAAC,IAAD,CAAM1E,GAAG,eAAT,kBAGR,wBAAK6J,KAAM,IACP,uBACIlK,UAAU,oBACVe,KAAK,UACL+D,SAAS,SACTD,KAAK,SACLE,OAAK,GALT,wB,gBCrErBO,GA/BsB,SAAC,GAAyB,EAAvBL,SAAwB,IAAXM,EAAU,kBAE3D,EAAoC3C,IAA5B/D,EAAR,EAAQA,SAAU6C,EAAlB,EAAkBA,cACZ8D,EAAWC,uBAAY,SAACC,GAE1B,IAAmBC,EAAcJ,EAAzBK,UACR,OAAKC,IAAcC,kBAOd,IAAQjH,IAQb6C,IACQ,kBAAC,EAAD,OAPCiE,EAGE,kBAACA,EAAcD,GAFX,KARP,kBAAC,IAAD,CACIrF,GAAE,2BAAsB0F,SAASC,cAe9C,CAAEnH,IAEL,OACI,kBAAC,IAAD,iBAAW0G,EAAX,CAAiBK,UAAWJ,M,8BC3B5BS,I,OAAR,IAAQA,QAAQC,GAAhB,IAAgBA,QAASC,GAAzB,IAAyBA,OAAQC,GAAjC,IAAiCA,MAgElB7C,GA3DD,SAAC,GAAgB,IAAf0B,EAAc,EAAdA,SAEJe,EAAaK,cAAbL,SASR,OACI,uBAAQhG,UAAU,qCACd,kBAAC,GAAD,CACIsG,WAAW,KACXC,eAAe,IACfC,aAAc,SAAAC,GACVC,QAAQC,IAAIF,IAEhBG,WAAY,SAACC,EAAW9F,GACpB2F,QAAQC,IAAIE,EAAW9F,KAG3B,yBAAKf,UAAU,WACf,uBAAM8G,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAnB1DhB,EAASiB,QAAQ,YAAc,EAAU,IACzCjB,EAASiB,QAAQ,SAAW,EAAU,IACtCjB,EAASiB,QAAQ,aAAe,EAAU,IACvC,MAiBK,sBAAM3D,KAAN,CAAW4D,IAAI,IAAIC,KAAM,kBAACyG,GAAA,EAAD,OACrB,kBAAC,IAAD,CAAMvN,GAAG,iBAAT,6BAIJ,sBAAMiD,KAAN,CAAW4D,IAAI,IAAIC,KAAM,kBAAC0G,GAAA,EAAD,OACrB,kBAAC,IAAD,CAAMxN,GAAG,cAAT,6BAIJ,sBAAMiD,KAAN,CAAW4D,IAAI,IAAIC,KAAM,kBAAC2G,GAAA,EAAD,OACrB,kBAAC,IAAD,CAAMzN,GAAG,kBAAT,6BAIJ,sBAAMiD,KAAN,CAAW4D,IAAI,IAAIC,KAAM,kBAACG,EAAA,EAAD,OACrB,kBAAC,IAAD,CAAMjH,GAAG,eAAT,+BAMZ,uBAAQ8E,MAAO,CAACoC,UAAW,UACvB,kBAAC,GAAD,CAAQvH,UAAU,oCAAoCmF,MAAO,CAAEqC,QAAS,KACxE,kBAAC,GAAD,CAASrC,MAAO,CAAEsC,OAAQ,gBACtB,yBAAKzH,UAAU,yBAAyBmF,MAAO,CAAEqC,QAAS,GAAID,UAAW,MACpEtC,IAGT,kBAAC,GAAD,CAAQE,MAAO,CAAEuC,UAAW,WAA5B,oDCrCDnE,GAvBD,WAEV,IAAMvC,EAAO2B,IAELQ,EAAayF,YAAW5H,EAAKO,KAAKG,cAAc,KAAhDyB,SAERuD,QAAQC,IAAIxD,EAAU,YAEtB,IAAQqB,EAAiCrB,EAAjCqB,KAAMuJ,EAA2B5K,EAA3B4K,MAAOC,EAAoB7K,EAApB6K,QAASC,EAAW9K,EAAX8K,QAG9B,OACI,6BACI,wBAAIjO,UAAU,UAAd,4BACA,wBAAcT,MAAOiF,EAAM1D,MAAO,uBAAQC,KAAK,WAAU,kBAAC,IAAD,CAAMV,GAAG,mBAAT,yCAAmD6N,OAAQ,GAChH,uBAAc5K,KAAd,CAAmBmB,MAAM,4BAAQsJ,GACjC,uBAAczK,KAAd,CAAmBmB,MAAM,4BAAQuJ,GACjC,uBAAc1K,KAAd,CAAmBmB,MAAM,4BAAQwJ,M,UCiBlC1K,GA/BD,WAEV,IAAMvC,EAAO2B,IAELxD,EAAcyI,cAAdzI,UAEFG,EAAUJ,aAAWC,GAE3B,EAAiCyJ,YAAW5H,EAAKO,KAAKU,YAAY,KAA3DkB,EAAP,EAAOA,SAAU2F,EAAjB,EAAiBA,aAGjB,OACI,6BAEI,yBAAK9I,UAAU,WACX,uBAAQe,KAAK,WAAU,kBAAC,IAAD,CAAMV,GAAG,qBAAT,8BAG3B,uBACIf,QAASA,EACTkK,WAAY,CAAC,6BAAIrG,GAAL,IAAe6E,GAAI,KAC/B2B,QAASb,EACTc,OAAO,KACPH,OAAQ,CACJC,EAAG,mB,+CC2BRyE,GArDA,SAACC,GAEZ,MAAsFA,EAA9EC,gBAAR,MAAmB,GAAnB,EAAuBlF,EAA+DiF,EAA/DjF,SAAvB,EAAsFiF,EAArDE,YAAjC,MAAwC,uFAAxC,IAAsFF,EAAlB7O,aAApE,MAA0E,2BAA1E,EAEA,EAA4CiN,mBAAgB,IAA5D,mBAAO+B,EAAP,KAAuBC,EAAvB,KAEQrP,EAAcyI,cAAdzI,UAEFsP,EAAgB,SAAAC,GACdvF,GACAA,EAAS,2BAAEoF,kBAAmBF,GAAaK,KAS7CC,EAAYN,GAAYE,EAExBK,EAAc,CAChBpK,KAAM,UACNqK,OAAQ1P,EAAU2P,aAAe,eACjCC,OAAQ,iCACRC,QAAS,CACL7K,MAAO8K,IAAcC,OAEzB/F,SAdmB,SAAC,GAAkB,IAAhBkF,EAAe,EAAfA,SACtBG,EAAkBH,GAClBI,EAAc,CAAEJ,cAahBA,SAAUM,GAId,OACI,6BACI,yBAAK3O,UAAU,YACX,sCACImP,SAAS,eACTnP,UAAU,qBACN4O,GAGJ,6BACI,kBAACQ,GAAA,EAAD,MACA,yBAAKjK,MAAO,CAAEkK,UAAW,IAAM9P,MAI3C,yBAAK4F,MAAO,CAAEgG,SAAU,OAAQD,MAAO,OAAQmE,UAAW,KAAQf,KC7CxEjL,GAAW,IAAKC,KAEhBgM,GAAW,SAAClG,GACd,OAAImG,MAAMC,QAAQpG,GACPA,EAEJA,GAAKA,EAAEiF,UAGZoB,GAAY,SAACC,GAEf,OAAI,IAAQA,GAAwB,GAC7BA,EAAeC,KAAI,SAAA1G,GACtB,OAAO,KAAIA,EAAM,sBAAwB,OAI3C2G,GAAkB,WAAsB,IAArBnE,EAAoB,uDAAf,GAAIoE,EAAW,uCACzC,OAAI,IAAQpE,GAAc,GACnBA,EAAKkE,KAAI,SAAA1G,GACZ,MAAO,CACH6G,SAAU,CACN3C,KAAM,CACF1B,KAAMxC,GAEV8G,SAAU9G,GAEdrI,OAAQ,OACRoP,SAAUH,EAAS5G,OA8JhB1F,GAxJD,WACV,IAAMvC,EAAO2B,IAEb,EAAiB,IAAKa,UAAdC,EAAR,oBAEQuE,EAAOtE,cAAPsE,GAED7E,EAAYyF,YAAWZ,EAAKhH,EAAKO,KAAKU,YAAY,IAAK,MAAvDkB,SAEChE,EAAcyI,cAAdzI,UAERC,IAAMyK,WAAU,WACZ,IAAK,IAAQ1G,GAAW,CACpB,IAAO8M,EAA8B9M,EAA9B8M,YAAaC,EAAiB/M,EAAjB+M,cACpBxJ,QAAQC,WAAWsJ,GACnB,IAAME,EAAO,6BACNhN,GADM,IAET8M,YAAaL,GAAgBQ,KAAKC,MAAMJ,GAAc9Q,EAAUY,cAChEmQ,cAAeN,GAAgBQ,KAAKC,MAAMH,GAAgB/Q,EAAUY,gBAExE0D,EAAKqG,eAAeqG,MAEzB,CAAChN,IAEJ,IAAMQ,EAAUC,cAIVC,EAAQ,uCAAG,gCAAAZ,EAAA,sEACQQ,EAAKK,iBADb,cACPC,EADO,OAENkM,EAA8BlM,EAA9BkM,YAAaC,EAAiBnM,EAAjBmM,cAFP,SAGShN,YAAclC,EAAKO,KAAKS,WAAV,6BAC7B+B,GAD6B,IAEhCkM,YAAaG,KAAKE,UAAUb,GAAUQ,IACtCC,cAAeE,KAAKE,UAAUb,GAAUS,QAN/B,kBASD9M,MATC,iDAUbgB,EAAA,EAAQC,QAAQ,4BAChBV,EAAQqG,SAXK,4CAAH,qDAcd,OACI,6BACI,wBAAIhK,UAAU,UAAd,4BACA,uBACIyD,KAAMA,EACN0G,SAAU,CACNC,GAAG,GACHC,GAAG,GAEPC,WAAY,CACRF,GAAI,GACJC,GAAI,IAERxG,SAAUA,GAEV,kBAAC,GAAD,CACIY,MAAO,2BACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,+CAClCI,KAAK,eAEL,uBAAO+L,MAAP,KACI,wBAAOvN,MAAO,sBAAd,sBACA,wBAAOA,MAAO,sBAAd,sBACA,wBAAOA,MAAO,sBAAd,wBAIR,kBAAC,GAAD,CACIyB,MAAO,2BACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,+CAClCI,KAAK,kBAEL,uBAAO+L,MAAP,KACI,wBAAOvN,MAAO,kCAAd,kCACA,wBAAOA,MAAO,kCAAd,kCACA,wBAAOA,MAAO,8CAAd,gDAKR,kBAAC,GAAD,CACIyB,MAAO,yCACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,6DAClCI,KAAK,eAEL,uBAAOI,YAAY,8DAEvB,kBAAC,GAAD,CACIH,MAAO,yCACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,6DAClCI,KAAK,iBAEL,uBAAOI,YAAY,8DAEvB,kBAAC,GAAD,CACIH,MAAO,qBACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,yCAClCI,KAAK,iBAEL,uBAAOI,YAAY,0CAGvB,kBAAC,GAAD,CACIH,MAAO,2BACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,+CAClCI,KAAK,cACLgM,cAAc,WACdC,kBAAmBnB,IAEnB,kBAACoB,GAAD,CAAWnR,MAAM,8BAErB,kBAAC,GAAD,CACIkF,MAAO,2BACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,+CAClCI,KAAK,gBACLgM,cAAc,WACdC,kBAAmBnB,IAEnB,kBAACoB,GAAD,CAAWnR,MAAM,8BAErB,kBAAC,GAAD,CACIkF,MAAO,uEACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,2FAClCI,KAAK,eAEL,sBAAOmM,SAAP,CAAgB/L,YAAY,4FAEhC,kBAAC,GAAD,CACIH,MAAO,uEACPC,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,2FAClCI,KAAK,iBAEL,sBAAOmM,SAAP,CAAgB/L,YAAY,4FAEhC,yBAAK5E,UAAU,KAAKmF,MAAO,CAAC1F,MAAO,QAASgI,OAAQ,WAChD,uBACI1G,KAAK,UACL+D,SAAS,SACTD,KAAK,SACLE,OAAK,GAJT,oBChLd1B,GAAW,IAAKC,KA4CPC,GA1CD,WACV,MAAe,IAAKC,UAAbC,EAAP,oBACMzC,EAAO2B,IAEPkB,EAAQ,uCAAG,4BAAAZ,EAAA,sEACQQ,EAAKK,iBADb,cACPC,EADO,gBAESb,YAAclC,EAAKO,KAAKO,eAAeiC,IAFhD,kBAGDX,MAHC,iDAIbgB,EAAA,EAAQC,QAAQ,4BAJH,2CAAH,qDAMd,OACI,6BACI,wBAAIrE,UAAU,UAAd,4BACA,uBACIyD,KAAMA,EACN0G,SAAU,CAACD,KAAM,GACjBrG,SAAUA,GAEV,kBAAC,GAAD,CAAUW,KAAK,QAAQC,MAAM,sBACzB,uBAAQG,YAAY,yDAAYC,KAAK,YAEzC,kBAAC,GAAD,CAAUL,KAAK,SAASC,MAAM,sBAC1B,uBAAQG,YAAY,yDAAY7D,KAAK,WAAW8D,KAAK,YAEzD,kBAAC,GAAD,CAAUL,KAAK,SAASC,MAAM,sBAC1B,uBAAQG,YAAY,yDAAY7D,KAAK,WAAW8D,KAAK,YAEzD,yBAAK7E,UAAU,KAAKmF,MAAO,CAAC1F,MAAO,QAASgI,OAAQ,WAChD,uBACI1G,KAAK,UACL+D,SAAS,SACTD,KAAK,SACLE,OAAK,GAJT,oB,sCCtBLxB,GAVD,SAAC6K,GACX,IAAO5J,EAAuB4J,EAAvB5J,KAAMoM,EAAiBxC,EAAjBwC,GAAKjM,EAAYyJ,EAAZzJ,SAClB,OACI,yBAAKQ,MAAO,CAAC0L,SAAU,aACnB,0BAAM7Q,UAAU,MAAMmF,MAAO,CAAC2L,WAAY,uBAAwBnM,EAAW,IAAM,IADvF,IACmGH,EAC/F,yBAAKW,MAAO,CAAEgG,SAAU,OAAQD,MAAO,SAAU0F,K,UCqD9CzC,GAtDA,SAACC,GAEZ,MAAqFA,EAA7EC,gBAAR,MAAmB,GAAnB,EAAuBlF,EAA8DiF,EAA9DjF,SAAvB,EAAqFiF,EAApDE,YAAjC,MAAwC,uFAAxC,IAAqFF,EAAjB7O,aAApE,MAA0E,2BAA1E,EAEA,EAA4CiN,mBAAgB,IAA5D,mBAAO+B,EAAP,KAAuBC,EAAvB,KAEQrP,EAAcyI,cAAdzI,UAEFsP,EAAgB,SAAAC,GACdvF,GACAA,EAAS,2BAAEoF,kBAAmBF,GAAaK,KAS7CC,EAAYN,GAAYE,EAExBK,EAAc,CAChBpK,KAAM,UACNqK,OAAQ1P,EAAU2P,aAAe,eACjCC,OAAQ,iCACRC,QAAS,CACL7K,MAAO8K,IAAcC,OAEzB/F,SAdmB,SAAC,GAAkB,IAAhBkF,EAAe,EAAfA,SACtBG,EAAkBH,GAClBI,EAAc,CAAEJ,cAahBA,SAAUM,GAId,OACI,6BACI,yBAAK3O,UAAU,YACX,sCACImP,SAAS,eACTnP,UAAU,qBACN4O,GAEHP,EAAS0C,OAAS,EAAI,KACnB,6BACI,kBAAC3B,GAAA,EAAD,MACA,yBAAKjK,MAAO,CAAEkK,UAAW,IAAM9P,MAK/C,yBAAK4F,MAAO,CAAEgG,SAAU,OAAQD,MAAO,OAAQmE,UAAW,KAAQf,K,oBC3CxEjL,I,OAAW,IAAKC,MAGhBgM,GAAW,SAAClG,GACd,OAAImG,MAAMC,QAAQpG,GACPA,EAEJA,GAAKA,EAAEiF,UAGZoB,GAAY,SAACC,GAEf,OAAI,IAAQA,GAAyB,GAE9B,KAAIA,EAAgB,0BAA4B,IAGrDE,GAAkB,SAACnE,EAAMoE,GAE3B,OAAKpE,EAEE,CAAC,CACJqE,SAAU,CACN3C,KAAM,CACF1B,KAAMA,GAEVsE,SAAUtE,GAEd7K,OAAQ,OACRoP,SAAUH,EAASpE,IAVL,IA+SPlI,GAhSD,WAEV,MAAe,IAAKC,UAAbC,EAAP,oBAEMzC,EAAO2B,IAEPgB,EAAUC,cAERzE,EAAcyI,cAAdzI,UAEAgE,EAAayF,YAAW5H,EAAKO,KAAKG,cAAc,KAAhDyB,SAER/D,IAAMyK,WAAU,WACZ,IAAK,IAAQ1G,GAAW,CAEpB,IAAO6N,EAAoE7N,EAApE6N,WAAYC,EAAwD9N,EAAxD8N,YAAaC,EAA2C/N,EAA3C+N,MAAOC,EAAoChO,EAApCgO,SAAUC,EAA0BjO,EAA1BiO,KAAMC,EAAoBlO,EAApBkO,OAAQC,EAAYnO,EAAZmO,SACzDC,EAAO,CAACJ,EAAUC,EAAMC,GACxBlB,EAAO,6BACN,KAAKhN,EAAU,CAAC,WAAW,aAAc,cAAe,WADlD,IAEToO,OACAP,WAAYpB,GAAgBoB,EAAY7R,EAAUY,cAClDkR,YAAarB,GAAgBqB,EAAa9R,EAAUY,cACpDuR,SAAUE,KAAOF,GACjBJ,MAAOtB,GAAgBsB,EAAO/R,EAAUY,gBAE5C2G,QAAQC,IAAIwJ,EAAS,WACrB1M,EAAKqG,eAAeqG,MAEzB,CAAChN,IAEJ,IAAMU,EAAQ,uCAAG,8CAAAZ,EAAA,sEACQQ,EAAKK,iBADb,cACPC,EADO,OAELuN,EAAmDvN,EAAnDuN,SAAUC,EAAyCxN,EAAzCwN,KAAMP,EAAmCjN,EAAnCiN,WAAYC,EAAuBlN,EAAvBkN,YAAaC,EAAUnN,EAAVmN,MAFpC,cAGoBK,EAHpB,GAGNJ,EAHM,KAGIC,EAHJ,KAGUC,EAHV,cAISnO,YAAclC,EAAKO,KAAKQ,aAAV,6BAC7B,KAAKgC,EAAQ,CAAC,WAAY,OAAQ,aAAc,cAAe,WADlC,IAEhCuN,SAAUE,KAAOF,GAAUG,OAAO,cAClCN,WACAC,OACAC,SACAL,WAAYvB,GAAUuB,GACtBC,YAAaxB,GAAUwB,GACvBC,MAAOzB,GAAUyB,OAZR,kBAcD9N,MAdC,mDAebgB,EAAA,EAAQC,QAAQ,4BAChBV,EAAQW,KAAK,cAhBA,4CAAH,qDAoBd,OACI,yBAAKtE,UAAU,UACX,wBAAIA,UAAU,UAAd,wCACA,uBACIyD,KAAMA,EACN0G,SAAU,CAACD,KAAM,GACjBrG,SAAUA,GAEV,wBAAKuH,OAAQ,IACT,wBAAKlB,KAAM,GAAIE,GAAI,GAAIC,GAAI,IACvB,kBAAC,GAAD,CACI5F,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,qBAAMoM,GAAG,YAAYjM,UAAQ,IACpDD,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,yCAClCI,KAAK,YAEL,uBAAOI,YAAY,0CAEvB,kBAAC,GAAD,CACIH,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,eAAKoM,GAAG,OAAOjM,UAAQ,IAC9CD,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,mCAEbI,KAAK,QAEL,uBAAOI,YAAY,oCAEvB,kBAAC,GAAD,CACIH,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,eAAKoM,GAAG,SAASjM,UAAQ,IAChDD,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,mCAEbI,KAAK,OAEL,uBAAO+L,MAAP,KACI,wBAAOvN,MAAO,GAAd,UACA,wBAAOA,MAAO,GAAd,YAGR,kBAAC,GAAD,CACIyB,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,eAAKoM,GAAG,QAAQjM,UAAQ,IAC/CD,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,mCAEbpE,UAAU,UACVwQ,cAAc,WACdC,kBAAmBnB,GACnB9K,KAAK,SAEL,kBAAC,GAAD,QAGR,wBAAK0F,KAAM,GAAIE,GAAI,GAAIC,GAAI,IACvB,kBAAC,GAAD,CACI5F,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,mCAAUoM,GAAG,eAAcjM,UAAQ,IAC1DD,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,qDAEbI,KAAK,YAEL,wBAAYW,MAAO,CAAC1F,MAAO,WAE/B,kBAAC,GAAD,CACIgF,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,iCAAQoM,GAAG,gBAAejM,UAAQ,IACzDD,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,qDAEbI,KAAK,UAEL,6BAEJ,kBAAC,GAAD,CACIC,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,uCAASoM,GAAG,iBAAgBjM,UAAQ,IAC3DH,KAAK,cACLxE,UAAU,UACVwQ,cAAc,WACdC,kBAAmBnB,IAEnB,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CACI7K,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,uCAASoM,GAAG,iBAAgBjM,UAAQ,IAC3DH,KAAK,aACLxE,UAAU,UACVwQ,cAAc,WACdC,kBAAmBnB,IAEnB,kBAAC,GAAD,SAKZ,wBAAKlE,OAAQ,GAAIpL,UAAU,WACvB,wBAAKkK,KAAM,GAAIE,GAAI,GAAIC,GAAI,IACvB,kBAAC,GAAD,CACI5F,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,eAAKoM,GAAG,eAAcjM,UAAQ,IACrDH,KAAK,aACLE,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,oCAGb,6BAEJ,kBAAC,GAAD,CACIK,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,eAAKoM,GAAG,eAAejM,UAAQ,IACtDH,KAAK,OACLE,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,oCAGb,wBAAWuN,QAASA,MAExB,kBAAC,GAAD,CACIlN,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,2BAAOoM,GAAG,yBAAyBjM,UAAQ,IAClEH,KAAK,SACLE,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,gDAGb,6BAEJ,kBAAC,GAAD,CACIK,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,eAAKoM,GAAG,YAAYjM,UAAQ,IACnDH,KAAK,eACLE,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,oCAGb,6BAEJ,kBAAC,GAAD,CACIK,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,eAAKoM,GAAG,yBAC/BpM,KAAK,aAEL,6BAEJ,kBAAC,GAAD,CACIC,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,2BAAOoM,GAAG,UAAWjM,UAAQ,IACpDH,KAAK,WACLE,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,gDAGb,6BAEJ,kBAAC,GAAD,CACIK,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,WAAMoM,GAAG,OAChCpM,KAAK,MAEL,6BAEJ,kBAAC,GAAD,CACIC,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,qBAAMoM,GAAG,SAAUjM,UAAQ,IAClDH,KAAK,SACLE,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,0CAGb,6BAEJ,kBAAC,GAAD,CACIK,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,eAAKoM,GAAG,SAASjM,UAAQ,IAChDH,KAAK,QACLE,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,oCAGb,8BAGR,wBAAK8F,KAAM,GAAIE,GAAI,GAAIC,GAAI,IACvB,kBAAC,GAAD,CACI5F,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,eAAKoM,GAAG,YAC/BpM,KAAK,YAEL,6BAEJ,kBAAC,GAAD,CACIC,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,2BAAOoM,GAAG,oBACjCpM,KAAK,kBAEL,sBAAOmM,SAAP,OAEJ,kBAAC,GAAD,CACIlM,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,2BAAOoM,GAAG,qBACjCpM,KAAK,mBAEL,6BAEJ,kBAAC,GAAD,CACIC,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,2BAAOoM,GAAG,UAAUjM,UAAQ,IACnDH,KAAK,UACLE,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,gDAGb,sBAAOuM,SAAP,OAEJ,kBAAC,GAAD,CACIlM,MAAO,kBAACiN,GAAD,CAAWlN,KAAK,2BAAOoM,GAAG,UAAUjM,UAAQ,IACnDH,KAAK,UACLE,MAAO,CAAC,CACJC,UAAU,EACVP,QAAS,gDAGb,+BAIZ,yBAAKpE,UAAU,KAAKmF,MAAO,CAAC1F,MAAO,QAASgI,OAAQ,WAChD,uBACI1G,KAAK,UACL+D,SAAS,SACTD,KAAK,SACLE,OAAK,GAJT,oBCtSLsG,GAfO,WAClB,IAAMC,EAAQC,cAEd,OADAC,cAEI,kBAAC,GAAD,KACI,kBAAC,IAAD,CAAOC,KAAI,UAAKH,EAAMG,KAAX,aAA4B7F,UAAWgM,KAClD,kBAAC,IAAD,CAAOnG,KAAI,UAAKH,EAAMG,KAAX,SAAwBE,OAAK,EAAC/F,UAAWiM,KACpD,kBAAC,IAAD,CAAOpG,KAAI,UAAKH,EAAMG,KAAX,cAA6BE,OAAK,EAAC/F,UAAWkM,KACzD,kBAAC,IAAD,CAAOrG,KAAI,UAAKH,EAAMG,KAAX,YAA2BE,OAAK,EAAC/F,UAAWmM,KACvD,kBAAC,IAAD,CAAOtG,KAAI,UAAKH,EAAMG,KAAX,gBAA+B7F,UAAWoM,KACrD,kBAAC,IAAD,CAAOvG,KAAI,UAAKH,EAAMG,KAAX,qBAAoC7F,UAAWoM,OCDvD/F,GAZM,WACpB,IAAMX,EAAQC,cACX,OACF,kBAAC,IAAD,KACU,kBAAC,IAAD,CAAOE,KAAI,UAAKH,EAAMG,KAAX,UAAyBE,OAAK,EAAC/F,UAAWsG,KACrD,kBAAC,IAAD,CAAOT,KAAI,UAAKH,EAAMG,KAAX,aAA4BE,OAAK,EAAC/F,UAAWqM,KACxD,kBAAC,IAAD,CAAOxG,KAAI,UAAKH,EAAMG,KAAX,UAAyBE,OAAK,EAAC/F,UAAWsM,KACrD,kBAAC,GAAD,CAAczG,KAAI,UAAKH,EAAMG,MAAQ7F,UAAWwG,O,OCQ7C+F,UAbH,SAAC,GAAiB,IAAfxO,EAAc,EAAdA,QACb,OACE,kBAAC,IAAD,CAAQA,QAASA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8H,KAAK,OAAQ7F,UAAWwM,IAC/B,kBAAC,IAAD,CAAO3G,KAAK,SAAS7F,UAAWyM,KAChC,kBAAC,IAAD,CAAO5G,KAAK,QAAQ7F,UAAW0M,KAC/B,kBAAC,IAAD,CAAO7G,KAAK,IAAIE,OAAK,EAAC/F,UAAWtF,Q,4CCJ7BiS,E,QAVCC,GADWC,SAAS1M,SAAS2M,SAE5B,CACZ5D,aAAc,uBAFH0D,EAIA,CACX1D,aAAc,uB,SAKJyD,K,oBAAAA,M,KCXZ,IAYeI,EAZI,SAACC,EAAkBC,GAErC,IAAKD,EACJ,MAAM,IAAIE,MAAJ,iCAGP,OAAID,EAAgB,GAAN,OAAUE,OAAOhN,SAAS2M,SAA1B,aAAuCE,EAAvC,YAAmDC,GAE3D,GAAN,OAAUE,OAAOhN,SAAS2M,SAA1B,aAAuCE,ICAzBI,EALQ,CCCe,CACrCC,WAAY,CACX,kBAED9T,UAAW,CACV2P,aAAc6D,EAAWH,EAAsB1D,aAAcyD,EAAQzD,cACrE/O,aAAc4S,EAAWH,EAAsB1D,aAAc,MCRzB,CACrCmE,WAAY,CACX,iBACA,sBAED9T,UAAW,CACV2P,aAAc6D,EAAWH,EAAqB1D,aAAcyD,EAAQzD,cACpE/O,aAAc4S,EAAWH,EAAqB1D,aAAc,OCC1CoE,QACW,cAA7BH,OAAOhN,SAASoN,UAEe,UAA7BJ,OAAOhN,SAASoN,UAEhBJ,OAAOhN,SAASoN,SAAS7H,MACvB,2DCPN,IAAM8H,EAAM,IAAIC,IAAO,CACnBC,qBADmB,WAEf5M,QAAQC,IAAI,8BAEhB4M,oBAJmB,WAKf7M,QAAQC,IAAI,6BAEhB6M,oBAPmB,WAQf9M,QAAQC,IAAI,6BAEhB8M,UAVmB,SAUTC,GACNhN,QAAQC,IAAI,+BAKpByM,EAAIO,qBAAqBX,GAGzBI,EAAIQ,IAAIC,EAAQ,KAAgBC,SAGhCV,EAAIW,cAAcF,EAAQ,KAASC,SAGnCV,EAAIY,MAAM,SDuGJ,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAnR,GACLsD,QAAQtD,MAAMA,EAAMgB,a,+HE1I5B,EAA+BoQ,cAAvBrV,EAAR,EAAQA,UAAWwE,EAAnB,EAAmBA,QAEN8Q,EAAc,CAC1BC,QAASvV,EAAU2P,aACnB6F,QAAS,IACT3F,QAAS,CACR,OAAU,iCACV,eAAgB,mCAIZ4F,EAAc,KAAS,SAAC/M,EAAMiI,GACnC1L,EAAA,EAAQhB,MAAMyE,KAEZ,KAYGgN,EAAW,KAAS,WACzB,IAAMC,EAAO,UAXI,IAWJ,iBAAwB/O,SAASC,UAC9C,OAAOrC,EAAQoR,QAAQD,KACrB,KAGUE,EAAgBC,YAAUR,EAAa,CACnDS,mBADmD,SAChCC,GAClB,OAAO,2BAAKA,GAAZ,IAAoBnG,QAAQ,2BAAMmG,EAAOnG,SAAd,IAAuB7K,MAAOF,IAAaiL,WAEvEkG,mBAJmD,SAIhChS,GAClB,IAAMxC,EAASwC,EAAM0M,SAASlP,OAW9B,GA9B0B,SAACwC,GAC5B,MAAsB,iBAAfA,EAAMiS,OAAiE,IAAtCjS,EAAMgB,QAAQ6C,QAAQ,WAoBzDqO,CAAalS,IAEhBwR,EAAY,wCAnBe,SAACxR,GAC9B,MAAyB,kBAAlBA,EAAMgB,QAqBRmR,CAAenS,IAClBwR,EAAY,4BAGTxR,EAAM0M,UAAuB,MAAXlP,EAGrB,OAFAgU,EAAY,4BACZC,IACOpH,QAAQC,OAAOtK,GAIvB,GAAIA,EAAM0M,UAAYlP,GAAU,IAAK,CACpC,IAAQuM,EAAS/J,EAAM0M,SAAf3C,KAER,GAA6C,kBAAzCtC,OAAO2K,UAAUC,SAASC,KAAKvI,IAA4C,qBAAdA,EAAKpM,KAA8B,CACnG,IAAI4U,EAAS,IAAIC,WACjBD,EAAOE,WAAW1I,EAAM,SACxBwI,EAAOG,OAAS,WACf,IAAMjO,EAAOuI,KAAKC,MAAMsF,EAAOI,QAC/B3R,EAAA,EAAQhB,MAAMyE,EAAKzD,cAEd,CACN,IAAM4R,EAAS,IAAI5S,EAAO,sBAAwB,2BAClDwR,EAAYoB,EAAQ5S,EAAM0M,UAC1BpJ,QAAQtD,MAAMA,EAAM0M,SAAU,iBAGhC,OAAOrC,QAAQC,OAAOtK,MAMT6S,EAFUC,YAAmB,CAAClB,kB,mDC5EvCmB,G,OAAmB,CACvBxR,SAAU,mFCFNyR,EAAc,CDMI,SAAC,GAAqB,IAAnBjE,EAAkB,EAAlBA,IAE1B,MAAO,CACNA,IADM,SACF/D,GACH,OACC,uBAAgB3K,KAAM,CAAC0S,oBAAmBE,OAAUC,KACnD,kBAAC,EAASlI,KAIb+G,OAV2C,EAAbA,SCJ/Bc,E,OACAlX,GAGcqX,a,sECPTnS,E,iDAEesS,UAJK,Q,uCAMtB,SAAWC,GACP,GAAiB,kBAANA,EACP,OAAO9P,QAAQ+P,KAAR,wDAA8DD,IAEzEE,IAAOxS,IAAIvF,KAAK4X,UAAWC,K,iBAG/B,WACI,OAAOE,IAAOxH,IAAIvQ,KAAK4X,a,mBAG3B,WACI,OAAOG,IAAOC,OAAOhY,KAAK4X,a,6BAG9B,WACI,QAAS5X,KAAKuQ,U,KAIP,QAAIjL,I","file":"static/js/main.9fabb784.chunk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"appweb-main\"] = factory();\n\telse\n\t\troot[\"appweb-main\"] = factory();\n})(this, function() {\nreturn ","import { GlobalState_middleware } from '@friday/core'\n\n\nexport const { middleware: global_middleware, useGlobalContext } = GlobalState_middleware({ \n\tuserInfo: {},\n\tglobalLoading: false\n})\n\n\nexport default global_middleware","import React from \"react\";\nimport { Divider, Space, Popover } from 'antd'\nimport { Link } from '@friday/router'\nimport { get } from 'lodash'\n\n\nconst useColumns = ( publicUrl) => {\n    return React.useMemo(() => {\n        const columns = [{\n            title: '作品名称',\n            dataIndex: 'productName'\n        }, {\n            title: '缩略图',\n            dataIndex: 'productPics',\n            width: '150px',\n            render: (txt) => {\n                const imgUrl = get(eval(txt), '[0]')\n                const img =  publicUrl.OPEN_IMG_URL + imgUrl\n                return (\n                    <div className='m-img-thumbs'>\n                        <Popover content={<img src={img} />}>\n                            <img src={img} />\n                        </Popover>\n                    </div>\n                )\n            }\n        }, {\n            title: '参赛类别',\n            dataIndex: 'productType'\n        }, {\n            title: '参赛方向',\n            dataIndex: 'entryDirection'\n        }, {\n            title: '作品状态',\n            dataIndex: 'opr',\n            render: () => '已提交'\n        }, {\n            title: '操作',\n            dataIndex: 'opr',\n            fixed: 'right',\n            render: () => {\n                return (\n                    <Space split={<Divider />}>  \n                        <span className='operation'>\n                            <Link to='/user/product/edit/1'>\n                                编辑 \n                            </Link >\n                        </span>\n                        <span className='operation'>删除 </span>\n                    </Space>\n                )\n            }\n        }]\n    \n        return columns\n    \n    }, [])\n} \n\nexport default useColumns","export default __webpack_public_path__ + \"static/media/banner.d2ec0092.png\";","export default __webpack_public_path__ + \"static/media/pic_01.75506d0d.jpeg\";","export default __webpack_public_path__ + \"static/media/pic_02.449580fd.jpeg\";","\nimport React from 'react'\nimport banner from './images/banner.png'\nimport pic_one from './images/pic_01.jpeg'\nimport pic_two from './images/pic_02.jpeg'\nimport './home.less'\n\nconst Home = () => {\n\n\treturn (\n\t\t<div className='m-home-wrapper'>\n\t\t\t<div className='m-home-banner'>\n\t\t\t\t<img src={banner} />\n\t\t\t</div>\n\t\t\t<div className='m-home-nav'>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a>大赛简介</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a>参赛要求</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a>奖项设置</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a>大赛流程</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a>组织机构</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href='/user/login'>立即参赛</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href='/admin/review/login'>评委入口</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href='/admin/manage/login'>管理员</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className='m-home-main'>\n\t\t\t\t<div className='m-home-section'>\n\t\t\t\t\t<h3>大赛简介</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t文明如火，烛照人类前行；\n\t\t\t\t\t\t针线跃动，开启设计新景。\n\n\t\t\t\t\t\t不论你是天马行空、才华横溢的设计师；\n\n\t\t\t\t\t\t还是寻求突破、勇于挑战的创作者，引领时尚风潮的前沿者；\n\n\t\t\t\t\t\t亦或是热衷探索服装价值的的品牌人，\n\n\t\t\t\t\t\t这里有一封来自“洪合杯”的邀请信，\n\n\t\t\t\t\t\t有才，你就来！\n\n\t\t\t\t\t\t首届“2022“洪合杯”毛衫设计大赛”邀请你报名啦！\n\n\t\t\t\t\t\t2021年11月8日正式启动，截稿2022年4月15日24:00。\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section'>\n\t\t\t\t\t<h3>参赛要求</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t1.国内外注册服装设计生产企业、设计师，服装设计机构、品牌设计师，高校服装、设计类师生，以及热爱毛针织服装设计的社会各界人士均可参赛（所有参赛企业及参赛者无不良记录）。\n\n\t\t\t\t\t2.院校学生个人及团队参赛均需指定至少1名参赛指导教师。\n\n\t\t\t\t\t3.拥有设计能力的个体组成团队参赛：团队核心成员至少2人但不超过5人。\n\n\t\t\t\t\t4.参赛作品未进入市场，具有良好的市场潜力；参赛作品的创意、款式、色彩、工艺及相关专利拥有自主知识产权且无知识产权纠纷。\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section'>\n\t\t\t\t\t<h3>作品要求</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t参赛作品必须是作者本人或团队原创设计作品，不得侵犯他人知识产权。创作过程及作品本身不得摹仿、抄袭、拷贝国内外的作品或创意，不得侵犯他人的知识产权。\n\n\t\t\t\t\t所有因参赛作品引发的版权或知识产权纠纷均与大赛组委会无关。参赛者按要求签署作品《原创承诺书》，后一经发现有抄袭作品、发生知识产权或版权纠纷等情况，将取消作者参赛资格，并由作者承担相应后果。\n\n\t\t\t\t\t大赛设置“系列服饰类、经典套装类、毛衫文化品牌类”三个征集方向。\n\n\t\t\t\t\t1.系列服饰类：以数字、未来、时尚、文化为主题设计的系列毛针织服装参赛。包括精梳类、粗梳类和花色纱类系列男装、女装。自己搭配（编织）首饰、包、围巾、帽等饰品。参赛作品以男/女羊绒、羊毛、混纺针织系列服装为主，每个系列参赛作品不少于4件/套。\n\n\t\t\t\t\t2.经典套装类：以数字、未来、时尚、文化为主题设计的单套毛针织服装参赛。包括精梳类、粗梳类和花色纱类系列男装、女装。自己搭配（编织）首饰、包、围巾、帽等饰品。参赛作品以男/女羊绒、羊毛、混纺针织服装为主，每套作品包括上装和下装或连身服装及配饰。\n\n\t\t\t\t\t3.毛衫文化品牌类：围绕毛衫品牌logo、海报、包装、吉祥物及相关品牌识别的视觉形象进行设计。品牌参赛作品必须按套/系列参赛。\n\n\t\t\t\t\t注：\n\n\t\t\t\t\t(1)参赛作品必须是毛针织工艺服装，参赛作品按所属类别报名参赛；无法确定归属类别或归类不正确的由组委会给予判定。\n\n\t\t\t\t\t(2)横机针织面料可以与其他面料拼接(其中横机针织面料不能少于80%），要求作品主题明确、系列完整、概念清晰，服饰配套齐全。\n\n\t\t\t\t\t(3)独创钩编可作为配饰与服装一起列入参赛范围（加分项）。\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section'>\n\t\t\t\t\t<h3>奖项设置</h3>\n\t\t\t\t\t<p className='tc'>\n\t\t\t\t\t\t<img src={pic_one} />\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section'>\n\t\t\t\t\t<h3>大赛流程</h3>\n\t\t\t\t\t\n\t\t\t\t\t<p className='tc'>参赛者通过以下步骤进行作品上传，作品提交成功即报名成功</p>\n\t\t\t\t\t<ul className='tc'>\n\t\t\t\t\t\t<li>注册登录</li>\n\t\t\t\t\t\t<li>作品上传</li>\n\t\t\t\t\t\t<li>作品提交</li>\n\t\t\t\t\t\t<li>报名成功</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section'>\n\t\t\t\t\t<h3>组织机构</h3>\n\t\t\t\t\t<p className='tc'>\n\t\t\t\t\t\t<img src={pic_two} />\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n\n}\n\nexport default Home","import React from 'react'\nimport { Result, Button } from 'antd'\nimport { Link } from '@friday/router'\n\nconst Notfind = () => {\n\treturn (\n\t\t<Result\n\t\t\tstatus=\"404\"\n\t\t\ttitle=\"404\"\n\t\t\tsubTitle=\"Sorry, the page you visited does not exist.\"\n\t\t\textra={\n\t\t\t\t<Button type=\"primary\">\n\t\t\t\t\t<Link to='/'>返回首页</Link>\n\t\t\t\t</Button>\n\t\t\t}\n\t\t/>\n\t)\n}\nexport default Notfind","import HomeApi from 'src/pages/home/api'\nimport UserApi from 'src/pages/user/apis'\nimport AdminApi from 'src/pages/admin/apis'\n\nexport const apis = {\n\thome: new HomeApi(),\n\tuser: new UserApi(),\n\tadmin: new AdminApi()\n}\n\nexport type IApis = typeof apis\n\n","\nimport { createGetApi, createPostApi } from '@friday/async'\n\n\nexport default class Apis {\n\tgetTest = createGetApi<any, {test: number}>({ url: '/test'})\n\tgetPost = createPostApi({ url: '/test_post' })\n}\n\n","import { createGetApi, createPostApi } from '@friday/async'\n\n\nexport default class Apis {\n\n    private prefix_config = '/user'\n\t\n\t// 用户登录\n\tpublic login = createPostApi({ url: `${this.prefix_config}/login`})\n\n    // 用户信息\n    public fetchUserInfo = createGetApi<any>({ url: `${this.prefix_config}/info`})\n\n    // 用户注册\n    public register = createPostApi<{}>({ url: `${this.prefix_config}/register`})\n\n    // 发送验证码\n    public sendCode = createPostApi<any>({url: '/phone/codeSend'})\n\n    // 找回密码\n    public reset = createPostApi<any>({url: `${this.prefix_config}/pwd/reset`})\n\n    // 修改密码\n    public updatePassword = createPostApi<any>({url: `${this.prefix_config}/pwd/update`})\n\n    // 完善个人信息\n    public completeInfo = createPostApi<any>({url: `${this.prefix_config}/complete`})\n\n    // 添加作品\n    public addProduct = createPostApi<any>({url: `${this.prefix_config}/signup`})\n\n    // 作品列表\n    public productList = createGetApi<any>({url: `${this.prefix_config}/signup/info`})\n\n}\n","import { createGetApi, createPostApi } from '@friday/async'\n\n\nexport default class Apis {\n\n    private manage_config = '/manage'\n\n    private review_config = 'review'\n\t\n\t// 管理员登录\n\tpublic manageLogin = createPostApi({ url: `${this.manage_config}/login`})\n\n    // 评审登录\n    public reviewLogin = createPostApi({ url: `${this.review_config}/login`})\n\n    // 作品列表\n    public reviewList = createGetApi({ url: `${this.review_config}/list`})\n\n    // 作品信息\n    public reviewDetail = createGetApi({ url: `${this.review_config}/userSignInfo`})\n\n    // 评分提交\n    public signupScoringInfo = createGetApi({ url: `${this.review_config}/signupScoringInfo/save`})\n\n\n    // 评分更新\n    public saveOrUpdate = createPostApi({ url: `${this.review_config}/userSignInfo/saveOrUpdate`})\n\n}\n\n","\nimport { apis } from 'src/apiStore'\n\nconst useApiSelector = () => {\n\treturn apis\n}\n\nexport default useApiSelector\n\n\n","import React from 'react'\nimport { dispatchAsync } from '@friday/async'\nimport { useApiSelector } from 'src/hooks'\nimport { useGlobalContext } from 'src/middleware/globalMiddleware'\nimport * as Cookie from 'js-cookie'\n\n\nconst useUserInfo = () => {\n\n\tconst { state, dispatch } = useGlobalContext()\n\n\tconst apis = useApiSelector()\n\n\tconst dispatchUserInfo = (value: {}) => {\n\t\tdispatch({type: 'userInfo', value})\n\t}\n\n\t// 获取用户信息\n\tconst fetchUserInfo = async () => {\n\t\tconst { dataJson, error } = await dispatchAsync(apis.user.fetchUserInfo({}))\n\t\tif (error) return\n\t\tdispatchUserInfo(dataJson)\n\t}\n\t\n\treturn {\n\t\tuserInfo: state.userInfo || {} ,\n\t\tfetchUserInfo,\n\t\tdispatchUserInfo\n\t}\n}\n\nexport default useUserInfo","import React from 'react'\nimport { Form, Input, Button, message } from 'antd'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\nimport { Link } from '@friday/router'\nimport { useHistory, useParams } from '@friday/router'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport { dispatchAsync } from '@friday/async'\nimport TokenService from 'src/services/tokenService'\nimport './index.less'\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n\n    const { type } = useParams() as any\n\n    const apis = useApiSelector()\n\n    const {dispatchUserInfo} = useUserInfo()\n    \n    const history = useHistory()\n\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const respone = await dispatchAsync(type == 'review' ? apis.admin.reviewLogin(values) : apis.admin.manageLogin(values)) as any\n        if (respone.error) return \n        TokenService.set(respone?.token.token)\n        dispatchUserInfo(respone.dataJson)\n        message.success('登录成功')\n        history.push(`/admin/${type}has`)\n    } \n\n    return (\n        <div className='m-login'>\n            <div className='m-login-header'>\n                洪合杯\n            </div>\n            <div className='m-login-content'>\n                <div className='m-login-main'>\n                    <h3 className='m-title'>登录</h3>\n                    <Form \n                        form={form}\n                        onFinish={onFinish}\n                        layout=\"vertical\"\n                    >\n                        <FormItem \n                            name='username'\n                            label='账号'\n                            rules={[{required: true, message: '请输入账号'}]}\n                        >\n                            <Input  placeholder=\"请输入账号\" size='middle' />\n                        </FormItem>\n                        <FormItem \n                            name='password'\n                            label='密码'\n                            rules={[{required: true, message: '请输入密码'}]}\n                        >\n                            <Input type=\"password\" placeholder=\"请输入密码\" size='middle' />\n                        </FormItem>\n                        <Form.Item>\n                            <Button\n                                className=\"login-form-button\"\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                size='middle'\n                                block\n                            >\n                                登录\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Index","import React from 'react'\nimport { Spin } from 'antd'\n\nconst LodingCom: React.FC<any> = ({ children }) => {\n\n    return (\n        <Spin spinning={ true }>\n            <div style={{height: 800, backgroundColor: '#fff'}}>\n                {children}\n            </div>\n        </Spin>\n    )\n}\n\nexport default LodingCom","import React, { useCallback } from 'react'\nimport { Redirect, Route, RouteComponentProps } from '@friday/router'\nimport TokenServeice from 'src/services/tokenService'\nimport useUserInfo from 'src/hooks/useUserInfo'\nimport LodingCom from 'src/pages/layouts/LodingCom'\nimport { isEmpty } from 'lodash'\n\nconst PrimaryLayout: React.FC<any> = ({ children, ...rest}) => {\n\n    const { userInfo, fetchUserInfo } = useUserInfo()\n    const renderFn = useCallback((renderProps: RouteComponentProps<any>) => {\n        \n        const { component: Component } = rest\n\n\n        if (!TokenServeice.isAuthenticated()) {\n            return (\n                <Redirect\n                    to={`/admin/1/login?path=${location.pathname}`}\n                />\n            )\n        }\n        if (!isEmpty(userInfo)) {\n           \n            if (!Component) {\n                return null\n            }\n            return <Component {...renderProps} />\n        }\n        \n        fetchUserInfo()\n        return (<LodingCom />)\n        // return <Component {...renderProps} />\n    }, [ userInfo ])\n    \n    return (\n        <Route {...rest} component={renderFn} />\n    )\n}\n\nexport default PrimaryLayout","import React from 'react'\nimport { Layout, Menu } from 'antd'\nimport { FileOutlined, FileDoneOutlined, LogoutOutlined } from '@ant-design/icons'\nimport { Link, useLocation} from '@friday/router'\nimport useUserInfo from 'src/hooks/useUserInfo'\n\nconst { Header, Content, Footer, Sider } = Layout\n\nimport './index.less'\n\n\nconst Index = ({children}) => {\n\n    const { userInfo } = useUserInfo()\n\n    const { type } = userInfo as any\n\n    const { pathname } = useLocation()\n\n\n    const getkeys = () => {\n        if (pathname.indexOf('reviewtreat') > -1) return '1'\n        if (pathname.indexOf('reviewhas') > -1) return '2'\n        if (pathname.indexOf('managetreat') > -1) return '3'\n        if (pathname.indexOf('managehas') > -1) return '4'\n        return '4'\n    }\n\n    return (\n        <Layout>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    console.log(collapsed, type);\n                }}\n            >\n                <div className=\"m-logo\" />\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[getkeys()]}>\n                    \n                    {type == 2 && \n                        <Menu.Item key=\"1\" icon={<FileOutlined />} >\n                            <Link to='/admin/reviewtreat'>\n                                待评审作品\n                            </Link>\n                        </Menu.Item>\n                    }\n                    {type == 2 && \n                        <Menu.Item key=\"2\" icon={<FileDoneOutlined />} >\n                            <Link to='/admin/reviewhas'>\n                            已评审作品\n                            </Link>\n                        </Menu.Item>\n                    }\n                    {type == 3 && \n                        <Menu.Item key=\"3\" icon={<FileOutlined />} >\n                            <Link to='/admin/managetreat'>\n                            待评分作品\n                            </Link>\n                        </Menu.Item>\n                    }\n                    {type ==3 && \n                        <Menu.Item key=\"4\" icon={<FileDoneOutlined />}>\n                            <Link to='/admin/managehas'>\n                            已评分作品\n                            </Link>\n                        </Menu.Item>\n                    }\n                    <Menu.Item key=\"5\" icon={<LogoutOutlined />}>\n                        <Link to='/admin/review/login'> \n                        退出登录\n                        </Link>\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n            <Layout style={{minHeight: '100vh'}}>\n                <Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }} />\n                <Content style={{ margin: '24px 16px 0' }}>\n                    <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n                        {children}\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>洪合杯 ©2021 Created by front </Footer>\n            </Layout>\n        </Layout>)\n}\n\nexport default Index","import React from \"react\";\nimport { Divider, Space, Popover, Modal, message } from 'antd'\nimport { Link } from '@friday/router'\nimport { get } from 'lodash'\nimport { useConfiguration } from '@friday/core'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync, useRequest } from '@friday/async'\n\n\nconst useColumns = (revalidate) => {\n\n    const { publicUrl } = useConfiguration()\n    const apis = useApiSelector()\n\n    const submit =(id) => {\n        Modal.confirm({\n            content: '确定要提交',\n            onOk: async () => {\n                const {error} = await dispatchAsync(apis.admin.signupScoringInfo({id}))\n                if (error) return \n                message.success('提交成功')\n                revalidate()\n            }\n        })\n    }\n\n    return React.useMemo(() => {\n        const columns = [{\n            title: '作品名称',\n            dataIndex: 'productName'\n        },  {\n            title: '参赛类别',\n            dataIndex: 'productType'\n        }, {\n            title: '参赛方向',\n            dataIndex: 'entryDirection'\n        }, {\n            title: '分数',\n            dataIndex: 'sum',\n        }, {\n            title: '操作',\n            dataIndex: 'opr',\n            fixed: 'right',\n            render: (text, record) => {\n                const {save, id} = record\n                return (\n                    <Space split={<Divider />}>  \n                        {save == 1 ? \n                            <span className='grey' > 已提交</span> :\n                            <span className='operation' onClick={() => submit(id)}> 提交</span> \n                        }\n                    </Space>\n                )\n            }\n        }]\n    \n        return columns\n    \n    }, [])\n} \n\nexport default useColumns","import React  from \"react\";\nimport { Table, Space, Select } from 'antd'\nimport useColumns from './useColumns'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { isEmpty, get } from 'lodash'\nimport { useImmer }  from '@friday/immer'\n\n\n\nconst Index = () => {\n\n    const apis = useApiSelector()\n\n    \n\n    const gatList = (arr, filterObj) => {\n        if (isEmpty(arr)) return []\n        return arr.filter(item => {\n            return item.scoring == filterObj.scoring &&\n            (filterObj.productType ? item.productType  == filterObj.productType : true) &&\n            (filterObj.entryDirection ?  item.entryDirection  == filterObj.entryDirection: true) \n        })\n\n    }\n\n    const [state, setState] = useImmer({\n        scoring:true,\n        productType: '',\n        entryDirection: ''\n    })\n\n    const {dataArray, isValidating, revalidate} = useRequest(apis.admin.reviewList({}))\n\n    const list = gatList(dataArray, state)\n\n    const columns = useColumns(revalidate)\n\n\n\n    return (\n        <div>\n            <h4 className='m-head'>已评审作品</h4>\n            <div className='clearfix mg-b-10'>\n                <Space>\n                    <div>\n                        参赛类别：\n                        <Select style={{width: '140px'}} \n                            allowClear \n                            placeholder='请选择参赛类别' \n                            onChange={(e) => setState(dart => { dart.entryDirection = e as any })}\n                        >\n                            <Select.Option value={'系列服装类'}>系列服装类</Select.Option >\n                            <Select.Option value={'经典套装类'}>经典套装类</Select.Option >\n                            <Select.Option value={'毛衫文化品牌类'}>毛衫文化品牌类</Select.Option >\n                        </Select>\n                    </div>\n                    <div>\n                        参赛方向： \n                        <Select style={{width: '140px'}} allowClear placeholder='请选择参赛方向' onChange={(e) => setState(draft => { draft.productType = e as any })}>\n                            <Select.Option value={'个人组'}>个人组</Select.Option>\n                            <Select.Option value={'团体组'}>团体组</Select.Option>\n                            <Select.Option value={'企业组'}>企业组</Select.Option>\n                        </Select>\n                    </div>\n                </Space>\n            </div>\n            <Table \n                columns={columns as any}\n                dataSource={list}\n                scroll={{\n                    x: 'max-content'\n                }}\n                loading={isValidating}\n                rowKey={'id'}\n            />\n        </div>\n    )\n}\n\nexport default Index","import React from \"react\";\nimport { Divider, Space, Popover } from 'antd'\nimport { Link } from '@friday/router'\nimport { get } from 'lodash'\nimport { useConfiguration } from '@friday/core'\n\n\nconst useColumns = () => {\n\n    const { publicUrl } = useConfiguration()\n\n    return React.useMemo(() => {\n        const columns = [{\n            title: '作品名称',\n            dataIndex: 'productName'\n        }, \n        // {\n        //     title: '缩略图',\n        //     dataIndex: 'productPics',\n        //     width: '150px',\n        //     render: (txt) => {\n        //         const imgUrl = get(eval(txt), '[0]')\n        //         const img =  publicUrl.OPEN_IMG_URL + imgUrl\n        //         return (\n        //             <div className='m-img-thumbs'>\n        //                 <Popover content={<img src={img} />}>\n        //                     <img src={img} />\n        //                 </Popover>\n        //             </div>\n        //         )\n        //     }\n        // }, \n        {\n            title: '参赛类别',\n            dataIndex: 'productType'\n        }, {\n            title: '参赛方向',\n            dataIndex: 'entryDirection'\n        }, {\n            title: '状态',\n            dataIndex: 'opr',\n            render: () => '未打分'\n        }, {\n            title: '操作',\n            dataIndex: 'opr',\n            fixed: 'right',\n            render: (text, record) => {\n                return (\n                    <Space split={<Divider />}>  \n                        <span className='operation'>\n                            <Link to={`/admin/review/${record.id}/score`}>\n                                去打分\n                            </Link >\n                        </span>\n                    </Space>\n                )\n            }\n        }]\n    \n        return columns\n    \n    }, [])\n} \n\nexport default useColumns","import React  from \"react\";\nimport { Table, Space, Select } from 'antd'\nimport useColumns from './useColumns'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { isEmpty, get } from 'lodash'\nimport { useImmer }  from '@friday/immer'\n\n\n\nconst Index = () => {\n\n    const apis = useApiSelector()\n\n    const columns = useColumns()\n\n    const gatList = (arr, filterObj) => {\n        if (isEmpty(arr)) return []\n        return arr.filter(item => {\n            return item.scoring == filterObj.scoring &&\n            (filterObj.productType ? item.productType  == filterObj.productType : true) &&\n            (filterObj.entryDirection ?  item.entryDirection  == filterObj.entryDirection: true) \n        })\n\n    }\n\n    const [state, setState] = useImmer({\n        scoring:false,\n        productType: '',\n        entryDirection: ''\n    })\n\n    const {dataArray, isValidating} = useRequest(apis.admin.reviewList({}))\n\n    const list = gatList(dataArray, state)\n\n\n\n    return (\n        <div>\n            <h4 className='m-head'>未评审作品</h4>\n            <div className='clearfix mg-b-10'>\n                <Space>\n                    <div>\n                        参赛类别：\n                        <Select style={{width: '140px'}} \n                            allowClear \n                            placeholder='请选择参赛类别' \n                            onChange={(e) => setState(dart => { dart.entryDirection = e as any })}\n                        >\n                            <Select.Option value={'系列服装类'}>系列服装类</Select.Option >\n                            <Select.Option value={'经典套装类'}>经典套装类</Select.Option >\n                            <Select.Option value={'毛衫文化品牌类'}>毛衫文化品牌类</Select.Option >\n                        </Select>\n                    </div>\n                    <div>\n                        参赛方向： \n                        <Select style={{width: '140px'}} allowClear placeholder='请选择参赛方向' onChange={(e) => setState(draft => { draft.productType = e as any })}>\n                            <Select.Option value={'个人组'}>个人组</Select.Option>\n                            <Select.Option value={'团体组'}>团体组</Select.Option>\n                            <Select.Option value={'企业组'}>企业组</Select.Option>\n                        </Select>\n                    </div>\n                </Space>\n            </div>\n            <Table \n                columns={columns as any}\n                dataSource={list}\n                scroll={{\n                    x: 'max-content'\n                }}\n                loading={isValidating}\n                rowKey={'id'}\n            />\n        </div>\n    )\n}\n\nexport default Index","import React  from \"react\";\n\n\nconst Index = () => {\n    return (\n        <div>\n            已评分\n        </div>\n    )\n}\n\nexport default Index","import React  from \"react\";\n\n\nconst Index = () => {\n    return (\n        <div>\n            待评分\n        </div>\n    )\n}\n\nexport default Index","import React  from \"react\";\nimport { Input, Alert, Descriptions, Form, Button, Row, Col, message} from 'antd'\nimport { useApiSelector } from 'src/hooks'\nimport { useParams, useHistory } from '@friday/router'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { isEmpty, get } from 'lodash'\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n\n    const apis = useApiSelector()\n\n    const [ form ] = Form.useForm()\n\n    const { id } = useParams() as any\n\n    const { dataJson } = useRequest(apis.admin.reviewDetail({id}))\n\n    const history = useHistory()\n\n    React.useEffect(() => {\n        if (!isEmpty(dataJson)) {\n            form.setFieldsValue(dataJson)\n        }\n    }, [dataJson])\n\n\n    const onFinish = async (type) => {\n        const values = await form.validateFields()\n\n        const respone = await dispatchAsync(apis.admin.saveOrUpdate({\n            ...values,\n            signupId: id,\n            save: type\n        })) as any\n        \n        if (respone.error) return \n        message.success('保存成功')\n        history.goBack()\n    }\n    \n\n    return (\n        <div>\n            <h4 className='m-head'>作品评分</h4>\n            <Alert message= '参赛作品信息' />\n            <Descriptions bordered  className='mg-t-20 mg-b-20' layout=\"vertical\">\n                <Descriptions.Item label=\"作品编号\">{get(dataJson, 'id')}</Descriptions.Item>\n                <Descriptions.Item label=\"参赛类别\">{get(dataJson, 'entryDirection')}</Descriptions.Item>\n                <Descriptions.Item label=\"参赛方向\">{get(dataJson, 'productType')}</Descriptions.Item>\n                <Descriptions.Item label=\"作品名称(中文)\">{get(dataJson, 'productName')}</Descriptions.Item>\n                <Descriptions.Item label=\"作品名称(英文)\" >\n                    {get(dataJson, 'productNameEn') || '--'}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"推荐人\">\n                    {get(dataJson, 'recommendName') || '--'}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"作品图片\" span={3}>\n\n                </Descriptions.Item>\n                <Descriptions.Item label=\"作品视频\" span={3}>\n\n                </Descriptions.Item>\n                <Descriptions.Item label=\"设计主题及作品说明(中文)\" span={3}>\n                    {get(dataJson, 'productDesc') || '--'}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"设计主题及作品说明(英文)\" span={3}>\n                    {get(dataJson, 'productDescEn') || '--'}\n                </Descriptions.Item>\n                \n            </Descriptions>\n\n            <Alert message= '评分' />\n\n            <Form\n                form={form}\n                labelCol={{\n                    xs:8,\n                    md:6\n                }}\n                wrapperCol={{\n                    xs: 12,\n                    md: 12\n                }}\n                className='mg-t-30'\n            >\n                <FormItem\n                    label={'原创性20%'}\n                    rules={[{required: true, message: '请评分1-20'}]}\n                    name='itemA'\n                >\n                    <Input placeholder='请评分1-20' max={20} min={1}  />\n                </FormItem>\n\n                <FormItem\n                    label={'创新性20%'}\n                    rules={[{required: true, message: '请评分1-20'}]}\n                    name='itemB'\n                >\n                    <Input placeholder='请评分1-20' max={20} min={1}  />\n                </FormItem>\n\n                <FormItem\n                    label={'美观性20%'}\n                    rules={[{required: true, message: '请评分1-20'}]}\n                    name='itemC'\n                >\n                    <Input placeholder='请评分1-20' max={20} min={1}  />\n                </FormItem>\n\n                <FormItem\n                    label={'系列性15%'}\n                    rules={[{required: true, message: '请评分1-15'}]}\n                    name='itemD'\n                >\n                    <Input placeholder='请评分1-15' max={15} min={1}  />\n                </FormItem>\n\n                <FormItem\n                    label={'工业性15%'}\n                    rules={[{required: true, message: '请评分1-15'}]}\n                    name='itemE'\n                >\n                    <Input placeholder='请评分1-15' max={15} min={1}  />\n                </FormItem>\n\n                <FormItem\n                    label={'商业价值10%'}\n                    rules={[{required: true, message: '请评分1-10'}]}\n                    name='itemF'\n                >\n                    <Input placeholder='请评分1-20' max={10} min={1}  />\n                </FormItem>\n                <FormItem\n                    noStyle\n                    shouldUpdate={true}\n                >\n                    {({ getFieldsValue }) => {\n                        const values = Object.values(getFieldsValue()).filter(item => item) as any\n                        const sum = values.reduce((pre, cur) => {\n                            pre = Number(pre) + Number(cur)\n                            return pre\n                        }, 0)\n                        return(\n                            <Form.Item\n                                label={'总分数'}\n                            >\n                                <div style={{color: 'red', fontSize: '20px'}}>\n                                    {sum}\n                                </div>    \n                            </Form.Item>\n                        ) \n                    }}\n                </FormItem>\n                <div className='tc' style={{width: '328px', margin: '0 auto'}}>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Button\n                                size='middle'\n                                onClick={() => onFinish(0)}\n                                block\n                            >\n                                保存\n                            </Button>\n                        </Col>\n                        <Col span={12}>\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                size='middle'\n                                onClick={() => onFinish(1)}\n                                block\n                            >\n                                提交\n                            </Button>\n                        </Col>\n                    </Row>\n                </div>\n            </Form>\n\n            \n        </div>\n    )\n}\n\nexport default Index","import React, { Suspense } from 'react' \nimport { Route, useScrollTop, useRouteMatch } from '@friday/router'\n\nimport BaseLayout from './BaseLayout'\nimport ReviewHas from '../review/has'\nimport ReviewTreat from '../review/treat'\n\nimport ManageHas from '../manage/has'\nimport ManageTreat from '../manage/treat'\n\nimport Review from '../review/index'\n\nconst PrimaryRoutes = () => {\n    const match = useRouteMatch()\n    useScrollTop()\n    console.log(`${match.path}/reviewhas`)\n    return (\n        <BaseLayout>\n            <Route path={`${match.path}/reviewhas`} exact component={ReviewHas} />\n            <Route path={`${match.path}/reviewtreat`} exact  component={ReviewTreat} />\n            <Route path={`${match.path}/review/:id/:type`} exact component={Review} />\n            <Route path={`${match.path}/managehas`} component={ManageHas} />\n            <Route path={`${match.path}/managetreat`} component={ManageTreat} />\n        </BaseLayout>\n    )\n}\n\nexport default PrimaryRoutes","import React from 'react'\nimport { Switch, Route, useRouteMatch } from '@friday/router'\nimport Login from './auth/Login'\nimport PrivateRoute from './PrivateRoute'\nimport PrimaryRouter from './layouts/PrimaryRouter'\n\nconst ModuleRouter = () => {\n\tconst match = useRouteMatch()\n    return (\n\t\t<Switch>\n            <Route path={`${match.path}/:type/login`} exact component={Login} />\n            <PrivateRoute path={`${match.path}`} component={PrimaryRouter} />\n        </Switch>\n    )\n}\n\nexport default ModuleRouter","import React from 'react'\nimport { Form, Input, Button, Row, Col, message} from 'antd'\nimport { Link } from '@friday/router'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\nimport { useHistory } from '@friday/router'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport { dispatchAsync } from '@friday/async'\nimport TokenService from 'src/services/tokenService'\nimport './index.less'\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n\n    const apis = useApiSelector()\n\n    const {dispatchUserInfo} = useUserInfo()\n    \n    const history = useHistory()\n\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const respone = await dispatchAsync(apis.user.login(values)) as any\n        if (respone.error) return \n        TokenService.set(respone?.token.token)\n        dispatchUserInfo(respone.dataJson)\n        const { complete } = respone.dataJson\n        if (complete) {\n            message.success('登录成功')\n            history.push('/user/info')\n        } else {\n            message.warning('请完善个人信息')\n            history.push('/user/info/edit')\n        }\n    } \n\n    return (\n        <div className='m-login'>\n            <div className='m-login-header'>\n                洪合杯\n            </div>\n            <div className='m-login-content'>\n                <div className='m-login-main'>\n                    <h3 className='m-title'>登录</h3>\n                    <Form form={form}\n                        onFinish={onFinish}\n                        layout=\"vertical\"\n                    >\n                        <FormItem \n                            label='手机号' \n                            name='username'\n                            rules={[{\n                                required: true, \n                                message: '请输入正确的手机号', \n                                pattern: /^1[3456789]\\d{9}$/\n                            }]}\n                        >\n                            <Input  placeholder=\"请输入手机号\" size='middle' />\n                        </FormItem>\n                        <FormItem \n                            label='密码' \n                            name='password' \n                            rules={[{required: true, message: '请输入密码'}]}\n                        >\n                            <Input \n                                type=\"password\" \n                                placeholder=\"请输入密码\" \n                                size='middle' \n                            />\n                        </FormItem>\n                        <Form.Item>\n                            <Button\n                                className=\"login-form-button\"\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                size='middle'\n                                block\n                            >\n                                登录\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                    <div className='tc  mg-b-20' style={{fontSize: '12px'}}>\n                        <Link to='/user/reset' className='grey'>\n                            忘记密码\n                        </Link>\n                    </div>\n                    <div className='tc grey mg-b-10' style={{fontSize: '12px'}}>还没有账号?</div>\n                    <div>\n                        <Button block >\n                            <Link to='/user/register' >\n                                注册\n                            </Link>\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Index","import React, { useState } from 'react'\nimport { Form, Input, Button, Row, Col, Radio, message, Cascader } from 'antd'\nimport { Link, useHistory  } from '@friday/router'\nimport { dispatchAsync } from '@friday/async'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport options from 'src/common/city.json'\nimport { omit } from 'lodash'\nimport './index.less'\n\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n    const apis = useApiSelector()\n\n    const [time, setTime] = useState(60)\n    const [isShowCode, setIsShowCode] = useState<boolean>(false)\n    const history = useHistory()\n\n    const sendCode = async () => {\n        const fileds = await form.validateFields(['phone'])\n        if (isShowCode) {\n            return \n        }\n        setIsShowCode(true)\n        const active = setInterval(() => {\n            setTime((preSecond) => {\n              if (preSecond <= 1) {\n                setIsShowCode(false)\n                clearInterval(active)\n                // 重置秒数\n                return 60\n              }\n              return preSecond - 1\n            })\n        }, 1000)\n        const { phone } = fileds\n        const { error, data } = await dispatchAsync(apis.user.sendCode({\n            phone,\n            type: 0\n        }))\n        if (error) return message.error(error)\n        message.success('发送成功')\n    }\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const respone = await dispatchAsync(apis.user.register({\n            ...omit(values, 'pw2'),\n        })) as any\n        if (respone.error) return \n        message.success('注册成功')\n        history.push('/user')\n    } \n\n    return (\n        <div className='m-login'>\n            <div className='m-login-header'>\n                洪合杯\n            </div>\n            <div className='m-login-content'>\n                <div className='m-login-main'>\n                    <h3 className='m-title'>注册</h3>\n                    <Form form={form} \n                        labelCol={{ span: 5 }}\n                        onFinish={onFinish}\n                        layout=\"vertical\"\n                    >\n                        <FormItem \n                            name='phone' \n                            label='手机号' \n                            rules={[{required: true, message: '请输入正确的手机号！', pattern: /^1[3456789]\\d{9}$/ }]} \n                        >\n                            <Input placeholder=\"请输入手机号！\" size='middle' />  \n                        </FormItem>\n                        <FormItem \n                            name='code' \n                            label='验证码'\n                            rules={[{required: true, message: '请输入验证码'}]}\n                        >\n                            <Input  \n                                placeholder=\"请输入验证码！\" \n                                size='middle' \n                                maxLength={6}\n                                suffix={<a onClick={() => sendCode()}>\n                                  {isShowCode ? `${time}秒后重新发送` : '发送验证码'}\n                                </a>}\n                            />\n                        </FormItem>\n                        <FormItem \n                            name='password' \n                            label='密码' \n                            rules={[{required: true, message: '请输入密码'}]}\n                        >\n                            <Input  type=\"password\" placeholder=\"请输入密码（6-20个字符）\" size='middle' />\n                        </FormItem>\n                        <FormItem \n                            name='pw2' \n                            label='确认密码' \n                            rules={[\n                                ({getFieldValue})=>({\n                                    validator(rule,value){\n                                        if(!value || getFieldValue('password') === value){\n                                            return Promise.resolve()\n                                        }\n                                        return Promise.reject(\"两次密码输入不一致\")\n                                    }\n                                })\n                            ]}\n                        >\n                            <Input type=\"password\" placeholder=\"请再次输入密码\" size='middle' />\n                        </FormItem>\n                        <Form.Item  wrapperCol={{span: 24}}>\n                            <Button\n                                className=\"login-form-button\"\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                size='middle'\n                                block\n                            >\n                                注册\n                            </Button>\n                        </Form.Item>\n                        <div className='tc  mg-b-20' style={{fontSize: '12px'}}>\n                            <Link to='/user/login' className='grey'>\n                                已有账号，直接登录\n                            </Link>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Index","import React, {useState} from 'react'\nimport { Form, Input, Button, Row, Col, message} from 'antd'\nimport { Link, useHistory  } from '@friday/router'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync } from '@friday/async'\nimport './index.less'\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n    const apis = useApiSelector()\n\n    const [time, setTime] = useState(60)\n    const [isShowCode, setIsShowCode] = useState<boolean>(false)\n    const history = useHistory()\n\n    const sendCode = async () => {\n        const fileds = await form.validateFields(['phone'])\n        if (isShowCode) {\n            return \n        }\n        setIsShowCode(true)\n        const active = setInterval(() => {\n            setTime((preSecond) => {\n              if (preSecond <= 1) {\n                setIsShowCode(false)\n                clearInterval(active)\n                // 重置秒数\n                return 60\n              }\n              return preSecond - 1\n            })\n        }, 1000)\n        const { phone } = fileds\n        const { error, data } = await dispatchAsync(apis.user.sendCode({\n            phone,\n            type: 1\n        }))\n        if (error) return message.error(error)\n        message.success('发送成功')\n    }\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const respone = await dispatchAsync(apis.user.reset(values)) as any\n        if (respone.error) return \n        message.success('重置成功')\n        history.push('/user/login')\n    } \n\n    return (\n        <div className='m-login'>\n            <div className='m-login-header'>\n                洪合杯\n            </div>\n            <div className='m-login-content'>\n                <div className='m-login-main'>\n                    <h3 className='m-title'>重设密码</h3>\n                    <Form \n                        form={form}\n                        labelCol={{ span: 5 }}\n                        onFinish={onFinish}\n                        layout=\"vertical\"\n                        \n                    >\n                        <FormItem \n                            name='phone' \n                            label='手机号'\n                            rules={[{\n                                required: true, \n                                message: '请输入正确的手机号', \n                                pattern: /^1[3456789]\\d{9}$/\n                            }]}\n                        >\n                            <Input  placeholder=\"请输入手机号\" size='middle' />\n                        </FormItem>\n                        <FormItem \n                            name='code' \n                            label='验证码'\n                            rules={[{required: true, message: '请输入验证码'}]}\n                        >\n                            <Input  \n                                placeholder=\"请输入验证码！\" \n                                size='middle' \n                                maxLength={6}\n                                suffix={<a onClick={() => sendCode()}>\n                                  {isShowCode ? `${time}秒后重新发送` : '发送验证码'}\n                                </a>}\n                            />\n                        </FormItem>\n                        <FormItem \n                            name='newPwd' \n                            label='新密码'\n                            rules={[{required: true, message: '请输入新密码'}]}\n                        >\n                            <Input type=\"password\" placeholder=\"请输入新密码\" size='middle' />\n                        </FormItem>\n                        <Form.Item>\n                            <Row gutter={16}>\n                                <Col span={12}>\n                                    <Button block>\n                                        <Link to='/user/login'>取消</Link>\n                                    </Button>\n                                </Col>\n                                <Col span={12}>\n                                    <Button\n                                        className=\"login-form-button\"\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        size='middle'\n                                        block\n                                    >\n                                        确定\n                                    </Button>\n                                </Col>\n                            </Row>\n                            \n                        </Form.Item>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Index","import React, { useCallback } from 'react'\nimport { Redirect, Route, RouteComponentProps } from '@friday/router'\nimport TokenServeice from 'src/services/tokenService'\nimport useUserInfo from 'src/hooks/useUserInfo'\nimport LodingCom from 'src/pages/layouts/LodingCom'\nimport { isEmpty } from 'lodash'\n\nconst PrimaryLayout: React.FC<any> = ({ children, ...rest}) => {\n\n    const { userInfo, fetchUserInfo } = useUserInfo()\n    const renderFn = useCallback((renderProps: RouteComponentProps<any>) => {\n        \n        const { component: Component } = rest\n        if (!TokenServeice.isAuthenticated()) {\n            return (\n                <Redirect\n                    to={`/user/login?path=${location.pathname}`}\n                />\n            )\n        }\n        if (!isEmpty(userInfo)) {\n           \n            if (!Component) {\n                return null\n            }\n            return <Component {...renderProps} />\n        }\n        \n        fetchUserInfo()\n        return (<LodingCom />)\n        // return <Component {...renderProps} />\n    }, [ userInfo ])\n    \n    return (\n        <Route {...rest} component={renderFn} />\n    )\n}\n\nexport default PrimaryLayout","import React from 'react'\nimport { Layout, Menu } from 'antd'\nimport { UploadOutlined, UserOutlined, VideoCameraOutlined, LogoutOutlined, EyeInvisibleOutlined } from '@ant-design/icons'\nimport { Link } from '@friday/router'\nimport { useUserInfo } from 'src/hooks'\nimport { useLocation } from '@friday/router'\n\nconst { Header, Content, Footer, Sider } = Layout\n\nimport './index.less'\n\n\nconst Index = ({children}) => {\n\n    const { pathname } = useLocation()\n\n    const getkeys = () => {\n        if (pathname.indexOf('product') > -1) return '2'\n        if (pathname.indexOf('info') > -1) return '3'\n        if (pathname.indexOf('password') > -1) return '4'\n        return '2'\n    }\n\n    return (\n        <Layout className='components-layout-demo-responsive'>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    console.log(collapsed, type);\n                }}\n            >\n                <div className=\"m-logo\" />\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[getkeys()]}>\n                    <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n                        <Link to='/user/product'> \n                            作品列表\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"3\" icon={<UserOutlined />}>\n                        <Link to='/user/info'> \n                            个人信息\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"4\" icon={<EyeInvisibleOutlined />}>\n                        <Link to='/user/password'> \n                        修改密码\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"5\" icon={<LogoutOutlined />}>\n                        <Link to='/user/login'> \n                        退出登录\n                        </Link>\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n            <Layout style={{minHeight: '100vh' }}>\n                <Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }} />\n                <Content style={{ margin: '24px 16px 0', }}>\n                    <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 540 }}>\n                        {children}\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>洪合杯 ©2021 Created by front </Footer>\n            </Layout>\n        </Layout>)\n}\n\nexport default Index","import React from 'react'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport { Button, Descriptions } from 'antd'\nimport { useRequest } from '@friday/async'\nimport { Link } from '@friday/router'\n\nconst Index = () => {\n\n    const apis = useApiSelector()\n\n    const { dataJson } = useRequest(apis.user.fetchUserInfo({}))\n\n    console.log(dataJson, 'dataJson')\n\n    const { name, email, address, contact} = dataJson\n\n\n    return (\n        <div>\n            <h4 className='m-head'>个人信息</h4>\n            <Descriptions title={name} extra={<Button type='primary'><Link to='/user/info/edit'>修改个人信息</Link></Button>} column={1}>\n                <Descriptions.Item label='邮箱地址'>{email}</Descriptions.Item>\n                <Descriptions.Item label='通讯地址'>{address}</Descriptions.Item>\n                <Descriptions.Item label='联系方式'>{contact}</Descriptions.Item>\n            </Descriptions>\n        </div>\n    )\n}\n\nexport default Index","import React  from \"react\";\nimport { Table, Button } from 'antd'\nimport useColumns from './useColumns'\nimport { Link } from '@friday/router'\nimport { useApiSelector } from 'src/hooks'\nimport { useConfiguration } from '@friday/core'\nimport { dispatchAsync, useRequest } from '@friday/async'\n\n\nconst Index = () => {\n\n    const apis = useApiSelector()\n\n    const { publicUrl } = useConfiguration()\n\n    const columns = useColumns(publicUrl)\n\n    const {dataJson, isValidating} = useRequest(apis.user.productList({}))\n\n\n    return (\n        <div>\n            \n            <div className='mg-b-10'>\n                <Button type='primary'><Link to='/user/product/add' >添加作品</Link></Button>\n            </div>\n\n            <Table \n                columns={columns as any}\n                dataSource={[{...dataJson, id: 1}]}\n                loading={isValidating}\n                rowKey='id'\n                scroll={{\n                    x: 'max-content'\n                }}\n            />\n        </div>\n    )\n}\n\nexport default Index","import React, { useState } from 'react'\nimport { Upload } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { useConfiguration } from '@friday/core'\nimport tokenInstance from 'src/services/tokenService'\nimport { get } from 'lodash'\n\nconst Qrcode = (props) => {\n\n    const { fileList = [], onChange, tips = '上传格式jpg、png、jpeg，大小不超过2M', title='上传图片'  } = props\n\n    const [uploadFileList, setUploadFilelist] = useState<any[]>([])\n\n    const { publicUrl } = useConfiguration()\n\n    const triggerChange = changedValue => {\n        if (onChange) {\n            onChange({ uploadFileList, ...fileList, ...changedValue })\n        }\n    }\n\n    const onUploadChange = ({ fileList }) => {\n        setUploadFilelist(fileList)\n        triggerChange({ fileList })\n    }\n\n    const fileLists = fileList || uploadFileList\n\n    const uploadprops = {\n        name: 'picFile',\n        action: publicUrl.OPEN_API_URL + '/file/upload',\n        accept: 'image/jpeg,image/png,image/jpg',\n        headers: {\n            token: tokenInstance.get() as string\n        },\n        onChange: onUploadChange,\n        fileList: fileLists,\n    }\n\n\n    return (\n        <div>\n            <div className='clearfix'>\n                <Upload\n                    listType=\"picture-card\"\n                    className=\"m-avatar-uploader\"\n                    {...uploadprops}\n                >\n                    \n                    <div>\n                        <PlusOutlined />\n                        <div style={{ marginTop: 8 }}>{title}</div>\n                    </div>\n                </Upload>\n            </div>\n            <div style={{ fontSize: '10px', color: '#999', marginTop: 10 }} >{tips}</div>\n        </div>\n    )\n}\n\nexport default Qrcode","import React  from \"react\";\nimport { Form, Input, Row, Col, Radio, Button, DatePicker, Cascader, message} from 'antd'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { useHistory, useParams } from '@friday/router'\nimport UploadImg from './UploadImg'\nimport { isEmpty, get } from 'lodash'\nimport { useConfiguration } from '@friday/core'\n\n\nconst FormItem = Form.Item\n\nconst normFile = (e: any) => {\n    if (Array.isArray(e)) {\n        return e;\n    }\n    return e && e.fileList\n}\n\nconst getUpload = (uploadResponse) => {\n    // 没图片\n    if (isEmpty(uploadResponse)) return ''\n    return uploadResponse.map(item => {\n        return get(item, 'response.filePath') || ''\n    })\n}   \n\nconst transformUpload = (path=[], prefix) => {\n    if (isEmpty(path)) return ''\n    return path.map(item => {\n        return {\n            response: {\n                data: {\n                    path: item\n                },\n                filePath: item\n            },\n            status: \"done\",\n            thumbUrl: prefix + item\n        }\n    })\n}\n\n\nconst Index = () => {\n    const apis = useApiSelector()\n\n    const [ form ] = Form.useForm()\n\n    const { id } = useParams() as any\n\n    const {dataJson} = useRequest(id ? apis.user.productList({}): null)\n\n    const { publicUrl } = useConfiguration()\n\n    React.useEffect(() => {\n        if (!isEmpty(dataJson)) {\n            const {productPics, productVideos} = dataJson\n            console.log(typeof productPics)\n            const payload = {\n                ...dataJson,\n                productPics: transformUpload(JSON.parse(productPics), publicUrl.OPEN_IMG_URL),\n                productVideos: transformUpload(JSON.parse(productVideos), publicUrl.OPEN_IMG_URL),\n            }\n            form.setFieldsValue(payload)\n        }\n    }, [dataJson])\n\n    const history = useHistory()\n\n    \n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const {productPics, productVideos} = values\n        const respone = await dispatchAsync(apis.user.addProduct({\n            ...values,\n            productPics: JSON.stringify(getUpload(productPics)),\n            productVideos: JSON.stringify(getUpload(productVideos))\n        })) as any\n        \n        if (respone.error) return \n        message.success('添加成功')\n        history.goBack()\n    }\n\n    return (\n        <div>\n            <h4 className='m-head'>添加作品</h4>\n            <Form \n                form={form}\n                labelCol={{\n                    xs:24,\n                    md:6\n                }}\n                wrapperCol={{\n                    xs: 24,\n                    md: 12\n                }}\n                onFinish={onFinish}\n            >\n                <FormItem\n                    label={'参赛类别'}\n                    rules={[{required: true, message: '请选择参赛类别'}]}\n                    name='productType'\n                >\n                    <Radio.Group>\n                        <Radio value={'个人组'}>个人组</Radio>\n                        <Radio value={'团体组'}>团体组</Radio>\n                        <Radio value={'企业组'}>企业组</Radio>\n                    </Radio.Group>\n                </FormItem>\n\n                <FormItem\n                    label={'参赛方向'}\n                    rules={[{required: true, message: '请选择参赛方向'}]}\n                    name='entryDirection'\n                >\n                    <Radio.Group>\n                        <Radio value={'系列服装类'}>系列服装类</Radio>\n                        <Radio value={'经典套装类'}>经典套装类</Radio>\n                        <Radio value={'毛衫文化品牌类'}>毛衫文化品牌类</Radio>\n                    </Radio.Group>\n                </FormItem>\n\n             \n                <FormItem\n                    label={'作品名称(中文)'}\n                    rules={[{required: true, message: '请输入作品名称(中文)'}]}\n                    name='productName'\n                >\n                    <Input placeholder='请输入作品名称(中文)' />\n                </FormItem>\n                <FormItem\n                    label={'作品名称(英文)'}\n                    rules={[{required: true, message: '请输入作品名称(英文)'}]}\n                    name='productNameEn'\n                >\n                    <Input placeholder='请输入作品名称(英文)' />\n                </FormItem>\n                <FormItem\n                    label={'推荐人'}\n                    rules={[{required: true, message: '请输入推荐人'}]}\n                    name='recommendName'\n                >\n                    <Input placeholder='请输入推荐人' />\n                </FormItem>\n\n                <FormItem\n                    label={'作品图片'}\n                    rules={[{required: true, message: '请上传作品图片'}]}\n                    name='productPics'\n                    valuePropName=\"fileList\"\n                    getValueFromEvent={normFile}\n                >\n                    <UploadImg title='上传图片' />\n                </FormItem>\n                <FormItem\n                    label={'作品视频'}\n                    rules={[{required: true, message: '请上传作品视频'}]}\n                    name='productVideos'\n                    valuePropName=\"fileList\"\n                    getValueFromEvent={normFile}\n                >\n                    <UploadImg title='上传视频' />\n                </FormItem>\n                <FormItem\n                    label={'设计主题及作品说明(中文)'}\n                    rules={[{required: true, message: '请输入设计主题及作品说明(中文)'}]}\n                    name='productDesc'\n                >\n                    <Input.TextArea placeholder='请输入设计主题及作品说明(中文)' />\n                </FormItem>\n                <FormItem\n                    label={'设计主题及作品说明(英文)'}\n                    rules={[{required: true, message: '请输入设计主题及作品说明(英文)'}]}\n                    name='productDescEn'\n                >\n                    <Input.TextArea placeholder='请输入设计主题及作品说明(英文)' />\n                </FormItem>\n                <div className='tc' style={{width: '328px', margin: '0 auto'}}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size='middle'\n                        block\n                    >\n                        保存\n                    </Button>\n                </div>\n            </Form>\n\n        </div>\n    )\n}\n\nexport default Index","import React from 'react'\nimport { Form, Input, Button, message } from 'antd'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync } from '@friday/async'\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n    const [form] = Form.useForm()\n    const apis = useApiSelector()\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const respone = await dispatchAsync(apis.user.updatePassword(values)) as any\n        if (respone.error) return \n        message.success('修改成功')\n    } \n    return (\n        <div>\n            <h4 className='m-head'>修改密码</h4>\n            <Form\n                form={form}\n                labelCol={{span: 3}}\n                onFinish={onFinish}\n            >\n                <FormItem name='phone' label='手机号'>\n                    <Input  placeholder=\"请输入您的手机号！\" size='middle' />\n                </FormItem>\n                <FormItem name='oldPwd' label='旧密码'>\n                    <Input  placeholder=\"请输入您的旧密码！\" type='password' size='middle' />\n                </FormItem>\n                <FormItem name='newPwd' label='新密码'>\n                    <Input  placeholder=\"请输入您的新密码！\" type='password' size='middle' />\n                </FormItem>\n                <div className='tc' style={{width: '328px', margin: '0 auto'}}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size='middle'\n                        block\n                    >\n                        保存\n                    </Button>\n                </div>\n            </Form>\n        </div>\n    )\n}\n\nexport default Index","import React from 'react'\n\n\nconst Index = (props) => {\n    const {name, en , required} = props\n    return (\n        <div style={{position: 'relative'}}> \n            <span className='red' style={{fontFamily: 'SimSun, sans-serif'}}>{required ? '*' : ''}</span> {name} \n            <div style={{ fontSize: '10px', color: '#999'}}>{en}</div>\n        </div>\n    )\n}\n\nexport default Index","import React, { useState } from 'react'\nimport { Upload } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { useConfiguration } from '@friday/core'\nimport tokenInstance from 'src/services/tokenService'\nimport { get } from 'lodash'\n\nconst Qrcode = (props) => {\n\n    const { fileList = [], onChange, tips = '上传格式jpg、png、jpeg，大小不超过2M', title='上传图片' } = props\n\n    const [uploadFileList, setUploadFilelist] = useState<any[]>([])\n\n    const { publicUrl } = useConfiguration()\n\n    const triggerChange = changedValue => {\n        if (onChange) {\n            onChange({ uploadFileList, ...fileList, ...changedValue })\n        }\n    }\n\n    const onUploadChange = ({ fileList }) => {\n        setUploadFilelist(fileList)\n        triggerChange({ fileList })\n    }\n\n    const fileLists = fileList || uploadFileList\n\n    const uploadprops = {\n        name: 'picFile',\n        action: publicUrl.OPEN_API_URL + '/file/upload',\n        accept: 'image/jpeg,image/png,image/jpg',\n        headers: {\n            token: tokenInstance.get() as string\n        },\n        onChange: onUploadChange,\n        fileList: fileLists,\n    }\n\n\n    return (\n        <div>\n            <div className='clearfix'>\n                <Upload\n                    listType=\"picture-card\"\n                    className=\"m-avatar-uploader\"\n                    {...uploadprops}\n                >\n                    {fileList.length > 0 ? null :\n                        <div>\n                            <PlusOutlined />\n                            <div style={{ marginTop: 8 }}>{title}</div>\n                        </div>\n                    }\n                </Upload>\n            </div>\n            <div style={{ fontSize: '10px', color: '#999', marginTop: 10 }} >{tips}</div>\n        </div>\n    )\n}\n\nexport default Qrcode","import React from 'react'\nimport { Form, Input, Row, Col, Radio, Button, DatePicker, Cascader, message} from 'antd'\nimport FormLabel from './FormLabel'\nimport options from 'src/common/city.json'\nimport UploadImg from './UploadImg'\nimport { useHistory } from '@friday/router'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport { useConfiguration } from '@friday/core'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { omit, isEmpty, get, pick } from 'lodash'\nimport moment from 'moment'\nimport './index.less'\n\nconst FormItem = Form.Item\n\n\nconst normFile = (e: any) => {\n    if (Array.isArray(e)) {\n        return e;\n    }\n    return e && e.fileList\n}\n\nconst getUpload = (uploadResponse) => {\n    // 没图片\n    if (isEmpty(uploadResponse)) return  ''\n\n    return get(uploadResponse, '[0].response.filePath') || ''\n}   \n\nconst transformUpload = (path, prefix) => {\n\n    if (!path) return ''\n\n    return [{\n        response: {\n            data: {\n                path: path\n            },\n            filePath: path\n        },\n        status: \"done\",\n        thumbUrl: prefix + path\n    }]\n}\n\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n\n    const apis = useApiSelector()\n    \n    const history = useHistory()\n\n    const { publicUrl } = useConfiguration()\n\n    const { dataJson } = useRequest(apis.user.fetchUserInfo({}))\n\n    React.useEffect(() => {\n        if (!isEmpty(dataJson)) {\n            \n            const {idcardBack, idcardFront, photo, province, city, county, birthday} = dataJson\n            const area = [province, city, county]\n            const payload = {\n                ...omit(dataJson, ['birthday','idcardBack', 'idcardFront', 'photo']),    \n                area,      \n                idcardBack: transformUpload(idcardBack, publicUrl.OPEN_IMG_URL),\n                idcardFront: transformUpload(idcardFront, publicUrl.OPEN_IMG_URL),\n                birthday: moment(birthday),\n                photo: transformUpload(photo, publicUrl.OPEN_IMG_URL),\n            }\n            console.log(payload, 'payload')\n            form.setFieldsValue(payload)\n        }\n    }, [dataJson]) \n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const { birthday, area, idcardBack, idcardFront, photo } = values\n        const [province, city, county] = area\n        const respone = await dispatchAsync(apis.user.completeInfo({\n            ...omit(values, ['birthday', 'area', 'idcardBack', 'idcardFront', 'photo']),\n            birthday: moment(birthday).format('YYYY/MM/DD'),\n            province,\n            city,\n            county,\n            idcardBack: getUpload(idcardBack),\n            idcardFront: getUpload(idcardFront),\n            photo: getUpload(photo)\n        })) as any\n        if (respone.error) return \n        message.success('更新成功')\n        history.push('/user/info')\n        \n    } \n\n    return (\n        <div className='m-info'>\n            <h4 className='m-head'>完善个人信息</h4>\n            <Form \n                form={form}\n                labelCol={{span: 7}}\n                onFinish={onFinish}\n            >\n                <Row gutter={16}>\n                    <Col span={12} xs={24} md={12}>\n                        <FormItem\n                            label={<FormLabel name='用户名' en='User name' required />}\n                            rules={[{required: true, message: '请输入用户名'}]}\n                            name='username'\n                        >\n                            <Input placeholder='请输入用户名' />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='姓名' en='Name' required />}\n                            rules={[{\n                                required: true, \n                                message: '请输入姓名', \n                            }]}\n                            name='name'\n                        >\n                            <Input placeholder='请输入姓名'/>\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='性别' en='Gender' required />}\n                            rules={[{\n                                required: true, \n                                message: '请选择性别', \n                            }]}\n                            name='sex'\n                        >\n                            <Radio.Group>\n                                <Radio value={0}>男</Radio>\n                                <Radio value={1}>女</Radio>\n                            </Radio.Group>\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='照片' en='Photo' required />}\n                            rules={[{\n                                required: true, \n                                message: '请上传照片', \n                            }]}\n                            className='preview'\n                            valuePropName=\"fileList\"\n                            getValueFromEvent={normFile}\n                            name='photo'\n                        >\n                            <UploadImg />\n                        </FormItem>\n                    </Col>\n                    <Col span={12} xs={24} md={12}>\n                        <FormItem\n                            label={<FormLabel name='出生年/月/日' en='\bBirth date' required />}\n                            rules={[{\n                                required: true, \n                                message: '请选择出生年月日', \n                            }]}\n                            name='birthday'\n                        >\n                            <DatePicker style={{width: '100%'}} />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='身份证号码' en='\bID Card No.' required />}\n                            rules={[{\n                                required: true, \n                                message: '请输入身份证号码', \n                            }]}\n                            name='idcard'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='身份证正面照' en='\bID Card Copy' required />}\n                            name='idcardFront'\n                            className='preview'\n                            valuePropName=\"fileList\"\n                            getValueFromEvent={normFile}\n                        >\n                            <UploadImg />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='身份证反面照' en='\bID Card Copy' required />}\n                            name='idcardBack'\n                            className='preview'\n                            valuePropName=\"fileList\"\n                            getValueFromEvent={normFile}\n                        >\n                            <UploadImg />\n                        </FormItem>\n                    </Col>\n                </Row>\n\n                <Row gutter={16} className='mg-t-20'>\n                    <Col span={12} xs={24} md={12}>\n                        <FormItem\n                            label={<FormLabel name='职业' en='\bOccupation' required />}\n                            name='profession'\n                            rules={[{\n                                required: true, \n                                message: '请输入职业', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='籍贯' en='Native place' required />}\n                            name='area'\n                            rules={[{\n                                required: true, \n                                message: '请选择籍贯', \n                            }]}\n                        >\n                            <Cascader  options={options} />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='院校名称' en='Educational background' required />}\n                            name='school'\n                            rules={[{\n                                required: true, \n                                message: '请输入院校名称', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='专业' en='specialty' required />}\n                            name='professional'\n                            rules={[{\n                                required: true, \n                                message: '请输入专业', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='学历' en='Education background'  />}\n                            name='education'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='工作单位' en='Company'  required />}\n                            name='employer'\n                            rules={[{\n                                required: true, \n                                message: '请输入工作单位', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='QQ号' en='QQ'  />}\n                            name='qq'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='微信号' en='WeChat'  required/>}\n                            name='wechat'\n                            rules={[{\n                                required: true, \n                                message: '请输入微信号', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='邮箱' en='E-mail' required />}\n                            name='email'\n                            rules={[{\n                                required: true, \n                                message: '请输入邮箱', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                    </Col>\n                    <Col span={12} xs={24} md={12} >\n                        <FormItem\n                            label={<FormLabel name='职务' en='Postion'  />}\n                            name='position'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='工作经历' en='Work experience'  />}\n                            name='workExperience'\n                        >\n                            <Input.TextArea />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='获奖经历' en='Award experience'  />}\n                            name='awardExperience'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='通信地址' en='Address' required />}\n                            name='address'\n                            rules={[{\n                                required: true, \n                                message: '请输入通信地址', \n                            }]}\n                        >\n                            <Input.TextArea />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='联系方式' en='Contact' required />}\n                            name='contact'\n                            rules={[{\n                                required: true, \n                                message: '请输入联系方式', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                    </Col>\n                </Row>\n                <div className='tc' style={{width: '328px', margin: '0 auto'}}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size='middle'\n                        block\n                    >\n                        保存\n                    </Button>\n                </div>\n            </Form>\n            \n        </div>\n    )\n}\n\nexport default Index\n","import React, { Suspense } from 'react' \nimport { Route, useScrollTop, useRouteMatch } from '@friday/router'\n\nimport BaseLayout from './BaseLayout'\nimport Info from '../info'\nimport ProductList from '../product'\nimport ProductAdd from '../product/AddProduct'\nimport PassWord from '../Password'\nimport EditInfo from '../info/EditInfo'\n\n\nconst PrimaryRoutes = () => {\n    const match = useRouteMatch()\n    useScrollTop()\n    return (\n        <BaseLayout>\n            <Route path={`${match.path}/password`} component={PassWord} />\n            <Route path={`${match.path}/info`} exact component={Info} />\n            <Route path={`${match.path}/info/edit`} exact component={EditInfo} />\n            <Route path={`${match.path}/product`} exact component={ProductList} />\n            <Route path={`${match.path}/product/add`} component={ProductAdd} />\n            <Route path={`${match.path}/product/edit/:id`} component={ProductAdd} />\n        </BaseLayout>\n    )\n}\n\nexport default PrimaryRoutes","import React from 'react'\nimport { Switch, Route, Redirect, useRouteMatch } from '@friday/router'\nimport Login from 'src/pages/user/auth/Login'\nimport Register from 'src/pages/user/auth/Register'\nimport Reset from 'src/pages/user/auth/Reset'\nimport PrivateRoute from './PrivateRoute'\nimport PrimaryRouter from './layouts/PrimaryRouter'\n\nconst ModuleRouter = () => {\n\tconst match = useRouteMatch()\n    return (\n\t\t<Switch>\n            <Route path={`${match.path}/login`} exact component={Login} />\n            <Route path={`${match.path}/register`} exact component={Register} />\n            <Route path={`${match.path}/Reset`} exact component={Reset} />\n            <PrivateRoute path={`${match.path}`} component={PrimaryRouter} />\n        </Switch>\n    )\n}\n\nexport default ModuleRouter","\nimport React from 'react'\nimport { Switch, Route, Router } from '@friday/router'\nimport Home from './pages/home'\nimport NotFound from 'src/pages/exception/NotFound'\nimport AdminRouter from 'src/pages/admin/ModuleRouter'\nimport userRouter from 'src/pages/user/ModuleRouter'\n\nimport 'src/styles/index.less'\n\nconst App = ({ history }) => {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/404\"  component={NotFound} />  \n        <Route path=\"/admin\" component={AdminRouter} />  \n        <Route path=\"/user\" component={userRouter} />  \n        <Route path='/' exact component={Home} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","\n\nexport const protocol = document.location.protocol\nexport const upstreams = {\n\tdevelopment: {\n\t\tOPEN_API_URL: '101.42.95.249:8088',\n\t},\n\tproduction: {\n\t\tOPEN_API_URL: '101.42.95.249:8088',\n\t}\n\n}\n\nexport enum BaseUrl {\n\tOPEN_API_URL = 'api',\n}\n","\n\nconst combineUrl = (upstream: string, baseName: string, ) => {\n\n\tif (!upstream) {\n\t\tthrow new Error(`ConfigError upstream is empty`)\n\t}\n\n\tif (baseName) return `${window.location.protocol}//${upstream}/${baseName}`\n\n\treturn `${window.location.protocol}//${upstream}`\n}\n\n\nexport default combineUrl","\nimport configuration_dev from './configuration.dev'\nimport configuration_pro from './configuration.pro'\n\n\nconst configurations = [\n\tconfiguration_dev,\n\tconfiguration_pro\n]\n\nexport default configurations","import { IConfiguration } from '@friday/core'\n\nimport { upstreams, BaseUrl } from './constants'\n\nimport combineUrl from './combineUrl'\n\nconst configuration: IConfiguration = {\n\twhiteHosts: [\n\t\t'localhost:3000',\n\t],\n\tpublicUrl: {\n\t\tOPEN_API_URL: combineUrl(upstreams.development.OPEN_API_URL, BaseUrl.OPEN_API_URL),\n\t\tOPEN_IMG_URL: combineUrl(upstreams.development.OPEN_API_URL, '')\n\t}\n}\n\nexport default configuration\n","import { IConfiguration } from '@friday/core'\nimport { upstreams, BaseUrl, protocol } from './constants'\nimport combineUrl from './combineUrl'\n\nconst configuration: IConfiguration = {\n\twhiteHosts: [\n\t\t'localhost:3009',\n\t\t'101.42.95.249:9005'\n\t],\n\tpublicUrl: {\n\t\tOPEN_API_URL: combineUrl(upstreams.production.OPEN_API_URL, BaseUrl.OPEN_API_URL),\n\t\tOPEN_IMG_URL: combineUrl(upstreams.production.OPEN_API_URL, '')\n\t}\n}\n\nexport default configuration\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport Friday from '@friday/core'\n\n// 如果是微服务中的slave 需要添加该文件在entry 入口上方\n// import '@friday/micro/lib/public-path'\n\nimport configurations from 'src/configurations'\n\n\nimport * as serviceWorker from 'src/serviceWorker'\n\nconst app = new Friday({\n    onInjectConfigBefore() {\n        console.log('onInjectConfigBefore hook')\n    },\n    onInjectConfigAfter() {\n        console.log('onInjectConfigAfter hook')\n    },\n    onInjectRouterAfter() {\n        console.log('onInjectConfigAfter hook')\n    },\n    onStarted(configuration) {\n        console.log('onInjectConfigAfter hook')\n    }\n})\n\n// 注入配置\napp.injectConfigurations(configurations)\n\n// api 模块插件\napp.use(require('./middleware').default)\n\n// 注入路由\napp.injectRouters(require('./App').default)\n\n// 启动器\napp.start('#root')\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n","\nimport { getConfiguration } from '@friday/core'\nimport { httpAxios, request_middleware } from '@friday/async'\nimport TokenService from 'src/services/tokenService'\nimport { message } from 'antd'\nimport { debounce, get, includes } from 'lodash'\n\nconst { publicUrl, history } = getConfiguration()\n\nexport const axiosConifg = {\n\tbaseURL: publicUrl.OPEN_API_URL,\n\ttimeout: 20000,\n\theaders: {\n\t\t'Accept': 'application/json;charset=utf-8',\n\t\t'Content-Type': 'application/json;charset=utf-8',\n\t}\n}\n\nconst errorNotice = debounce((text, response?) => {\n\tmessage.error(text)\n\t// sentry 上报\n}, 500)\n\nconst AUTH_PATH = '/'\n\nexport const isApiTimeout = (error): boolean => {\n\treturn error.code === 'ECONNABORTED' && error.message.indexOf('timeout') !== -1\n}\n\nexport const isNetworkError = (error): boolean => {\n\treturn error.message === 'Network Error'\n}\n\nconst redirect = debounce(() => {\n\tconst nextUrl = `${AUTH_PATH}?path=${location.pathname}`\n\treturn history.replace(nextUrl)\n}, 500)\n\n\nexport const axiosInstance = httpAxios(axiosConifg, {\n\trequestSuccessHook(config) {\n\t\treturn { ...config, headers: { ...config.headers, token: TokenService.get() } }\n\t},\n\tresponseErrorHooks(error) {\n\t\tconst status = error.response.status\n\t\t// 超时、网络异常\n\t\tif (isApiTimeout(error)) {\n\t\t\t// eslint-disable-next-line\n\t\t\terrorNotice('接口请求超时')\n\t\t}\n\n\t\tif (isNetworkError(error)) {\n\t\t\terrorNotice('网络异常')\n\t\t}\n\n\t\tif (error.response && status === 401) {\n\t\t\terrorNotice('登录超时')\n\t\t\tredirect()\n\t\t\treturn Promise.reject(error)\n\t\t}\n\n\t\t// 系统错误\n\t\tif (error.response && status >= 400) {\n\t\t\tconst { data } = error.response\n\t\t\t// blob to  json\n\t\t\tif (Object.prototype.toString.call(data) === \"[object Blob]\" && (data.type === 'application/json')) {\n\t\t\t\tlet reader = new FileReader() as any\n\t\t\t\treader.readAsText(data, 'utf-8');\n\t\t\t\treader.onload = () => {\n\t\t\t\t\tconst text = JSON.parse(reader.result)\n\t\t\t\t\tmessage.error(text.message)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst notice = get(error, 'response.data.msg') || '系统异常'\n\t\t\t\terrorNotice(notice, error.response)\n\t\t\t\tconsole.error(error.response, 'system error')\n\t\t\t}\n\t\t}\n\t\treturn Promise.reject(error)\n\t}\n})\n\nconst axios_middleware = request_middleware({axiosInstance})\n\nexport default axios_middleware\n","import React from 'react'\nimport zhCN from 'antd/lib/locale/zh_CN'\nimport 'moment/locale/zh-cn'\nimport { ConfigProvider } from 'antd'\n\n\nconst validateMessages = {\n  required: \"请填写，该字段是必填字段！\",\n  // ...\n};\n\nconst antd_middleware = ({ App, config }) => {\n\n\treturn {\n\t\tApp(props) {\n\t\t\treturn (\n\t\t\t\t<ConfigProvider form={{validateMessages}} locale = {zhCN}>\n\t\t\t\t\t<App { ...props } />\n\t\t\t\t</ConfigProvider>\n\t\t\t)\n\t\t},\n\t\tconfig\n\t}\n}\n\nexport default antd_middleware","\nimport axios_middleware from './axiosMiddleware'\nimport antd_middleware from './antdMiddleware'\nimport { global_middleware } from './globalMiddleware'\n\nconst middlewares = [\n\tantd_middleware,\n\taxios_middleware,\n\tglobal_middleware,\n]\n\nexport default middlewares\n","import Cookie from 'js-cookie'\n\nexport const TOKEN_NAME = 'Token'\n\nclass TokenService<T extends string > {\n\n    private readonly tokenName: string = TOKEN_NAME\n\n    public set(v: T): void {\n        if (typeof v !== 'string') {\n            return console.warn(`Token accept string key. but params is ${typeof v}`)\n        }\n        Cookie.set(this.tokenName, v)\n    }\n\n    public get(): string | undefined {\n        return Cookie.get(this.tokenName) \n    }\n\n    public clear(): void {\n        return Cookie.remove(this.tokenName)\n    } \n\n    public isAuthenticated(): boolean {\n        return !!this.get()\n    }\n}\n\nexport default new TokenService<string>()"],"sourceRoot":""}