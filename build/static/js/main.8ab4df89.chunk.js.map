{"version":3,"sources":["../webpack/universalModuleDefinition","middleware/globalMiddleware.ts","pages/home/images/banner.png","pages/home/images/pic_01.jpeg","pages/home/images/pic_02.jpeg","pages/home/index.tsx","pages/exception/NotFound.tsx","apiStore/index.ts","pages/home/api.ts","pages/user/apis/index.ts","pages/admin/apis/index.ts","hooks/useApiSelector.ts","hooks/useUserInfo.ts","pages/admin/auth/Login.tsx","pages/layouts/LodingCom.tsx","pages/admin/PrivateRoute.tsx","pages/admin/layouts/BaseLayout.tsx","pages/admin/review/has/index.tsx","pages/admin/review/treat/index.tsx","pages/admin/manage/has/index.tsx","pages/admin/manage/treat/index.tsx","pages/admin/layouts/PrimaryRouter.tsx","pages/admin/ModuleRouter.tsx","pages/user/auth/Login.tsx","pages/user/auth/Register.tsx","pages/user/auth/Reset.tsx","pages/user/PrivateRoute.tsx","pages/user/layouts/BaseLayout.tsx","pages/user/info/index.tsx","pages/user/product/useColumns.tsx","pages/user/product/index.tsx","pages/user/product/AddProduct.tsx","pages/user/Password.tsx","pages/user/info/FormLabel.tsx","pages/user/info/UploadImg.tsx","pages/user/info/EditInfo.tsx","pages/user/layouts/PrimaryRouter.tsx","pages/user/ModuleRouter.tsx","App.tsx","configurations/constants.ts","configurations/combineUrl.ts","configurations/index.ts","configurations/configuration.dev.ts","configurations/configuration.pro.ts","serviceWorker.ts","index.tsx","middleware/axiosMiddleware.ts","middleware/antdMiddleware.tsx","middleware/index.ts","services/tokenService.ts"],"names":["root","factory","exports","module","define","amd","this","GlobalState_middleware","userInfo","globalLoading","global_middleware","middleware","useGlobalContext","Home","className","src","banner","href","pic_one","pic_two","Notfind","status","title","subTitle","extra","type","to","apis","home","getTest","createGetApi","url","getPost","createPostApi","user","prefix_config","login","fetchUserInfo","register","sendCode","reset","updatePassword","completeInfo","addProduct","productList","admin","manage_config","review_config","manageLogin","reviewLogin","useApiSelector","useUserInfo","state","dispatch","dispatchUserInfo","value","a","dispatchAsync","dataJson","error","FormItem","Item","Index","useForm","form","useParams","history","useHistory","onFinish","validateFields","values","respone","TokenService","set","token","message","success","push","layout","name","label","rules","required","placeholder","size","htmlType","block","LodingCom","children","spinning","style","height","backgroundColor","PrimaryLayout","rest","renderFn","useCallback","renderProps","Component","component","TokenServeice","isAuthenticated","location","pathname","Header","Content","Footer","Sider","console","log","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","theme","mode","defaultSelectedKeys","key","icon","FileOutlined","FileDoneOutlined","LogoutOutlined","minHeight","padding","margin","textAlign","PrimaryRoutes","match","useRouteMatch","useScrollTop","path","BaseLayout","exact","ReviewHas","ReviewTreat","ManageHas","ManageTreat","ModuleRouter","Login","PrivateRoute","PrimaryRouter","complete","warning","pattern","fontSize","useState","time","setTime","isShowCode","setIsShowCode","fileds","active","setInterval","preSecond","clearInterval","phone","data","area","province","city","labelCol","span","wrapperCol","maxLength","suffix","onClick","getFieldValue","validator","rule","Promise","reject","resolve","gutter","VideoCameraOutlined","UserOutlined","EyeInvisibleOutlined","useRequest","email","address","contact","column","useColumns","React","useMemo","dataIndex","render","split","columns","isValidating","dataSource","id","loading","rowKey","useEffect","setFieldsValue","goBack","Group","width","props","en","position","fontFamily","color","Qrcode","fileList","onChange","uploadFileList","setUploadFilelist","publicUrl","useConfiguration","triggerChange","changedValue","fileLists","uploadprops","action","OPEN_API_URL","accept","headers","tokenInstance","get","listType","length","PlusOutlined","marginTop","normFile","e","Array","isArray","getUpload","uploadResponse","transformUpload","prefix","response","filePath","thumbUrl","idcardBack","idcardFront","photo","county","payload","OPEN_IMG_URL","birthday","moment","format","xs","FormLabel","valuePropName","getValueFromEvent","UploadImg","options","TextArea","PassWord","Info","EditInfo","ProductList","ProductAdd","Register","Reset","App","NotFound","AdminRouter","userRouter","BaseUrl","upstreams","document","protocol","combineUrl","upstream","baseName","Error","window","configurations","whiteHosts","Boolean","hostname","app","Friday","onInjectConfigBefore","onInjectConfigAfter","onInjectRouterAfter","onStarted","configuration","injectConfigurations","use","require","default","injectRouters","start","navigator","serviceWorker","ready","then","registration","unregister","catch","getConfiguration","axiosConifg","baseURL","timeout","errorNotice","text","redirect","nextUrl","replace","axiosInstance","httpAxios","requestSuccessHook","config","responseErrorHooks","code","indexOf","isApiTimeout","isNetworkError","Object","prototype","toString","call","reader","FileReader","readAsText","onload","JSON","parse","result","notice","axios_middleware","request_middleware","validateMessages","middlewares","locale","zhCN","tokenName","v","warn","Cookie","remove"],"mappings":"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","file":"static/js/main.8ab4df89.chunk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"appweb-main\"] = factory();\n\telse\n\t\troot[\"appweb-main\"] = factory();\n})(this, function() {\nreturn ","import { GlobalState_middleware } from '@friday/core'\n\n\nexport const { middleware: global_middleware, useGlobalContext } = GlobalState_middleware({ \n\tuserInfo: {},\n\tglobalLoading: false\n})\n\n\nexport default global_middleware","export default __webpack_public_path__ + \"static/media/banner.d2ec0092.png\";","export default __webpack_public_path__ + \"static/media/pic_01.75506d0d.jpeg\";","export default __webpack_public_path__ + \"static/media/pic_02.449580fd.jpeg\";","\nimport React from 'react'\nimport banner from './images/banner.png'\nimport pic_one from './images/pic_01.jpeg'\nimport pic_two from './images/pic_02.jpeg'\nimport './home.less'\n\nconst Home = () => {\n\n\treturn (\n\t\t<div className='m-home-wrapper'>\n\t\t\t<div className='m-home-banner'>\n\t\t\t\t<img src={banner} />\n\t\t\t</div>\n\t\t\t<div className='m-home-nav'>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a>大赛简介</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a>参赛要求</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a>奖项设置</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a>大赛流程</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a>组织机构</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href='/user/login'>立即参赛</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href='/admin/review/login'>评委入口</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href='/admin/manage/login'>管理员</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className='m-home-main'>\n\t\t\t\t<div className='m-home-section'>\n\t\t\t\t\t<h3>大赛简介</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t文明如火，烛照人类前行；\n\t\t\t\t\t\t针线跃动，开启设计新景。\n\n\t\t\t\t\t\t不论你是天马行空、才华横溢的设计师；\n\n\t\t\t\t\t\t还是寻求突破、勇于挑战的创作者，引领时尚风潮的前沿者；\n\n\t\t\t\t\t\t亦或是热衷探索服装价值的的品牌人，\n\n\t\t\t\t\t\t这里有一封来自“洪合杯”的邀请信，\n\n\t\t\t\t\t\t有才，你就来！\n\n\t\t\t\t\t\t首届“2022“洪合杯”毛衫设计大赛”邀请你报名啦！\n\n\t\t\t\t\t\t2021年11月8日正式启动，截稿2022年4月15日24:00。\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section'>\n\t\t\t\t\t<h3>参赛要求</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t1.国内外注册服装设计生产企业、设计师，服装设计机构、品牌设计师，高校服装、设计类师生，以及热爱毛针织服装设计的社会各界人士均可参赛（所有参赛企业及参赛者无不良记录）。\n\n\t\t\t\t\t2.院校学生个人及团队参赛均需指定至少1名参赛指导教师。\n\n\t\t\t\t\t3.拥有设计能力的个体组成团队参赛：团队核心成员至少2人但不超过5人。\n\n\t\t\t\t\t4.参赛作品未进入市场，具有良好的市场潜力；参赛作品的创意、款式、色彩、工艺及相关专利拥有自主知识产权且无知识产权纠纷。\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section'>\n\t\t\t\t\t<h3>作品要求</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t参赛作品必须是作者本人或团队原创设计作品，不得侵犯他人知识产权。创作过程及作品本身不得摹仿、抄袭、拷贝国内外的作品或创意，不得侵犯他人的知识产权。\n\n\t\t\t\t\t所有因参赛作品引发的版权或知识产权纠纷均与大赛组委会无关。参赛者按要求签署作品《原创承诺书》，后一经发现有抄袭作品、发生知识产权或版权纠纷等情况，将取消作者参赛资格，并由作者承担相应后果。\n\n\t\t\t\t\t大赛设置“系列服饰类、经典套装类、毛衫文化品牌类”三个征集方向。\n\n\t\t\t\t\t1.系列服饰类：以数字、未来、时尚、文化为主题设计的系列毛针织服装参赛。包括精梳类、粗梳类和花色纱类系列男装、女装。自己搭配（编织）首饰、包、围巾、帽等饰品。参赛作品以男/女羊绒、羊毛、混纺针织系列服装为主，每个系列参赛作品不少于4件/套。\n\n\t\t\t\t\t2.经典套装类：以数字、未来、时尚、文化为主题设计的单套毛针织服装参赛。包括精梳类、粗梳类和花色纱类系列男装、女装。自己搭配（编织）首饰、包、围巾、帽等饰品。参赛作品以男/女羊绒、羊毛、混纺针织服装为主，每套作品包括上装和下装或连身服装及配饰。\n\n\t\t\t\t\t3.毛衫文化品牌类：围绕毛衫品牌logo、海报、包装、吉祥物及相关品牌识别的视觉形象进行设计。品牌参赛作品必须按套/系列参赛。\n\n\t\t\t\t\t注：\n\n\t\t\t\t\t(1)参赛作品必须是毛针织工艺服装，参赛作品按所属类别报名参赛；无法确定归属类别或归类不正确的由组委会给予判定。\n\n\t\t\t\t\t(2)横机针织面料可以与其他面料拼接(其中横机针织面料不能少于80%），要求作品主题明确、系列完整、概念清晰，服饰配套齐全。\n\n\t\t\t\t\t(3)独创钩编可作为配饰与服装一起列入参赛范围（加分项）。\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section'>\n\t\t\t\t\t<h3>奖项设置</h3>\n\t\t\t\t\t<p className='tc'>\n\t\t\t\t\t\t<img src={pic_one} />\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section'>\n\t\t\t\t\t<h3>大赛流程</h3>\n\t\t\t\t\t\n\t\t\t\t\t<p className='tc'>参赛者通过以下步骤进行作品上传，作品提交成功即报名成功</p>\n\t\t\t\t\t<ul className='tc'>\n\t\t\t\t\t\t<li>注册登录</li>\n\t\t\t\t\t\t<li>作品上传</li>\n\t\t\t\t\t\t<li>作品提交</li>\n\t\t\t\t\t\t<li>报名成功</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section'>\n\t\t\t\t\t<h3>组织机构</h3>\n\t\t\t\t\t<p className='tc'>\n\t\t\t\t\t\t<img src={pic_two} />\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n\n}\n\nexport default Home","import React from 'react'\nimport { Result, Button } from 'antd'\nimport { Link } from '@friday/router'\n\nconst Notfind = () => {\n\treturn (\n\t\t<Result\n\t\t\tstatus=\"404\"\n\t\t\ttitle=\"404\"\n\t\t\tsubTitle=\"Sorry, the page you visited does not exist.\"\n\t\t\textra={\n\t\t\t\t<Button type=\"primary\">\n\t\t\t\t\t<Link to='/'>返回首页</Link>\n\t\t\t\t</Button>\n\t\t\t}\n\t\t/>\n\t)\n}\nexport default Notfind","import HomeApi from 'src/pages/home/api'\nimport UserApi from 'src/pages/user/apis'\nimport AdminApi from 'src/pages/admin/apis'\n\nexport const apis = {\n\thome: new HomeApi(),\n\tuser: new UserApi(),\n\tadmin: new AdminApi()\n}\n\nexport type IApis = typeof apis\n\n","\nimport { createGetApi, createPostApi } from '@friday/async'\n\n\nexport default class Apis {\n\tgetTest = createGetApi<any, {test: number}>({ url: '/test'})\n\tgetPost = createPostApi({ url: '/test_post' })\n}\n\n","import { createGetApi, createPostApi } from '@friday/async'\n\n\nexport default class Apis {\n\n    private prefix_config = '/user'\n\t\n\t// 用户登录\n\tpublic login = createPostApi({ url: `${this.prefix_config}/login`})\n\n    // 用户信息\n    public fetchUserInfo = createGetApi<any>({ url: `${this.prefix_config}/info`})\n\n    // 用户注册\n    public register = createPostApi<{}>({ url: `${this.prefix_config}/register`})\n\n    // 发送验证码\n    public sendCode = createPostApi<any>({url: '/phone/codeSend'})\n\n    // 找回密码\n    public reset = createPostApi<any>({url: `${this.prefix_config}/pwd/reset`})\n\n    // 修改密码\n    public updatePassword = createPostApi<any>({url: `${this.prefix_config}/pwd/update`})\n\n    // 完善个人信息\n    public completeInfo = createPostApi<any>({url: `${this.prefix_config}/complete`})\n\n    // 添加作品\n    public addProduct = createPostApi<any>({url: `${this.prefix_config}/signup`})\n\n    // 作品列表\n    public productList = createGetApi<any>({url: `${this.prefix_config}/signup/info`})\n\n}\n","import { createGetApi, createPostApi } from '@friday/async'\n\n\nexport default class Apis {\n\n    private manage_config = '/manage'\n\n    private review_config = 'review'\n\t\n\t// 管理员登录\n\tpublic manageLogin = createPostApi({ url: `${this.manage_config}/login`})\n\n    // 评审登录\n    public reviewLogin = createPostApi({ url: `${this.review_config}/login`})\n\n}\n\n","\nimport { apis } from 'src/apiStore'\n\nconst useApiSelector = () => {\n\treturn apis\n}\n\nexport default useApiSelector\n\n\n","import React from 'react'\nimport { dispatchAsync } from '@friday/async'\nimport { useApiSelector } from 'src/hooks'\nimport { useGlobalContext } from 'src/middleware/globalMiddleware'\nimport * as Cookie from 'js-cookie'\n\n\nconst useUserInfo = () => {\n\n\tconst { state, dispatch } = useGlobalContext()\n\n\tconst apis = useApiSelector()\n\n\tconst dispatchUserInfo = (value: {}) => {\n\t\tdispatch({type: 'userInfo', value})\n\t}\n\n\t// 获取用户信息\n\tconst fetchUserInfo = async () => {\n\t\tconst { dataJson, error } = await dispatchAsync(apis.user.fetchUserInfo({}))\n\t\tif (error) return\n\t\tdispatchUserInfo(dataJson)\n\t}\n\t\n\treturn {\n\t\tuserInfo: state.userInfo || {} ,\n\t\tfetchUserInfo,\n\t\tdispatchUserInfo\n\t}\n}\n\nexport default useUserInfo","import React from 'react'\nimport { Form, Input, Button, message } from 'antd'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\nimport { Link } from '@friday/router'\nimport { useHistory, useParams } from '@friday/router'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport { dispatchAsync } from '@friday/async'\nimport TokenService from 'src/services/tokenService'\nimport './index.less'\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n\n    const { type } = useParams() as any\n\n    const apis = useApiSelector()\n\n    const {dispatchUserInfo} = useUserInfo()\n    \n    const history = useHistory()\n\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const respone = await dispatchAsync(type == 'review' ? apis.admin.reviewLogin(values) : apis.admin.manageLogin(values)) as any\n        if (respone.error) return \n        TokenService.set(respone?.token.token)\n        dispatchUserInfo(respone.dataJson)\n        message.success('登录成功')\n        history.push(`/admin/${type}has`)\n    } \n\n    return (\n        <div className='m-login'>\n            <div className='m-login-header'>\n                洪合杯\n            </div>\n            <div className='m-login-content'>\n                <div className='m-login-main'>\n                    <h3 className='m-title'>登录</h3>\n                    <Form \n                        form={form}\n                        onFinish={onFinish}\n                        layout=\"vertical\"\n                    >\n                        <FormItem \n                            name='username'\n                            label='账号'\n                            rules={[{required: true, message: '请输入账号'}]}\n                        >\n                            <Input  placeholder=\"请输入账号\" size='middle' />\n                        </FormItem>\n                        <FormItem \n                            name='password'\n                            label='密码'\n                            rules={[{required: true, message: '请输入密码'}]}\n                        >\n                            <Input type=\"password\" placeholder=\"请输入密码\" size='middle' />\n                        </FormItem>\n                        <Form.Item>\n                            <Button\n                                className=\"login-form-button\"\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                size='middle'\n                                block\n                            >\n                                登录\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Index","import React from 'react'\nimport { Spin } from 'antd'\n\nconst LodingCom: React.FC<any> = ({ children }) => {\n\n    return (\n        <Spin spinning={ true }>\n            <div style={{height: 800, backgroundColor: '#fff'}}>\n                {children}\n            </div>\n        </Spin>\n    )\n}\n\nexport default LodingCom","import React, { useCallback } from 'react'\nimport { Redirect, Route, RouteComponentProps } from '@friday/router'\nimport TokenServeice from 'src/services/tokenService'\nimport useUserInfo from 'src/hooks/useUserInfo'\nimport LodingCom from 'src/pages/layouts/LodingCom'\nimport { isEmpty } from 'lodash'\n\nconst PrimaryLayout: React.FC<any> = ({ children, ...rest}) => {\n\n    const { userInfo, fetchUserInfo } = useUserInfo()\n    const renderFn = useCallback((renderProps: RouteComponentProps<any>) => {\n        \n        const { component: Component } = rest\n\n\n        if (!TokenServeice.isAuthenticated()) {\n            return (\n                <Redirect\n                    to={`/admin/1/login?path=${location.pathname}`}\n                />\n            )\n        }\n        if (!isEmpty(userInfo)) {\n           \n            if (!Component) {\n                return null\n            }\n            return <Component {...renderProps} />\n        }\n        \n        fetchUserInfo()\n        return (<LodingCom />)\n        // return <Component {...renderProps} />\n    }, [ userInfo ])\n    \n    return (\n        <Route {...rest} component={renderFn} />\n    )\n}\n\nexport default PrimaryLayout","import React from 'react'\nimport { Layout, Menu } from 'antd'\nimport { FileOutlined, FileDoneOutlined, LogoutOutlined } from '@ant-design/icons'\nimport { Link } from '@friday/router'\nimport useUserInfo from 'src/hooks/useUserInfo'\n\nconst { Header, Content, Footer, Sider } = Layout\n\nimport './index.less'\n\n\nconst Index = ({children}) => {\n\n    const { userInfo } = useUserInfo()\n\n    const { type } = userInfo as any\n\n    console.log(type, '111')\n\n    return (\n        <Layout>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    console.log(collapsed, type);\n                }}\n            >\n                <div className=\"m-logo\" />\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                    \n                    {type == 2 && \n                        <Menu.Item key=\"1\" icon={<FileOutlined />} >\n                            <Link to='/admin/reviewtreat'>\n                                待评审作品\n                            </Link>\n                        </Menu.Item>\n                    }\n                    {type == 2 && \n                        <Menu.Item key=\"2\" icon={<FileDoneOutlined />} >\n                            <Link to='/admin/reviewhas'>\n                            已评审作品\n                            </Link>\n                        </Menu.Item>\n                    }\n                    {type == 3 && \n                        <Menu.Item key=\"3\" icon={<FileOutlined />} >\n                            <Link to='/admin/managetreat'>\n                            待评分作品\n                            </Link>\n                        </Menu.Item>\n                    }\n                    {type ==3 && \n                        <Menu.Item key=\"4\" icon={<FileDoneOutlined />}>\n                            <Link to='/admin/managehas'>\n                            已评分作品\n                            </Link>\n                        </Menu.Item>\n                    }\n                    <Menu.Item key=\"5\" icon={<LogoutOutlined />}>\n                        <Link to='/admin/review/login'> \n                        退出登录\n                        </Link>\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n            <Layout style={{minHeight: '100vh'}}>\n                <Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }} />\n                <Content style={{ margin: '24px 16px 0' }}>\n                    <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n                        {children}\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>洪合杯 ©2021 Created by front </Footer>\n            </Layout>\n        </Layout>)\n}\n\nexport default Index","import React  from \"react\";\n\n\nconst Index = () => {\n    return (\n        <div>\n            已评审\n        </div>\n    )\n}\n\nexport default Index","import React  from \"react\";\n\n\nconst Index = () => {\n    return (\n        <div>\n            未评审\n        </div>\n    )\n}\n\nexport default Index","import React  from \"react\";\n\n\nconst Index = () => {\n    return (\n        <div>\n            已评分\n        </div>\n    )\n}\n\nexport default Index","import React  from \"react\";\n\n\nconst Index = () => {\n    return (\n        <div>\n            待评分\n        </div>\n    )\n}\n\nexport default Index","import React, { Suspense } from 'react' \nimport { Route, useScrollTop, useRouteMatch } from '@friday/router'\n\nimport BaseLayout from './BaseLayout'\nimport ReviewHas from '../review/has'\nimport ReviewTreat from '../review/treat'\n\nimport ManageHas from '../manage/has'\nimport ManageTreat from '../manage/treat'\n\nconst PrimaryRoutes = () => {\n    const match = useRouteMatch()\n    useScrollTop()\n    console.log(`${match.path}/reviewhas`)\n    return (\n        <BaseLayout>\n            <Route path={`${match.path}/reviewhas`} exact component={ReviewHas} />\n            <Route path={`${match.path}/reviewtreat`} component={ReviewTreat} />\n            <Route path={`${match.path}/managehas`} component={ManageHas} />\n            <Route path={`${match.path}/managetreat`} component={ManageTreat} />\n        </BaseLayout>\n    )\n}\n\nexport default PrimaryRoutes","import React from 'react'\nimport { Switch, Route, useRouteMatch } from '@friday/router'\nimport Login from './auth/Login'\nimport PrivateRoute from './PrivateRoute'\nimport PrimaryRouter from './layouts/PrimaryRouter'\n\nconst ModuleRouter = () => {\n\tconst match = useRouteMatch()\n    return (\n\t\t<Switch>\n            <Route path={`${match.path}/:type/login`} exact component={Login} />\n            <PrivateRoute path={`${match.path}`} component={PrimaryRouter} />\n        </Switch>\n    )\n}\n\nexport default ModuleRouter","import React from 'react'\nimport { Form, Input, Button, Row, Col, message} from 'antd'\nimport { Link } from '@friday/router'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\nimport { useHistory } from '@friday/router'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport { dispatchAsync } from '@friday/async'\nimport TokenService from 'src/services/tokenService'\nimport './index.less'\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n\n    const apis = useApiSelector()\n\n    const {dispatchUserInfo} = useUserInfo()\n    \n    const history = useHistory()\n\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const respone = await dispatchAsync(apis.user.login(values)) as any\n        if (respone.error) return \n        TokenService.set(respone?.token.token)\n        dispatchUserInfo(respone.dataJson)\n        const { complete } = respone.dataJson\n        if (complete) {\n            message.success('登录成功')\n            history.push('/user')\n        } else {\n            message.warning('请完善个人信息')\n            history.push('/user/info/edit')\n        }\n    } \n\n    return (\n        <div className='m-login'>\n            <div className='m-login-header'>\n                洪合杯\n            </div>\n            <div className='m-login-content'>\n                <div className='m-login-main'>\n                    <h3 className='m-title'>登录</h3>\n                    <Form form={form}\n                        onFinish={onFinish}\n                        layout=\"vertical\"\n                    >\n                        <FormItem \n                            label='手机号' \n                            name='username'\n                            rules={[{\n                                required: true, \n                                message: '请输入正确的手机号', \n                                pattern: /^1[3456789]\\d{9}$/\n                            }]}\n                        >\n                            <Input  placeholder=\"请输入手机号\" size='middle' />\n                        </FormItem>\n                        <FormItem \n                            label='密码' \n                            name='password' \n                            rules={[{required: true, message: '请输入密码'}]}\n                        >\n                            <Input \n                                type=\"password\" \n                                placeholder=\"请输入密码\" \n                                size='middle' \n                            />\n                        </FormItem>\n                        <Form.Item>\n                            <Button\n                                className=\"login-form-button\"\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                size='middle'\n                                block\n                            >\n                                登录\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                    <div className='tc  mg-b-20' style={{fontSize: '12px'}}>\n                        <Link to='/user/reset' className='grey'>\n                            忘记密码\n                        </Link>\n                    </div>\n                    <div className='tc grey mg-b-10' style={{fontSize: '12px'}}>还没有账号?</div>\n                    <div>\n                        <Button block >\n                            <Link to='/user/register' >\n                                注册\n                            </Link>\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Index","import React, { useState } from 'react'\nimport { Form, Input, Button, Row, Col, Radio, message, Cascader } from 'antd'\nimport { Link, useHistory  } from '@friday/router'\nimport { dispatchAsync } from '@friday/async'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport options from 'src/common/city.json'\nimport { omit } from 'lodash'\nimport './index.less'\n\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n    const apis = useApiSelector()\n\n    const [time, setTime] = useState(60)\n    const [isShowCode, setIsShowCode] = useState<boolean>(false)\n    const history = useHistory()\n\n    const sendCode = async () => {\n        const fileds = await form.validateFields(['phone'])\n        if (isShowCode) {\n            return \n        }\n        setIsShowCode(true)\n        const active = setInterval(() => {\n            setTime((preSecond) => {\n              if (preSecond <= 1) {\n                setIsShowCode(false)\n                clearInterval(active)\n                // 重置秒数\n                return 60\n              }\n              return preSecond - 1\n            })\n        }, 1000)\n        const { phone } = fileds\n        const { error, data } = await dispatchAsync(apis.user.sendCode({\n            phone,\n            type: 0\n        }))\n        if (error) return message.error(error)\n        message.success('发送成功')\n    }\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const [province, city] = values.area\n        const respone = await dispatchAsync(apis.user.register({\n            ...omit(values, 'area'),\n            province,\n            city\n        })) as any\n        if (respone.error) return \n        message.success('注册成功')\n        history.push('/user')\n    } \n\n    return (\n        <div className='m-login'>\n            <div className='m-login-header'>\n                洪合杯\n            </div>\n            <div className='m-login-content'>\n                <div className='m-login-main'>\n                    <h3 className='m-title'>注册</h3>\n                    <Form form={form} \n                        labelCol={{ span: 5 }}\n                        onFinish={onFinish}\n                        wrapperCol={{span: 19}}\n                        layout=\"vertical\"\n                    >\n                        <FormItem \n                            name='phone' \n                            label='手机号' \n                            rules={[{required: true, message: '请输入正确的手机号！', pattern: /^1[3456789]\\d{9}$/ }]} \n                        >\n                            <Input placeholder=\"请输入手机号！\" size='middle' />  \n                        </FormItem>\n                        <FormItem \n                            name='code' \n                            label='验证码'\n                            rules={[{required: true, message: '请输入验证码'}]}\n                        >\n                            <Input  \n                                placeholder=\"请输入验证码！\" \n                                size='middle' \n                                maxLength={6}\n                                suffix={<a onClick={() => sendCode()}>\n                                  {isShowCode ? `${time}秒后重新发送` : '发送验证码'}\n                                </a>}\n                            />\n                        </FormItem>\n                        <FormItem \n                            name='password' \n                            label='密码' \n                            rules={[{required: true, message: '请输入密码'}]}\n                        >\n                            <Input  type=\"password\" placeholder=\"请输入密码（6-20个字符）\" size='middle' />\n                        </FormItem>\n                        <FormItem \n                            name='pw2' \n                            label='确认密码' \n                            rules={[\n                                ({getFieldValue})=>({\n                                    validator(rule,value){\n                                        if(!value || getFieldValue('password') === value){\n                                            return Promise.resolve()\n                                        }\n                                        return Promise.reject(\"两次密码输入不一致\")\n                                    }\n                                })\n                            ]}\n                        >\n                            <Input type=\"password\" placeholder=\"请再次输入密码\" size='middle' />\n                        </FormItem>\n                        <Form.Item  wrapperCol={{span: 24}}>\n                            <Button\n                                className=\"login-form-button\"\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                size='middle'\n                                block\n                            >\n                                注册\n                            </Button>\n                        </Form.Item>\n                        <div className='tc  mg-b-20' style={{fontSize: '12px'}}>\n                            <Link to='/user/login' className='grey'>\n                                已有账号，直接登录\n                            </Link>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Index","import React, {useState} from 'react'\nimport { Form, Input, Button, Row, Col, message} from 'antd'\nimport { Link, useHistory  } from '@friday/router'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync } from '@friday/async'\nimport './index.less'\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n    const apis = useApiSelector()\n\n    const [time, setTime] = useState(60)\n    const [isShowCode, setIsShowCode] = useState<boolean>(false)\n    const history = useHistory()\n\n    const sendCode = async () => {\n        const fileds = await form.validateFields(['phone'])\n        if (isShowCode) {\n            return \n        }\n        setIsShowCode(true)\n        const active = setInterval(() => {\n            setTime((preSecond) => {\n              if (preSecond <= 1) {\n                setIsShowCode(false)\n                clearInterval(active)\n                // 重置秒数\n                return 60\n              }\n              return preSecond - 1\n            })\n        }, 1000)\n        const { phone } = fileds\n        const { error, data } = await dispatchAsync(apis.user.sendCode({\n            phone,\n            type: 1\n        }))\n        if (error) return message.error(error)\n        message.success('发送成功')\n    }\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const respone = await dispatchAsync(apis.user.reset(values)) as any\n        if (respone.error) return \n        message.success('重置成功')\n        history.push('/user/login')\n    } \n\n    return (\n        <div className='m-login'>\n            <div className='m-login-header'>\n                洪合杯\n            </div>\n            <div className='m-login-content'>\n                <div className='m-login-main'>\n                    <h3 className='m-title'>重设密码</h3>\n                    <Form \n                        form={form}\n                        labelCol={{ span: 5 }}\n                        onFinish={onFinish}\n                        layout=\"vertical\"\n                        \n                    >\n                        <FormItem \n                            name='phone' \n                            label='手机号'\n                            rules={[{\n                                required: true, \n                                message: '请输入正确的手机号', \n                                pattern: /^1[3456789]\\d{9}$/\n                            }]}\n                        >\n                            <Input  placeholder=\"请输入手机号\" size='middle' />\n                        </FormItem>\n                        <FormItem \n                            name='code' \n                            label='验证码'\n                            rules={[{required: true, message: '请输入验证码'}]}\n                        >\n                            <Input  \n                                placeholder=\"请输入验证码！\" \n                                size='middle' \n                                maxLength={6}\n                                suffix={<a onClick={() => sendCode()}>\n                                  {isShowCode ? `${time}秒后重新发送` : '发送验证码'}\n                                </a>}\n                            />\n                        </FormItem>\n                        <FormItem \n                            name='newPwd' \n                            label='新密码'\n                            rules={[{required: true, message: '请输入新密码'}]}\n                        >\n                            <Input type=\"password\" placeholder=\"请输入新密码\" size='middle' />\n                        </FormItem>\n                        <Form.Item>\n                            <Row gutter={16}>\n                                <Col span={12}>\n                                    <Button block>\n                                        <Link to='/user/login'>取消</Link>\n                                    </Button>\n                                </Col>\n                                <Col span={12}>\n                                    <Button\n                                        className=\"login-form-button\"\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        size='middle'\n                                        block\n                                    >\n                                        确定\n                                    </Button>\n                                </Col>\n                            </Row>\n                            \n                        </Form.Item>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Index","import React, { useCallback } from 'react'\nimport { Redirect, Route, RouteComponentProps } from '@friday/router'\nimport TokenServeice from 'src/services/tokenService'\nimport useUserInfo from 'src/hooks/useUserInfo'\nimport LodingCom from 'src/pages/layouts/LodingCom'\nimport { isEmpty } from 'lodash'\n\nconst PrimaryLayout: React.FC<any> = ({ children, ...rest}) => {\n\n    const { userInfo, fetchUserInfo } = useUserInfo()\n    const renderFn = useCallback((renderProps: RouteComponentProps<any>) => {\n        \n        const { component: Component } = rest\n        if (!TokenServeice.isAuthenticated()) {\n            return (\n                <Redirect\n                    to={`/user/login?path=${location.pathname}`}\n                />\n            )\n        }\n        if (!isEmpty(userInfo)) {\n           \n            if (!Component) {\n                return null\n            }\n            return <Component {...renderProps} />\n        }\n        \n        fetchUserInfo()\n        return (<LodingCom />)\n        // return <Component {...renderProps} />\n    }, [ userInfo ])\n    \n    return (\n        <Route {...rest} component={renderFn} />\n    )\n}\n\nexport default PrimaryLayout","import React from 'react'\nimport { Layout, Menu } from 'antd'\nimport { UploadOutlined, UserOutlined, VideoCameraOutlined, LogoutOutlined, EyeInvisibleOutlined } from '@ant-design/icons'\nimport { Link } from '@friday/router'\nimport { useUserInfo } from 'src/hooks'\n\nconst { Header, Content, Footer, Sider } = Layout\n\nimport './index.less'\n\n\nconst Index = ({children}) => {\n\n    const { userInfo } = useUserInfo()\n\n    return (\n        <Layout className='components-layout-demo-responsive'>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    console.log(collapsed, type);\n                }}\n            >\n                <div className=\"m-logo\" />\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['2']}>\n                    <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n                        <Link to='/user/product'> \n                            作品列表\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"3\" icon={<UserOutlined />}>\n                        <Link to='/user/info'> \n                            个人信息\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"4\" icon={<EyeInvisibleOutlined />}>\n                        <Link to='/user/password'> \n                        修改密码\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"5\" icon={<LogoutOutlined />}>\n                        <Link to='/user/login'> \n                        退出登录\n                        </Link>\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n            <Layout style={{minHeight: '100vh' }}>\n                <Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }} />\n                <Content style={{ margin: '24px 16px 0', }}>\n                    <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 540 }}>\n                        {children}\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>洪合杯 ©2021 Created by front </Footer>\n            </Layout>\n        </Layout>)\n}\n\nexport default Index","import React from 'react'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport { Button, Descriptions } from 'antd'\nimport { useRequest } from '@friday/async'\nimport { Link } from '@friday/router'\n\nconst Index = () => {\n\n    const apis = useApiSelector()\n\n    const { dataJson } = useRequest(apis.user.fetchUserInfo({}))\n\n    console.log(dataJson, 'dataJson')\n\n    const { name, email, address, contact} = dataJson\n\n\n    return (\n        <div>\n            <h4 className='m-head'>个人信息</h4>\n            <Descriptions title={name} extra={<Button type='primary'><Link to='/user/info/edit'>修改个人信息</Link></Button>} column={1}>\n                <Descriptions.Item label='邮箱地址'>{email}</Descriptions.Item>\n                <Descriptions.Item label='通讯地址'>{address}</Descriptions.Item>\n                <Descriptions.Item label='联系方式'>{contact}</Descriptions.Item>\n            </Descriptions>\n        </div>\n    )\n}\n\nexport default Index","import React from \"react\";\nimport { Divider, Space } from 'antd'\nimport { Link } from '@friday/router'\n\n\nconst useColumns = () => {\n    return React.useMemo(() => {\n        const columns = [{\n            title: '作品名称',\n            dataIndex: 'productName'\n        }, {\n            title: '缩略图',\n            dataIndex: ''\n        }, {\n            title: '参赛类别',\n            dataIndex: 'productType'\n        }, {\n            title: '参赛方向',\n            dataIndex: 'entryDirection'\n        }, {\n            title: '作品状态',\n            dataIndex: 'opr',\n            render: () => '已提交'\n        }, {\n            title: '操作',\n            dataIndex: 'opr',\n            render: () => {\n                return (\n                    <Space split={<Divider />}>  \n                        <span className='operation'>\n                            <Link to='/user/product/edit/1'>\n                                编辑 \n                            </Link >\n                        </span>\n                        <span className='operation'>删除 </span>\n                    </Space>\n                )\n            }\n        }]\n    \n        return columns\n    \n    }, [])\n} \n\nexport default useColumns","import React  from \"react\";\nimport { Table, Button } from 'antd'\nimport useColumns from './useColumns'\nimport { Link } from '@friday/router'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync, useRequest } from '@friday/async'\n\n\nconst Index = () => {\n\n    const apis = useApiSelector()\n\n    const columns = useColumns()\n\n    const {dataJson, isValidating} = useRequest(apis.user.productList({}))\n\n\n    return (\n        <div>\n            \n            <div className='mg-b-10'>\n                <Button type='primary'><Link to='/user/product/add' >添加作品</Link></Button>\n            </div>\n\n            <Table \n                columns={columns}\n                dataSource={[{...dataJson, id: 1}]}\n                loading={isValidating}\n                rowKey='id'\n            />\n        </div>\n    )\n}\n\nexport default Index","import React  from \"react\";\nimport { Form, Input, Row, Col, Radio, Button, DatePicker, Cascader, message} from 'antd'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { useHistory, useParams } from '@friday/router'\nimport { isEmpty } from 'lodash'\n\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n    const apis = useApiSelector()\n\n    const [ form ] = Form.useForm()\n\n    const { id } = useParams() as any\n\n    const {dataJson} = useRequest(id ? apis.user.productList({}): null)\n\n    React.useEffect(() => {\n        if (!isEmpty(dataJson)) {\n            form.setFieldsValue(dataJson)\n        }\n    }, [dataJson])\n\n    const history = useHistory()\n\n    \n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n     \n        const respone = await dispatchAsync(apis.user.addProduct(values)) as any\n        if (respone.error) return \n        message.success('添加成功')\n        history.goBack()\n    }\n\n    return (\n        <div>\n            <h4 className='m-head'>添加作品</h4>\n            <Form \n                form={form}\n                labelCol={{span: 8}}\n                onFinish={onFinish}\n            >\n                <FormItem\n                    label={'参赛类别'}\n                    rules={[{required: true, message: '请选择参赛类别'}]}\n                    name='productType'\n                >\n                    <Radio.Group>\n                        <Radio value={'个人组'}>个人组</Radio>\n                        <Radio value={'团体组'}>团体组</Radio>\n                        <Radio value={'企业组'}>企业组</Radio>\n                    </Radio.Group>\n                </FormItem>\n\n                <FormItem\n                    label={'参赛方向'}\n                    rules={[{required: true, message: '请选择参赛方向'}]}\n                    name='entryDirection'\n                >\n                    <Radio.Group>\n                        <Radio value={'系列服装类'}>系列服装类</Radio>\n                        <Radio value={'经典套装类'}>经典套装类</Radio>\n                        <Radio value={'毛衫文化品牌类'}>毛衫文化品牌类</Radio>\n                    </Radio.Group>\n                </FormItem>\n\n             \n                <FormItem\n                    label={'作品名称(中文)'}\n                    rules={[{required: true, message: '请输入作品名称(中文)'}]}\n                    name='productName'\n                >\n                    <Input placeholder='请输入作品名称(中文)' />\n                </FormItem>\n                <FormItem\n                    label={'作品名称(英文)'}\n                    rules={[{required: true, message: '请输入作品名称(英文)'}]}\n                    name='productNameEn'\n                >\n                    <Input placeholder='请输入作品名称(英文)' />\n                </FormItem>\n                <FormItem\n                    label={'推荐人'}\n                    rules={[{required: true, message: '请输入推荐人'}]}\n                    name='recommendName'\n                >\n                    <Input placeholder='请输入推荐人' />\n                </FormItem>\n\n                <FormItem\n                    label={'作品图片'}\n                    rules={[{required: true, message: '请上传作品图片'}]}\n                    name='productPics'\n                >\n                    <Input placeholder='请上传作品图片' />\n                </FormItem>\n                <FormItem\n                    label={'作品视频'}\n                    rules={[{required: true, message: '请上传作品视频'}]}\n                    name='productVideos'\n                >\n                    <Input placeholder='请上传作品视频' />\n                </FormItem>\n                <FormItem\n                    label={'设计主题及作品说明(中文)'}\n                    rules={[{required: true, message: '请输入设计主题及作品说明(中文)'}]}\n                    name='productDesc'\n                >\n                    <Input placeholder='请输入设计主题及作品说明(中文)' />\n                </FormItem>\n                <FormItem\n                    label={'设计主题及作品说明(英文)'}\n                    rules={[{required: true, message: '请输入设计主题及作品说明(英文)'}]}\n                    name='productDescEn'\n                >\n                    <Input placeholder='请输入设计主题及作品说明(英文)' />\n                </FormItem>\n                <div className='tc' style={{width: '328px', margin: '0 auto'}}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size='middle'\n                        block\n                    >\n                        保存\n                    </Button>\n                </div>\n            </Form>\n\n        </div>\n    )\n}\n\nexport default Index","import React from 'react'\nimport { Form, Input, Button, message } from 'antd'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync } from '@friday/async'\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n    const [form] = Form.useForm()\n    const apis = useApiSelector()\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const respone = await dispatchAsync(apis.user.updatePassword(values)) as any\n        if (respone.error) return \n        message.success('修改成功')\n    } \n    return (\n        <div>\n            <h4 className='m-head'>修改密码</h4>\n            <Form\n                form={form}\n                labelCol={{span: 3}}\n                onFinish={onFinish}\n            >\n                <FormItem name='phone' label='手机号'>\n                    <Input  placeholder=\"请输入您的手机号！\" size='middle' />\n                </FormItem>\n                <FormItem name='oldPwd' label='旧密码'>\n                    <Input  placeholder=\"请输入您的旧密码！\" type='password' size='middle' />\n                </FormItem>\n                <FormItem name='newPwd' label='新密码'>\n                    <Input  placeholder=\"请输入您的新密码！\" type='password' size='middle' />\n                </FormItem>\n                <Form.Item\n                    wrapperCol={{push: 8}}\n                >\n                    <Button\n                        className=\"login-form-button\"\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size='middle'\n                        style={{width : '200px'}}\n                    >\n                        确定\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    )\n}\n\nexport default Index","import React from 'react'\n\n\nconst Index = (props) => {\n    const {name, en , required} = props\n    return (\n        <div style={{position: 'relative'}}> \n            <span className='red' style={{fontFamily: 'SimSun, sans-serif'}}>{required ? '*' : ''}</span> {name} \n            <div style={{ fontSize: '10px', color: '#999'}}>{en}</div>\n        </div>\n    )\n}\n\nexport default Index","import React, { useState } from 'react'\nimport { Upload } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { useConfiguration } from '@friday/core'\nimport tokenInstance from 'src/services/tokenService'\nimport { get } from 'lodash'\n\nconst Qrcode = (props) => {\n\n    const { fileList = [], onChange } = props\n\n    const [uploadFileList, setUploadFilelist] = useState<any[]>([])\n\n    const { publicUrl } = useConfiguration()\n\n    const triggerChange = changedValue => {\n        if (onChange) {\n            onChange({ uploadFileList, ...fileList, ...changedValue })\n        }\n    }\n\n    const onUploadChange = ({ fileList }) => {\n        setUploadFilelist(fileList)\n        triggerChange({ fileList })\n    }\n\n    const fileLists = fileList || uploadFileList\n\n    const uploadprops = {\n        name: 'picFile',\n        action: publicUrl.OPEN_API_URL + '/file/upload',\n        accept: 'image/jpeg,image/png,image/jpg',\n        headers: {\n            token: tokenInstance.get() as string\n        },\n        onChange: onUploadChange,\n        fileList: fileLists,\n    }\n\n\n    return (\n        <div>\n            <div className='clearfix'>\n                <Upload\n                    listType=\"picture-card\"\n                    className=\"m-avatar-uploader\"\n                    {...uploadprops}\n                >\n                    {fileList.length > 0 ? null :\n                        <div>\n                            <PlusOutlined />\n                            <div style={{ marginTop: 8 }}>上传图片</div>\n                        </div>\n                    }\n                </Upload>\n            </div>\n            <div style={{ fontSize: '10px', color: '#999', marginTop: 10 }} >上传格式jpg、png、jpeg，大小不超过2M</div>\n        </div>\n    )\n}\n\nexport default Qrcode","import React from 'react'\nimport { Form, Input, Row, Col, Radio, Button, DatePicker, Cascader, message} from 'antd'\nimport FormLabel from './FormLabel'\nimport options from 'src/common/city.json'\nimport UploadImg from './UploadImg'\nimport { useHistory } from '@friday/router'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport { useConfiguration } from '@friday/core'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { omit, isEmpty, get, pick } from 'lodash'\nimport moment from 'moment'\nimport './index.less'\n\nconst FormItem = Form.Item\n\n\nconst normFile = (e: any) => {\n    if (Array.isArray(e)) {\n        return e;\n    }\n    return e && e.fileList\n}\n\nconst getUpload = (uploadResponse) => {\n    // 没图片\n    if (isEmpty(uploadResponse)) return  ''\n\n    return get(uploadResponse, '[0].response.filePath') || ''\n}   \n\nconst transformUpload = (path, prefix) => {\n\n    if (!path) return ''\n\n    return [{\n        response: {\n            data: {\n                path: path\n            },\n            filePath: path\n        },\n        status: \"done\",\n        thumbUrl: prefix + path\n    }]\n}\n\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n\n    const apis = useApiSelector()\n    \n    const history = useHistory()\n\n    const { publicUrl } = useConfiguration()\n\n    const { dataJson } = useRequest(apis.user.fetchUserInfo({}))\n\n    React.useEffect(() => {\n        if (!isEmpty(dataJson)) {\n            \n            const {idcardBack, idcardFront, photo, province, city, county} = dataJson\n            const area = [province, city, county]\n            const payload = {\n                ...omit(dataJson, ['birthday','idcardBack', 'idcardFront', 'photo']),    \n                area,      \n                idcardBack: transformUpload(idcardBack, publicUrl.OPEN_IMG_URL),\n                idcardFront: transformUpload(idcardFront, publicUrl.OPEN_IMG_URL),\n                photo: transformUpload(photo, publicUrl.OPEN_IMG_URL),\n            }\n            console.log(payload, 'payload')\n            form.setFieldsValue(payload)\n        }\n    }, [dataJson]) \n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const { birthday, area, idcardBack, idcardFront, photo } = values\n        const [province, city, county] = area\n        const respone = await dispatchAsync(apis.user.completeInfo({\n            ...omit(values, ['birthday', 'area', 'idcardBack', 'idcardFront', 'photo']),\n            birthday: moment(birthday).format('YYYY/MM/DD'),\n            province,\n            city,\n            county,\n            idcardBack: getUpload(idcardBack),\n            idcardFront: getUpload(idcardFront),\n            photo: getUpload(photo)\n        })) as any\n        if (respone.error) return \n        message.success('更新成功')\n        history.push('/user/info')\n        \n    } \n\n    return (\n        <div className='m-info'>\n            <h4 className='m-head'>完善个人信息</h4>\n            <Form \n                form={form}\n                labelCol={{span: 7}}\n                onFinish={onFinish}\n            >\n                <Row gutter={16}>\n                    <Col span={12} xs={24}>\n                        <FormItem\n                            label={<FormLabel name='用户名' en='User name' required />}\n                            rules={[{required: true, message: '请输入用户名'}]}\n                            name='username'\n                        >\n                            <Input placeholder='请输入用户名' />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='姓名' en='Name' required />}\n                            rules={[{\n                                required: true, \n                                message: '请输入姓名', \n                            }]}\n                            name='name'\n                        >\n                            <Input placeholder='请输入姓名'/>\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='性别' en='Gender' required />}\n                            rules={[{\n                                required: true, \n                                message: '请选择性别', \n                            }]}\n                            name='sex'\n                        >\n                            <Radio.Group>\n                                <Radio value={0}>男</Radio>\n                                <Radio value={1}>女</Radio>\n                            </Radio.Group>\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='照片' en='Photo' required />}\n                            rules={[{\n                                required: true, \n                                message: '请上传照片', \n                            }]}\n                            className='preview'\n                            valuePropName=\"fileList\"\n                            getValueFromEvent={normFile}\n                            name='photo'\n                        >\n                            <UploadImg />\n                        </FormItem>\n                    </Col>\n                    <Col span={12} xs={24}>\n                        <FormItem\n                            label={<FormLabel name='出生年/月/日' en='\bBirth date' required />}\n                            rules={[{\n                                required: true, \n                                message: '请选择出生年月日', \n                            }]}\n                            name='birthday'\n                        >\n                            <DatePicker style={{width: '100%'}} />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='身份证号码' en='\bID Card No.' required />}\n                            rules={[{\n                                required: true, \n                                message: '请输入身份证号码', \n                            }]}\n                            name='idcard'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='身份证正面照' en='\bID Card Copy' required />}\n                            name='idcardFront'\n                            className='preview'\n                            valuePropName=\"fileList\"\n                            getValueFromEvent={normFile}\n                        >\n                            <UploadImg />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='身份证反面照' en='\bID Card Copy' required />}\n                            name='idcardBack'\n                            className='preview'\n                            valuePropName=\"fileList\"\n                            getValueFromEvent={normFile}\n                        >\n                            <UploadImg />\n                        </FormItem>\n                    </Col>\n                </Row>\n\n                <Row gutter={16} className='mg-t-20'>\n                    <Col span={12} xs={24}>\n                        <FormItem\n                            label={<FormLabel name='职业' en='\bOccupation' required />}\n                            name='profession'\n                            rules={[{\n                                required: true, \n                                message: '请输入职业', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='籍贯' en='Native place' required />}\n                            name='area'\n                            rules={[{\n                                required: true, \n                                message: '请选择籍贯', \n                            }]}\n                        >\n                            <Cascader  options={options} />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='院校名称' en='Educational background' required />}\n                            name='school'\n                            rules={[{\n                                required: true, \n                                message: '请输入院校名称', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='专业' en='specialty' required />}\n                            name='professional'\n                            rules={[{\n                                required: true, \n                                message: '请输入专业', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='学历' en='Education background'  />}\n                            name='education'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='工作单位' en='Company'  required />}\n                            name='employer'\n                            rules={[{\n                                required: true, \n                                message: '请输入工作单位', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='QQ号' en='QQ'  />}\n                            name='qq'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='微信号' en='WeChat'  required/>}\n                            name='wechat'\n                            rules={[{\n                                required: true, \n                                message: '请输入微信号', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='邮箱' en='E-mail' required />}\n                            name='email'\n                            rules={[{\n                                required: true, \n                                message: '请输入邮箱', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                    </Col>\n                    <Col span={12} xs={24}>\n                        <FormItem\n                            label={<FormLabel name='职务' en='Postion'  />}\n                            name='position'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='工作经历' en='Work experience'  />}\n                            name='workExperience'\n                        >\n                            <Input.TextArea />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='获奖经历' en='Award experience'  />}\n                            name='awardExperience'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='通信地址' en='Address' required />}\n                            name='Address'\n                            rules={[{\n                                required: true, \n                                message: '请输入通信地址', \n                            }]}\n                        >\n                            <Input.TextArea />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='联系方式' en='Contact' required />}\n                            name='contact'\n                            rules={[{\n                                required: true, \n                                message: '请输入联系方式', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                    </Col>\n                </Row>\n                <div className='tc' style={{width: '328px', margin: '0 auto'}}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size='middle'\n                        block\n                    >\n                        保存\n                    </Button>\n                </div>\n            </Form>\n            \n        </div>\n    )\n}\n\nexport default Index\n","import React, { Suspense } from 'react' \nimport { Route, useScrollTop, useRouteMatch } from '@friday/router'\n\nimport BaseLayout from './BaseLayout'\nimport Info from '../info'\nimport ProductList from '../product'\nimport ProductAdd from '../product/AddProduct'\nimport PassWord from '../Password'\nimport EditInfo from '../info/EditInfo'\n\n\nconst PrimaryRoutes = () => {\n    const match = useRouteMatch()\n    useScrollTop()\n    return (\n        <BaseLayout>\n            <Route path={`${match.path}/password`} component={PassWord} />\n            <Route path={`${match.path}/info`} exact component={Info} />\n            <Route path={`${match.path}/info/edit`} exact component={EditInfo} />\n            <Route path={`${match.path}/product`} exact component={ProductList} />\n            <Route path={`${match.path}/product/add`} component={ProductAdd} />\n            <Route path={`${match.path}/product/edit/:id`} component={ProductAdd} />\n        </BaseLayout>\n    )\n}\n\nexport default PrimaryRoutes","import React from 'react'\nimport { Switch, Route, Redirect, useRouteMatch } from '@friday/router'\nimport Login from 'src/pages/user/auth/Login'\nimport Register from 'src/pages/user/auth/Register'\nimport Reset from 'src/pages/user/auth/Reset'\nimport PrivateRoute from './PrivateRoute'\nimport PrimaryRouter from './layouts/PrimaryRouter'\n\nconst ModuleRouter = () => {\n\tconst match = useRouteMatch()\n    return (\n\t\t<Switch>\n            <Route path={`${match.path}/login`} exact component={Login} />\n            <Route path={`${match.path}/register`} exact component={Register} />\n            <Route path={`${match.path}/Reset`} exact component={Reset} />\n            <PrivateRoute path={`${match.path}`} component={PrimaryRouter} />\n        </Switch>\n    )\n}\n\nexport default ModuleRouter","\nimport React from 'react'\nimport { Switch, Route, Router } from '@friday/router'\nimport Home from './pages/home'\nimport NotFound from 'src/pages/exception/NotFound'\nimport AdminRouter from 'src/pages/admin/ModuleRouter'\nimport userRouter from 'src/pages/user/ModuleRouter'\n\nimport 'src/styles/index.less'\n\nconst App = ({ history }) => {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/404\"  component={NotFound} />  \n        <Route path=\"/admin\" component={AdminRouter} />  \n        <Route path=\"/user\" component={userRouter} />  \n        <Route path='/' exact component={Home} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","\n\nexport const protocol = document.location.protocol\nexport const upstreams = {\n\tdevelopment: {\n\t\tOPEN_API_URL: '101.42.95.249:8088',\n\t},\n\tproduction: {\n\t\tOPEN_API_URL: '101.42.95.249:8088',\n\t}\n\n}\n\nexport enum BaseUrl {\n\tOPEN_API_URL = 'api',\n}\n","\n\nconst combineUrl = (upstream: string, baseName: string, ) => {\n\n\tif (!upstream) {\n\t\tthrow new Error(`ConfigError upstream is empty`)\n\t}\n\n\treturn `${window.location.protocol}//${upstream}/${baseName}`\n}\n\n\nexport default combineUrl","\nimport configuration_dev from './configuration.dev'\nimport configuration_pro from './configuration.pro'\n\n\nconst configurations = [\n\tconfiguration_dev,\n\tconfiguration_pro\n]\n\nexport default configurations","import { IConfiguration } from '@friday/core'\n\nimport { upstreams, BaseUrl } from './constants'\n\nimport combineUrl from './combineUrl'\n\nconst configuration: IConfiguration = {\n\twhiteHosts: [\n\t\t'localhost:3000',\n\t],\n\tpublicUrl: {\n\t\tOPEN_API_URL: combineUrl(upstreams.development.OPEN_API_URL, BaseUrl.OPEN_API_URL),\n\t\tOPEN_IMG_URL: combineUrl(upstreams.development.OPEN_API_URL, '')\n\t}\n}\n\nexport default configuration\n","import { IConfiguration } from '@friday/core'\nimport { upstreams, BaseUrl, protocol } from './constants'\nimport combineUrl from './combineUrl'\n\nconst configuration: IConfiguration = {\n\twhiteHosts: [\n\t\t'localhost:3009',\n\t\t'101.42.95.249:9005'\n\t],\n\tpublicUrl: {\n\t\tOPEN_API_URL: combineUrl(upstreams.production.OPEN_API_URL, BaseUrl.OPEN_API_URL),\n\t\tOPEN_IMG_URL: combineUrl(upstreams.production.OPEN_API_URL, '')\n\t}\n}\n\nexport default configuration\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport Friday from '@friday/core'\n\n// 如果是微服务中的slave 需要添加该文件在entry 入口上方\n// import '@friday/micro/lib/public-path'\n\nimport configurations from 'src/configurations'\n\n\nimport * as serviceWorker from 'src/serviceWorker'\n\nconst app = new Friday({\n    onInjectConfigBefore() {\n        console.log('onInjectConfigBefore hook')\n    },\n    onInjectConfigAfter() {\n        console.log('onInjectConfigAfter hook')\n    },\n    onInjectRouterAfter() {\n        console.log('onInjectConfigAfter hook')\n    },\n    onStarted(configuration) {\n        console.log('onInjectConfigAfter hook')\n    }\n})\n\n// 注入配置\napp.injectConfigurations(configurations)\n\n// api 模块插件\napp.use(require('./middleware').default)\n\n// 注入路由\napp.injectRouters(require('./App').default)\n\n// 启动器\napp.start('#root')\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n","\nimport { getConfiguration } from '@friday/core'\nimport { httpAxios, request_middleware } from '@friday/async'\nimport TokenService from 'src/services/tokenService'\nimport { message } from 'antd'\nimport { debounce, get, includes } from 'lodash'\n\nconst { publicUrl, history } = getConfiguration()\n\nexport const axiosConifg = {\n\tbaseURL: publicUrl.OPEN_API_URL,\n\ttimeout: 20000,\n\theaders: {\n\t\t'Accept': 'application/json;charset=utf-8',\n\t\t'Content-Type': 'application/json;charset=utf-8',\n\t}\n}\n\nconst errorNotice = debounce((text, response?) => {\n\tmessage.error(text)\n\t// sentry 上报\n}, 500)\n\nconst AUTH_PATH = '/auth/login'\n\nexport const isApiTimeout = (error): boolean => {\n\treturn error.code === 'ECONNABORTED' && error.message.indexOf('timeout') !== -1\n}\n\nexport const isNetworkError = (error): boolean => {\n\treturn error.message === 'Network Error'\n}\n\nconst redirect = debounce(() => {\n\tconst nextUrl = `${AUTH_PATH}?path=${location.pathname}`\n\treturn history.replace(nextUrl)\n}, 500)\n\n\nexport const axiosInstance = httpAxios(axiosConifg, {\n\trequestSuccessHook(config) {\n\t\treturn { ...config, headers: { ...config.headers, token: TokenService.get() } }\n\t},\n\tresponseErrorHooks(error) {\n\t\tconst status = error.response.status\n\t\t// 超时、网络异常\n\t\tif (isApiTimeout(error)) {\n\t\t\t// eslint-disable-next-line\n\t\t\terrorNotice('接口请求超时')\n\t\t}\n\n\t\tif (isNetworkError(error)) {\n\t\t\terrorNotice('网络异常')\n\t\t}\n\n\t\tif (error.response && status === 401 && !includes(window.location.href, AUTH_PATH)) {\n\t\t\terrorNotice('登录超时')\n\t\t\tredirect()\n\t\t\treturn Promise.reject(error)\n\t\t}\n\n\t\t// 系统错误\n\t\tif (error.response && status >= 400) {\n\t\t\tconst { data } = error.response\n\t\t\t// blob to  json\n\t\t\tif (Object.prototype.toString.call(data) === \"[object Blob]\" && (data.type === 'application/json')) {\n\t\t\t\tlet reader = new FileReader() as any\n\t\t\t\treader.readAsText(data, 'utf-8');\n\t\t\t\treader.onload = () => {\n\t\t\t\t\tconst text = JSON.parse(reader.result)\n\t\t\t\t\tmessage.error(text.message)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst notice = get(error, 'response.data.msg') || '系统异常'\n\t\t\t\terrorNotice(notice, error.response)\n\t\t\t\tconsole.error(error.response, 'system error')\n\t\t\t}\n\t\t}\n\t\treturn Promise.reject(error)\n\t}\n})\n\nconst axios_middleware = request_middleware({axiosInstance})\n\nexport default axios_middleware\n","import React from 'react'\nimport zhCN from 'antd/lib/locale/zh_CN'\nimport 'moment/locale/zh-cn'\nimport { ConfigProvider } from 'antd'\n\n\nconst validateMessages = {\n  required: \"请填写，该字段是必填字段！\",\n  // ...\n};\n\nconst antd_middleware = ({ App, config }) => {\n\n\treturn {\n\t\tApp(props) {\n\t\t\treturn (\n\t\t\t\t<ConfigProvider form={{validateMessages}} locale = {zhCN}>\n\t\t\t\t\t<App { ...props } />\n\t\t\t\t</ConfigProvider>\n\t\t\t)\n\t\t},\n\t\tconfig\n\t}\n}\n\nexport default antd_middleware","\nimport axios_middleware from './axiosMiddleware'\nimport antd_middleware from './antdMiddleware'\nimport { global_middleware } from './globalMiddleware'\n\nconst middlewares = [\n\tantd_middleware,\n\taxios_middleware,\n\tglobal_middleware,\n]\n\nexport default middlewares\n","import Cookie from 'js-cookie'\n\nexport const TOKEN_NAME = 'Token'\n\nclass TokenService<T extends string > {\n\n    private readonly tokenName: string = TOKEN_NAME\n\n    public set(v: T): void {\n        if (typeof v !== 'string') {\n            return console.warn(`Token accept string key. but params is ${typeof v}`)\n        }\n        Cookie.set(this.tokenName, v)\n    }\n\n    public get(): string | undefined {\n        return Cookie.get(this.tokenName) \n    }\n\n    public clear(): void {\n        return Cookie.remove(this.tokenName)\n    } \n\n    public isAuthenticated(): boolean {\n        return !!this.get()\n    }\n}\n\nexport default new TokenService<string>()"],"sourceRoot":""}