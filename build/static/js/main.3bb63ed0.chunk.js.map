{"version":3,"sources":["../webpack/universalModuleDefinition","hooks/useUserInfo.ts","middleware/globalMiddleware.ts","apiStore/index.ts","pages/home/api.ts","pages/user/apis/index.ts","pages/admin/apis/index.ts","hooks/useApiSelector.ts","pages/admin/review/index.tsx","pages/admin/review/ModalVideo.tsx","pages/user/product/useColumns.tsx","pages/home/images/banner.png","pages/home/images/pic_01.jpeg","pages/home/images/pic_02.jpeg","pages/home/index.tsx","pages/exception/NotFound.tsx","pages/admin/auth/Login.tsx","pages/layouts/LodingCom.tsx","pages/admin/PrivateRoute.tsx","pages/admin/layouts/BaseLayout.tsx","pages/admin/review/has/useColumns.tsx","pages/admin/review/has/index.tsx","pages/admin/review/treat/useColumns.tsx","pages/admin/review/treat/index.tsx","pages/admin/manage/has/useColumns.tsx","services/downloadService.ts","pages/admin/manage/has/index.tsx","pages/admin/manage/treat/useColumns.tsx","pages/admin/manage/treat/index.tsx","pages/admin/manage/index.tsx","pages/admin/layouts/PrimaryRouter.tsx","pages/admin/ModuleRouter.tsx","pages/user/auth/Login.tsx","pages/user/auth/Register.tsx","pages/user/auth/Reset.tsx","pages/user/PrivateRoute.tsx","pages/user/layouts/BaseLayout.tsx","pages/user/info/index.tsx","pages/user/product/index.tsx","pages/user/product/UploadImg.tsx","pages/user/product/UploadVideo.tsx","pages/user/product/AddProduct.tsx","pages/user/Password.tsx","pages/user/info/FormLabel.tsx","pages/user/info/UploadImg.tsx","pages/user/info/EditInfo.tsx","pages/user/layouts/PrimaryRouter.tsx","pages/user/ModuleRouter.tsx","App.tsx","configurations/constants.ts","configurations/combineUrl.ts","configurations/index.ts","configurations/configuration.dev.ts","configurations/configuration.pro.ts","serviceWorker.ts","index.tsx","middleware/axiosMiddleware.ts","middleware/antdMiddleware.tsx","middleware/index.ts","services/tokenService.ts"],"names":["root","factory","exports","module","define","amd","this","useUserInfo","useGlobalContext","state","dispatch","apis","useApiSelector","dispatchUserInfo","value","type","fetchUserInfo","a","dispatchAsync","user","dataJson","error","userInfo","GlobalState_middleware","globalLoading","global_middleware","middleware","home","getTest","createGetApi","url","getPost","createPostApi","prefix_config","login","register","sendCode","reset","updatePassword","completeInfo","addProduct","productList","productInfo","deleteId","admin","manage_config","review_config","admin_config","manageLogin","reviewLogin","reviewList","reviewDetail","signupScoringInfo","saveOrUpdate","manageList","manageListDownload","responseType","manageInfo","FormItem","Item","Index","useForm","form","useParams","id","useConfiguration","publicUrl","useRequest","history","useHistory","React","useEffect","setFieldsValue","onFinish","validateFields","values","signupId","save","success","goBack","imgList","eval","videoList","title","ghost","className","onBack","hoverable","message","bordered","layout","label","span","PreviewGroup","map","item","index","width","key","src","OPEN_IMG_URL","style","color","labelCol","xs","md","wrapperCol","rules","required","pattern","name","placeholder","disabled","suffix","noStyle","shouldUpdate","getFieldsValue","sum","Object","filter","reduce","pre","cur","Number","fontSize","TextArea","rows","margin","gutter","size","onClick","block","htmlType","props","useState","isOpen","setOpen","Fragment","channel","autoplay","onClose","useColumns","revalidate","confirm","onOk","useMemo","columns","dataIndex","render","txt","imgUrl","img","content","fixed","text","record","split","to","Home","banner","href","pic_one","pic_two","Notfind","status","subTitle","extra","TokenService","clear","respone","set","token","push","LodingCom","children","spinning","height","backgroundColor","PrimaryLayout","rest","renderFn","useCallback","renderProps","Component","component","TokenServeice","isAuthenticated","location","pathname","Header","Content","Footer","Sider","useLocation","breakpoint","collapsedWidth","onBreakpoint","broken","console","log","onCollapse","collapsed","theme","mode","defaultSelectedKeys","indexOf","icon","FileOutlined","FileDoneOutlined","LogoutOutlined","minHeight","padding","minWidth","textAlign","submit","arr","filterObj","useImmer","scoring","productType","entryDirection","setState","dataArray","isValidating","list","allowClear","onChange","e","dart","Option","draft","dataSource","scroll","x","loading","rowKey","DownloadService","response","target","aTag","document","createElement","prototype","toString","call","warn","window","URL","createObjectURL","body","appendChild","download","click","revokeObjectURL","removeChild","responseBlob","donwloadfn","PrimaryRoutes","match","useRouteMatch","useScrollTop","path","BaseLayout","exact","ReviewHas","ReviewTreat","Review","ManageHas","ManageTreat","Manage","ModuleRouter","Login","PrivateRoute","PrimaryRouter","complete","warning","time","setTime","isShowCode","setIsShowCode","fileds","active","setInterval","preSecond","clearInterval","phone","data","maxLength","getFieldValue","validator","rule","Promise","reject","resolve","VideoCameraOutlined","UserOutlined","EyeInvisibleOutlined","email","address","contact","column","Qrcode","fileList","tips","uploadFileList","setUploadFilelist","triggerChange","changedValue","fileLists","uploadprops","action","OPEN_API_URL","accept","headers","tokenInstance","get","listType","PlusOutlined","marginTop","UploadOutlined","normFile","Array","isArray","getUpload","uploadResponse","transformUpload","prefix","filePath","thumbUrl","productPics","productVideos","payload","JSON","parse","stringify","Group","_","isCheckSize","some","valuePropName","getValueFromEvent","UploadImg","UploadVideo","max","en","position","fontFamily","length","idcardBack","idcardFront","photo","province","city","county","birthday","area","moment","format","FormLabel","marginBottom","showSearch","optionFilterProp","AreaJson","OptGroup","j","k","prevValues","currentValues","nationality","options","PassWord","Info","EditInfo","ProductList","ProductAdd","Register","Reset","App","NotFound","AdminRouter","userRouter","BaseUrl","upstreams","protocol","combineUrl","upstream","baseName","Error","configurations","whiteHosts","Boolean","hostname","app","Friday","onInjectConfigBefore","onInjectConfigAfter","onInjectRouterAfter","onStarted","configuration","injectConfigurations","use","require","default","injectRouters","start","navigator","serviceWorker","ready","then","registration","unregister","catch","getConfiguration","axiosConifg","baseURL","timeout","errorNotice","redirect","nextUrl","replace","axiosInstance","httpAxios","requestSuccessHook","config","responseErrorHooks","code","isApiTimeout","isNetworkError","reader","FileReader","readAsText","onload","result","notice","axios_middleware","request_middleware","validateMessages","middlewares","locale","zhCN","tokenName","v","Cookie","remove"],"mappings":"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","file":"static/js/main.3bb63ed0.chunk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"appweb-main\"] = factory();\n\telse\n\t\troot[\"appweb-main\"] = factory();\n})(this, function() {\nreturn ","import React from 'react'\nimport { dispatchAsync } from '@friday/async'\nimport { useApiSelector } from 'src/hooks'\nimport { useGlobalContext } from 'src/middleware/globalMiddleware'\nimport * as Cookie from 'js-cookie'\n\n\nconst useUserInfo = () => {\n\n\tconst { state, dispatch } = useGlobalContext()\n\n\tconst apis = useApiSelector()\n\n\tconst dispatchUserInfo = (value: {}) => {\n\t\tdispatch({type: 'userInfo', value})\n\t}\n\n\t// 获取用户信息\n\tconst fetchUserInfo = async () => {\n\t\tconst { dataJson, error } = await dispatchAsync(apis.user.fetchUserInfo({}))\n\t\tif (error) return\n\t\tdispatchUserInfo(dataJson)\n\t}\n\t\n\treturn {\n\t\tuserInfo: state.userInfo || {} ,\n\t\tfetchUserInfo,\n\t\tdispatchUserInfo\n\t}\n}\n\nexport default useUserInfo","import { GlobalState_middleware } from '@friday/core'\n\n\nexport const { middleware: global_middleware, useGlobalContext } = GlobalState_middleware({ \n\tuserInfo: {},\n\tglobalLoading: false\n})\n\n\nexport default global_middleware","import HomeApi from 'src/pages/home/api'\nimport UserApi from 'src/pages/user/apis'\nimport AdminApi from 'src/pages/admin/apis'\n\nexport const apis = {\n\thome: new HomeApi(),\n\tuser: new UserApi(),\n\tadmin: new AdminApi()\n}\n\nexport type IApis = typeof apis\n\n","\nimport { createGetApi, createPostApi } from '@friday/async'\n\n\nexport default class Apis {\n\tgetTest = createGetApi<any, {test: number}>({ url: '/test'})\n\tgetPost = createPostApi({ url: '/test_post' })\n}\n\n","import { createGetApi, createPostApi } from '@friday/async'\n\n\nexport default class Apis {\n\n    private prefix_config = '/user'\n\t\n\t// 用户登录\n\tpublic login = createPostApi({ url: `${this.prefix_config}/login`})\n\n    // 用户信息\n    public fetchUserInfo = createGetApi<any>({ url: `${this.prefix_config}/info`})\n\n    // 用户注册\n    public register = createPostApi<{}>({ url: `${this.prefix_config}/register`})\n\n    // 发送验证码\n    public sendCode = createPostApi<any>({url: '/phone/codeSend'})\n\n    // 找回密码\n    public reset = createPostApi<any>({url: `${this.prefix_config}/pwd/reset`})\n\n    // 修改密码\n    public updatePassword = createPostApi<any>({url: `${this.prefix_config}/pwd/update`})\n\n    // 完善个人信息\n    public completeInfo = createPostApi<any>({url: `${this.prefix_config}/complete`})\n\n    // 添加作品\n    public addProduct = createPostApi<any>({url: `${this.prefix_config}/signup`})\n\n    // 作品列表\n    public productList = createGetApi<any>({url: `${this.prefix_config}/signup/list`})\n\n    public productInfo = createGetApi<any>({url: `${this.prefix_config}/signup/info`})\n\n    public deleteId = createGetApi<any>({url: `${this.prefix_config}/signup/del`})\n\n}\n","import { createGetApi, createPostApi } from '@friday/async'\n\n\nexport default class Apis {\n\n    private manage_config = '/manage'\n\n    private review_config = '/review'\n\n    private admin_config = '/admin'\n\t\n\t// 管理员登录\n\tpublic manageLogin = createPostApi({ url: `${this.manage_config}/login`})\n\n    // 评审登录\n    public reviewLogin = createPostApi({ url: `${this.review_config}/login`})\n\n    // 作品列表\n    public reviewList = createGetApi({ url: `${this.review_config}/list`})\n\n    // 作品信息\n    public reviewDetail = createGetApi({ url: `${this.review_config}/userSignInfo`})\n\n    // 评分提交\n    public signupScoringInfo = createGetApi({ url: `${this.review_config}/signupScoringInfo/save`})\n\n\n    // 评分更新\n    public saveOrUpdate = createPostApi({ url: `${this.review_config}/userSignInfo/saveOrUpdate`})\n\n    // 管理评分列表\n    public manageList = createGetApi({ url: `${this.admin_config}/signInfo/list`})\n\n    // 下载\n    public manageListDownload = createGetApi({ url: `${this.admin_config}/signInfo/exportExcel`, responseType: 'blob'})\n\n    // 查看评分详细\n    public manageInfo = createGetApi({ url: `${this.admin_config}/signupScoringInfo/query`})\n\n}\n\n","\nimport { apis } from 'src/apiStore'\n\nconst useApiSelector = () => {\n\treturn apis\n}\n\nexport default useApiSelector\n\n\n","import React  from \"react\";\nimport { Input, Alert, Descriptions, Form, Button, Row, Col, message, Image, Space, PageHeader, Card} from 'antd'\nimport { useApiSelector } from 'src/hooks'\nimport { useParams, useHistory } from '@friday/router'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { isEmpty, get } from 'lodash'\nimport { useConfiguration } from '@friday/core'\nimport ModalVideo from './ModalVideo'\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n\n    const apis = useApiSelector()\n\n    const [ form ] = Form.useForm()\n\n    const { id } = useParams() as any\n\n    const { publicUrl } = useConfiguration()\n\n    const { dataJson } = useRequest(apis.admin.reviewDetail({id}))\n\n    const history = useHistory()\n\n    React.useEffect(() => {\n        if (!isEmpty(dataJson)) {\n            form.setFieldsValue(dataJson)\n        }\n    }, [dataJson])\n\n\n    const onFinish = async (type) => {\n        const values = await form.validateFields()\n\n        const respone = await dispatchAsync(apis.admin.saveOrUpdate({\n            ...values,\n            signupId: id,\n            save: type\n        })) as any\n        \n        if (respone.error) return \n        message.success('保存成功')\n        history.goBack()\n    }\n\n    const imgList = eval(get(dataJson, 'productPics')) || []\n\n    const videoList = eval(get(dataJson, 'productVideos')) || []\n    \n\n    return (\n        <div>\n            <PageHeader \n                title='作品评分'\n                ghost={false}\n                className='mg-b-10'\n                onBack={() => history.goBack()}\n            />\n            <Card hoverable>\n            <Alert message= '参赛作品信息' />\n            <Descriptions bordered  className='mg-t-20 mg-b-20' layout=\"vertical\">\n                <Descriptions.Item label=\"作品编号\">{get(dataJson, 'id')}</Descriptions.Item>\n                <Descriptions.Item label=\"参赛类别\">{get(dataJson, 'entryDirection')}</Descriptions.Item>\n                <Descriptions.Item label=\"参赛方向\">{get(dataJson, 'productType')}</Descriptions.Item>\n                <Descriptions.Item label=\"作品名称(中文)\">{get(dataJson, 'productName')}</Descriptions.Item>\n                <Descriptions.Item label=\"作品名称(英文)\" >\n                    {get(dataJson, 'productNameEn') || '--'}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"推荐人\">\n                    {get(dataJson, 'recommendName') || '--'}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"作品图片\" span={3}>\n                    <Image.PreviewGroup>\n                        {imgList.map((item, index) => {\n                            return (\n                                <Image\n                                    width={200}\n                                    key={index}\n                                    src={publicUrl.OPEN_IMG_URL + item}\n                                />\n                            )\n                        })}\n                    </Image.PreviewGroup>\n                </Descriptions.Item>\n                <Descriptions.Item label=\"作品视频\" span={3}>\n                    <Space>\n                        {videoList.map((item, index) => {\n                            return (\n                                <ModalVideo title={`视频${index+1}`} url={publicUrl.OPEN_IMG_URL + item} key={index} />\n                            )\n                        })} \n                    </Space> \n                </Descriptions.Item>\n                <Descriptions.Item label=\"设计主题及作品说明(中文)\" span={3}>\n                    {/* {get(dataJson, 'productDesc') || '--'} */}\n                    <div>\n                        <span style={{color: '#666'}}>原创性:</span> {get(dataJson, 'explainA') || '--'}\n                    </div>\n                    <div>\n                        <span style={{color: '#666'}}>文化特性:</span> {get(dataJson, 'explainB') || '--'}\n                    </div>\n                    <div>\n                        <span style={{color: '#666'}}>数字化设计:</span> {get(dataJson, 'explainC') || '--'}\n                    </div>\n                    <div>\n                        <span style={{color: '#666'}}>工艺特点:</span> {get(dataJson, 'explainD') || '--'}\n                    </div>\n                    <div>\n                        <span style={{color: '#666'}}>市场竞争力:</span> {get(dataJson, 'explainE') || '--'}\n                    </div>\n                </Descriptions.Item>\n                <Descriptions.Item label=\"设计主题及作品说明(英文)\" span={3}>\n                    {get(dataJson, 'productDescEn') || '--'}\n                </Descriptions.Item>\n                \n            </Descriptions>\n\n            <Alert message= '评分' />\n\n            <Form\n                form={form}\n                labelCol={{\n                    xs:8,\n                    md:6\n                }}\n                wrapperCol={{\n                    xs: 12,\n                    md: 12\n                }}\n                className='mg-t-30'\n            >\n                <FormItem\n                    label={'原创性(20分)'}\n                    rules={[{required: true, message: '请输入1-20评分', pattern: /^([01]?\\d|20)$/ }]}\n                    name='itemA'\n                >\n                    <Input placeholder='请输入1-20评分' disabled={dataJson.save == 1}  suffix='分'  />\n                </FormItem>\n\n                <FormItem\n                    label={'创新性(20分)'}\n                    rules={[{required: true, message: '请输入1-20评分', pattern: /^([01]?\\d|20)$/}]}\n                    name='itemB'\n                >\n                    <Input placeholder='请输入1-20评分' disabled={dataJson.save == 1} suffix='分'   />\n                </FormItem>\n\n                <FormItem\n                    label={'美观性(20分)'}\n                    rules={[{required: true, message: '请输入1-20评分', pattern: /^([01]?\\d|20)$/}]}\n                    name='itemC'\n                >\n                    <Input placeholder='请输入1-20评分' disabled={dataJson.save == 1} suffix='分'  />\n                </FormItem>\n\n                <FormItem\n                    label={'系列性(15分)'}\n                    rules={[{required: true, message: '请输入1-15评分', pattern:  /^([01]?[0-5])$/}]}\n                    name='itemD'\n                >\n                    <Input placeholder='请输入1-15评分' disabled={dataJson.save == 1}  suffix='分'  />\n                </FormItem>\n\n                <FormItem\n                    label={'工业性(15分)'}\n                    rules={[{required: true, message: '请输入1-15评分', pattern: /^([01]?[0-5])$/}]}\n                    name='itemE'\n                >\n                    <Input placeholder='请输入1-15评分' disabled={dataJson.save == 1} suffix='分'  />\n                </FormItem>\n\n                <FormItem\n                    label={'商业价值(10分)'}\n                    rules={[{required: true, message: '请输入1-10评分', pattern: /^([1-9]|10)$/}]}\n                    name='itemF'\n                    \n                >\n                    <Input placeholder='请输入1-10评分' disabled={dataJson.save == 1}  suffix='分' />\n                </FormItem>\n                <FormItem\n                    noStyle\n                    shouldUpdate={true}\n                >\n                    {({ getFieldsValue }) => {\n                        const values = Object.values(getFieldsValue()).filter(item => item) as any\n                        const sum = values.reduce((pre, cur) => {\n                            pre = Number(pre) + Number(cur)\n                            return pre\n                        }, 0)\n                        return(\n                            <Form.Item\n                                label={'总分数'}\n                            >\n                                <div style={{color: 'red', fontSize: '20px'}}>\n                                    {sum}分\n                                </div>    \n                            </Form.Item>\n                        ) \n                    }}\n                </FormItem>\n                <FormItem\n                    label={'评委点评'}\n                    rules={[{required: true, message: '请输入您的点评'}]}\n                    name='comment'\n                    \n                >\n                    <Input.TextArea  rows={6} disabled={dataJson.save == 1} />\n                </FormItem>\n                <div className='tc' style={{width: '300px', margin: '0 auto'}}>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Button\n                                size='middle'\n                                onClick={() => onFinish(0)}\n                                block\n                                disabled={dataJson.save == 1}\n                            >\n                                保存\n                            </Button>\n                        </Col>\n                        <Col span={12}>\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                size='middle'\n                                onClick={() => onFinish(1)}\n                                block\n                                disabled={dataJson.save == 1}\n                            >\n                                提交\n                            </Button>\n                        </Col>\n                    </Row>\n                </div>\n            </Form>\n            </Card>\n            \n        </div>\n    )\n}\n\nexport default Index","import React, {useState} from 'react'\nimport { Button } from 'antd'\nimport ModalVideo from 'react-modal-video'\n\n\nconst Index = (props) => {\n    const { title, url} = props\n    const [isOpen, setOpen] = useState(false)\n\n    return (\n        <React.Fragment>\n            <ModalVideo channel='custom' autoplay isOpen={isOpen} url={url} onClose={() => setOpen(false)} />\n            <Button type='primary' onClick={()=> setOpen(true)} >{title}</Button>\n        </React.Fragment>\n    )\n}\n\nexport default Index","import React from \"react\";\nimport { Divider, Space, Popover, Modal, message } from 'antd'\nimport { Link } from '@friday/router'\nimport { get } from 'lodash'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { apis } from \"src/apiStore\";\n\n\nconst useColumns = ( publicUrl, revalidate) => {\n\n    const deleteId = (id) => {\n        Modal.confirm({\n            title: '确定要删除吗？',\n            onOk: async () => {\n                const {error} = await dispatchAsync(apis.user.deleteId({id}))\n                if (error) return \n                revalidate()\n                message.success('删除成功')\n            }\n        })\n    }\n\n    return React.useMemo(() => {\n        const columns = [{\n            title: '作品名称',\n            dataIndex: 'productName'\n        }, {\n            title: '缩略图',\n            dataIndex: 'productPics',\n            width: '150px',\n            render: (txt) => {\n                const imgUrl = get(eval(txt), '[0]')\n                const img =  publicUrl.OPEN_IMG_URL + imgUrl\n                return (\n                    <div className='m-img-thumbs'>\n                        <Popover content={<img src={img} />}>\n                            <img src={img} />\n                        </Popover>\n                    </div>\n                )\n            }\n        }, {\n            title: '参赛类别',\n            dataIndex: 'productType'\n        }, {\n            title: '参赛方向',\n            dataIndex: 'entryDirection'\n        }, {\n            title: '作品状态',\n            dataIndex: 'opr',\n            render: () => '已提交'\n        }, {\n            title: '操作',\n            dataIndex: 'opr',\n            fixed: 'right',\n            render: (text, record) => {\n                return (\n                    <Space split={<Divider />}>  \n                        <span className='operation'>\n                            <Link to={`/user/product/edit/${record.id}`}>\n                                编辑\n                            </Link >\n                        </span>\n                        <span className='operation' onClick={() => deleteId(record.id)}>删除 </span>\n                    </Space>\n                )\n            }\n        }]\n    \n        return columns\n    \n    }, [])\n} \n\nexport default useColumns","export default __webpack_public_path__ + \"static/media/banner.d2ec0092.png\";","export default __webpack_public_path__ + \"static/media/pic_01.75506d0d.jpeg\";","export default __webpack_public_path__ + \"static/media/pic_02.449580fd.jpeg\";","\nimport React from 'react'\nimport {Row, Col} from  'antd'\nimport banner from './images/banner.png'\nimport pic_one from './images/pic_01.jpeg'\nimport pic_two from './images/pic_02.jpeg'\nimport './home.less'\n\nconst Home = () => {\n\n\treturn (\n\t\t<div className='m-home-wrapper'>\n\t\t\t<div className='m-home-banner'>\n\t\t\t\t<img src={banner} />\n\t\t\t</div>\n\t\t\t<div className='m-home-nav'>\n\t\t\t\t<Row gutter={16}>\n\t\t\t\t\t<Col xs={6} md={3}  className='tc'>\n\t\t\t\t\t\t<a href='#p1'>大赛简介</a>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={6} md={3}   className='tc'>\n\t\t\t\t\t\t<a href='#p2'>参赛要求</a>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={6} md={3}  className='tc'>\n\t\t\t\t\t\t<a href='#p3'>奖项设置</a>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={6} md={3} className='tc'>\n\t\t\t\t\t\t<a href='#p4'>大赛流程</a>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={6} md={3} className='tc'>\n\t\t\t\t\t\t<a href='#p5'>组织机构</a>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={6} md={3} className='tc'>\n\t\t\t\t\t\t<a href='/user/login'>立即参赛</a>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={6} md={3}  className='tc'>\n\t\t\t\t\t\t<a href='/admin/review/login'>评委入口</a>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={6} md={3} className='tc'>\n\t\t\t\t\t\t<a href='/admin/manage/login'>管理员</a>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t\t<div className='m-home-main'>\n\t\t\t\t<div className='m-home-section' id='p1'>\n\t\t\t\t\t<h3>大赛简介</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t文明如火，烛照人类前行；\n\t\t\t\t\t\t针线跃动，开启设计新景。\n\n\t\t\t\t\t\t不论你是天马行空、才华横溢的设计师；\n\n\t\t\t\t\t\t还是寻求突破、勇于挑战的创作者，引领时尚风潮的前沿者；\n\n\t\t\t\t\t\t亦或是热衷探索服装价值的的品牌人，\n\n\t\t\t\t\t\t这里有一封来自“洪合杯”的邀请信，\n\n\t\t\t\t\t\t有才，你就来！\n\n\t\t\t\t\t\t首届“2022“洪合杯”毛衫设计大赛”邀请你报名啦！\n\n\t\t\t\t\t\t2021年11月8日正式启动，截稿2022年4月15日24:00。\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section' id='p2'>\n\t\t\t\t\t<h3>参赛要求</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t1.国内外注册服装设计生产企业、设计师，服装设计机构、品牌设计师，高校服装、设计类师生，以及热爱毛针织服装设计的社会各界人士均可参赛（所有参赛企业及参赛者无不良记录）。\n\n\t\t\t\t\t2.院校学生个人及团队参赛均需指定至少1名参赛指导教师。\n\n\t\t\t\t\t3.拥有设计能力的个体组成团队参赛：团队核心成员至少2人但不超过5人。\n\n\t\t\t\t\t4.参赛作品未进入市场，具有良好的市场潜力；参赛作品的创意、款式、色彩、工艺及相关专利拥有自主知识产权且无知识产权纠纷。\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section'>\n\t\t\t\t\t<h3>作品要求</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t参赛作品必须是作者本人或团队原创设计作品，不得侵犯他人知识产权。创作过程及作品本身不得摹仿、抄袭、拷贝国内外的作品或创意，不得侵犯他人的知识产权。\n\n\t\t\t\t\t所有因参赛作品引发的版权或知识产权纠纷均与大赛组委会无关。参赛者按要求签署作品《原创承诺书》，后一经发现有抄袭作品、发生知识产权或版权纠纷等情况，将取消作者参赛资格，并由作者承担相应后果。\n\n\t\t\t\t\t大赛设置“系列服饰类、经典套装类、毛衫文化品牌类”三个征集方向。\n\n\t\t\t\t\t1.系列服饰类：以数字、未来、时尚、文化为主题设计的系列毛针织服装参赛。包括精梳类、粗梳类和花色纱类系列男装、女装。自己搭配（编织）首饰、包、围巾、帽等饰品。参赛作品以男/女羊绒、羊毛、混纺针织系列服装为主，每个系列参赛作品不少于4件/套。\n\n\t\t\t\t\t2.经典套装类：以数字、未来、时尚、文化为主题设计的单套毛针织服装参赛。包括精梳类、粗梳类和花色纱类系列男装、女装。自己搭配（编织）首饰、包、围巾、帽等饰品。参赛作品以男/女羊绒、羊毛、混纺针织服装为主，每套作品包括上装和下装或连身服装及配饰。\n\n\t\t\t\t\t3.毛衫文化品牌类：围绕毛衫品牌logo、海报、包装、吉祥物及相关品牌识别的视觉形象进行设计。品牌参赛作品必须按套/系列参赛。\n\n\t\t\t\t\t注：\n\n\t\t\t\t\t(1)参赛作品必须是毛针织工艺服装，参赛作品按所属类别报名参赛；无法确定归属类别或归类不正确的由组委会给予判定。\n\n\t\t\t\t\t(2)横机针织面料可以与其他面料拼接(其中横机针织面料不能少于80%），要求作品主题明确、系列完整、概念清晰，服饰配套齐全。\n\n\t\t\t\t\t(3)独创钩编可作为配饰与服装一起列入参赛范围（加分项）。\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section' id='p3'>\n\t\t\t\t\t<h3>奖项设置</h3>\n\t\t\t\t\t<p className='tc'>\n\t\t\t\t\t\t<img src={pic_one} style={{width: '100%'}} />\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section' id='p4'>\n\t\t\t\t\t<h3>大赛流程</h3>\n\t\t\t\t\t\n\t\t\t\t\t<p className='tc'>参赛者通过以下步骤进行作品上传，作品提交成功即报名成功</p>\n\t\t\t\t\t<ul className='tc'>\n\t\t\t\t\t\t<li>注册登录</li>\n\t\t\t\t\t\t<li>作品上传</li>\n\t\t\t\t\t\t<li>作品提交</li>\n\t\t\t\t\t\t<li>报名成功</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-home-section' id='p5'>\n\t\t\t\t\t<h3>组织机构</h3>\n\t\t\t\t\t<p className='tc'>\n\t\t\t\t\t\t<img src={pic_two} style={{width: '100%'}} />\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n\n}\n\nexport default Home","import React from 'react'\nimport { Result, Button } from 'antd'\nimport { Link } from '@friday/router'\n\nconst Notfind = () => {\n\treturn (\n\t\t<Result\n\t\t\tstatus=\"404\"\n\t\t\ttitle=\"404\"\n\t\t\tsubTitle=\"Sorry, the page you visited does not exist.\"\n\t\t\textra={\n\t\t\t\t<Button type=\"primary\">\n\t\t\t\t\t<Link to='/'>返回首页</Link>\n\t\t\t\t</Button>\n\t\t\t}\n\t\t/>\n\t)\n}\nexport default Notfind","import React, { useEffect }  from 'react'\nimport { Form, Input, Button, message } from 'antd'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\nimport { Link } from '@friday/router'\nimport { useHistory, useParams } from '@friday/router'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport { dispatchAsync } from '@friday/async'\nimport TokenService from 'src/services/tokenService'\nimport './index.less'\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n\n    const { type } = useParams() as any\n\n    const apis = useApiSelector()\n\n    useEffect(() => {\n\t\tTokenService.clear()\n\t}, [])\n\n    const {dispatchUserInfo} = useUserInfo()\n    \n    const history = useHistory()\n\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const respone = await dispatchAsync(type == 'review' ? apis.admin.reviewLogin(values) : apis.admin.manageLogin(values)) as any\n        if (respone.error) return \n        TokenService.set(respone?.token.token)\n        dispatchUserInfo(respone.dataJson)\n        message.success('登录成功')\n        history.push(`/admin/${type}has`)\n    } \n\n    return (\n        <div className='m-login'>\n            <div className='m-login-header'>\n                <a href='/'>洪合杯</a>\n            </div>\n            <div className='m-login-content'>\n                <div className='m-login-main'>\n                    <h3 className='m-title'>登录</h3>\n                    <Form \n                        form={form}\n                        onFinish={onFinish}\n                        layout=\"vertical\"\n                    >\n                        <FormItem \n                            name='username'\n                            label='账号'\n                            rules={[{required: true, message: '请输入账号'}]}\n                        >\n                            <Input  placeholder=\"请输入账号\" size='middle' />\n                        </FormItem>\n                        <FormItem \n                            name='password'\n                            label='密码'\n                            rules={[{required: true, message: '请输入密码'}]}\n                        >\n                            <Input type=\"password\" placeholder=\"请输入密码\" size='middle' />\n                        </FormItem>\n                        <Form.Item>\n                            <Button\n                                className=\"login-form-button\"\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                size='middle'\n                                block\n                            >\n                                登录\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Index","import React from 'react'\nimport { Spin } from 'antd'\n\nconst LodingCom: React.FC<any> = ({ children }) => {\n\n    return (\n        <Spin spinning={ true }>\n            <div style={{height: 800, backgroundColor: '#fff'}}>\n                {children}\n            </div>\n        </Spin>\n    )\n}\n\nexport default LodingCom","import React, { useCallback } from 'react'\nimport { Redirect, Route, RouteComponentProps } from '@friday/router'\nimport TokenServeice from 'src/services/tokenService'\nimport useUserInfo from 'src/hooks/useUserInfo'\nimport LodingCom from 'src/pages/layouts/LodingCom'\nimport { isEmpty } from 'lodash'\n\nconst PrimaryLayout: React.FC<any> = ({ children, ...rest}) => {\n\n    const { userInfo, fetchUserInfo } = useUserInfo()\n    const renderFn = useCallback((renderProps: RouteComponentProps<any>) => {\n        \n        const { component: Component } = rest\n\n\n        if (!TokenServeice.isAuthenticated()) {\n            return (\n                <Redirect\n                    to={`/admin/1/login?path=${location.pathname}`}\n                />\n            )\n        }\n        if (!isEmpty(userInfo)) {\n           \n            if (!Component) {\n                return null\n            }\n            return <Component {...renderProps} />\n        }\n        \n        fetchUserInfo()\n        return (<LodingCom />)\n        // return <Component {...renderProps} />\n    }, [ userInfo ])\n    \n    return (\n        <Route {...rest} component={renderFn} />\n    )\n}\n\nexport default PrimaryLayout","import React from 'react'\nimport { Layout, Menu } from 'antd'\nimport { FileOutlined, FileDoneOutlined, LogoutOutlined } from '@ant-design/icons'\nimport { Link, useLocation} from '@friday/router'\nimport useUserInfo from 'src/hooks/useUserInfo'\n\nconst { Header, Content, Footer, Sider } = Layout\n\nimport './index.less'\n\n\nconst Index = ({children}) => {\n\n    const { userInfo } = useUserInfo()\n\n    const { type } = userInfo as any\n\n    const { pathname } = useLocation()\n\n\n    const getkeys = () => {\n        if (pathname.indexOf('reviewtreat') > -1) return '1'\n        if (pathname.indexOf('reviewhas') > -1) return '2'\n        if (pathname.indexOf('managetreat') > -1) return '3'\n        if (pathname.indexOf('managehas') > -1) return '4'\n        return '4'\n    }\n\n    return (\n        <Layout>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    console.log(collapsed, type);\n                }}\n            >\n                <div className=\"m-logo\" />\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[getkeys()]}>\n                    \n                    {type == 2 && \n                        <Menu.Item key=\"1\" icon={<FileOutlined />} >\n                            <Link to='/admin/reviewtreat'>\n                                未评审作品\n                            </Link>\n                        </Menu.Item>\n                    }\n                    {type == 2 && \n                        <Menu.Item key=\"2\" icon={<FileDoneOutlined />} >\n                            <Link to='/admin/reviewhas'>\n                            已评审作品\n                            </Link>\n                        </Menu.Item>\n                    }\n                    {type == 3 && \n                        <Menu.Item key=\"3\" icon={<FileOutlined />} >\n                            <Link to='/admin/managetreat'>\n                            未评分作品\n                            </Link>\n                        </Menu.Item>\n                    }\n                    {type ==3 && \n                        <Menu.Item key=\"4\" icon={<FileDoneOutlined />}>\n                            <Link to='/admin/managehas'>\n                            已评分作品\n                            </Link>\n                        </Menu.Item>\n                    }\n                    <Menu.Item key=\"5\" icon={<LogoutOutlined />}>\n                        <Link to='/admin/review/login'> \n                        退出登录\n                        </Link>\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n            <Layout style={{minHeight: '100vh'}}>\n                <Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }} />\n                <Content style={{ margin: '16px 16px 0', minWidth: 328 }} >\n                    <div className=\"site-layout-background\" style={{ minHeight: 360 }}>\n                        {children}\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>洪合杯 ©2021 Created by front </Footer>\n            </Layout>\n        </Layout>)\n}\n\nexport default Index","import React from \"react\";\nimport { Divider, Space, Popover, Modal, message } from 'antd'\nimport { Link } from '@friday/router'\nimport { get } from 'lodash'\nimport { useConfiguration } from '@friday/core'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync, useRequest } from '@friday/async'\n\n\nconst useColumns = (revalidate) => {\n\n    const { publicUrl } = useConfiguration()\n    const apis = useApiSelector()\n\n    const submit =(id) => {\n        Modal.confirm({\n            content: '确定要提交',\n            onOk: async () => {\n                const {error} = await dispatchAsync(apis.admin.signupScoringInfo({id}))\n                if (error) return \n                message.success('提交成功')\n                revalidate()\n            }\n        })\n    }\n\n    return React.useMemo(() => {\n        const columns = [{\n            title: '作品名称',\n            dataIndex: 'productName'\n        },  {\n            title: '参赛类别',\n            dataIndex: 'productType'\n        }, {\n            title: '参赛方向',\n            dataIndex: 'entryDirection'\n        }, {\n            title: '分数',\n            dataIndex: 'sum',\n        }, {\n            title: '操作',\n            dataIndex: 'opr',\n            fixed: 'right',\n            render: (text, record) => {\n                const {save, id} = record\n                return (\n                    <Space split={<Divider type=\"vertical\" />} >  \n                        {save == 1 ? \n                            <span className='grey' > 已提交</span> :\n                            <span className='operation' onClick={() => submit(id)}> 提交</span> \n                        }\n                        <span className='operation'>\n                            <Link to={`/admin/review/${record.id}/score`}>\n                                查看\n                            </Link >\n                        </span>\n                    </Space>\n                )\n            }\n        }]\n    \n        return columns\n    \n    }, [])\n} \n\nexport default useColumns","import React  from \"react\";\nimport { Table, Space, Select, PageHeader, Card } from 'antd'\nimport useColumns from './useColumns'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { isEmpty, get } from 'lodash'\nimport { useImmer }  from '@friday/immer'\n\n\n\nconst Index = () => {\n\n    const apis = useApiSelector()\n\n    \n\n    const gatList = (arr, filterObj) => {\n        if (isEmpty(arr)) return []\n        return arr.filter(item => {\n            return item.scoring == filterObj.scoring &&\n            (filterObj.productType ? item.productType  == filterObj.productType : true) &&\n            (filterObj.entryDirection ?  item.entryDirection  == filterObj.entryDirection: true) \n        })\n\n    }\n\n    const [state, setState] = useImmer({\n        scoring:true,\n        productType: '',\n        entryDirection: ''\n    })\n\n    const {dataArray, isValidating, revalidate} = useRequest(apis.admin.reviewList({}))\n\n    const list = gatList(dataArray, state)\n\n    const columns = useColumns(revalidate)\n\n\n\n    return (\n        <div>\n            <PageHeader \n                title='已评审作品'\n                ghost={false}\n                className='mg-b-10'\n            />\n            <Card hoverable>\n            <div className='clearfix mg-b-20'>\n                <Space>\n                    <div>\n                        参赛类别：\n                        <Select style={{width: '140px'}} \n                            allowClear \n                            placeholder='请选择参赛类别' \n                            onChange={(e) => setState(dart => { dart.entryDirection = e as any })}\n                        >\n                            <Select.Option value={'系列服装类'}>系列服装类</Select.Option >\n                            <Select.Option value={'经典套装类'}>经典套装类</Select.Option >\n                            <Select.Option value={'毛衫文化品牌类'}>毛衫文化品牌类</Select.Option >\n                        </Select>\n                    </div>\n                    <div>\n                        参赛方向： \n                        <Select style={{width: '140px'}} allowClear placeholder='请选择参赛方向' onChange={(e) => setState(draft => { draft.productType = e as any })}>\n                            <Select.Option value={'个人组'}>个人组</Select.Option>\n                            <Select.Option value={'团体组'}>团体组</Select.Option>\n                            <Select.Option value={'企业组'}>企业组</Select.Option>\n                        </Select>\n                    </div>\n                </Space>\n            </div>\n            <Table \n                columns={columns as any}\n                dataSource={list}\n                scroll={{\n                    x: 'max-content'\n                }}\n                loading={isValidating}\n                rowKey={'id'}\n            />\n            </Card>\n        </div>\n    )\n}\n\nexport default Index","import React from \"react\";\nimport { Divider, Space, Popover } from 'antd'\nimport { Link } from '@friday/router'\nimport { get } from 'lodash'\nimport { useConfiguration } from '@friday/core'\n\n\nconst useColumns = () => {\n\n    const { publicUrl } = useConfiguration()\n\n    return React.useMemo(() => {\n        const columns = [{\n            title: '作品名称',\n            dataIndex: 'productName'\n        }, \n        // {\n        //     title: '缩略图',\n        //     dataIndex: 'productPics',\n        //     width: '150px',\n        //     render: (txt) => {\n        //         const imgUrl = get(eval(txt), '[0]')\n        //         const img =  publicUrl.OPEN_IMG_URL + imgUrl\n        //         return (\n        //             <div className='m-img-thumbs'>\n        //                 <Popover content={<img src={img} />}>\n        //                     <img src={img} />\n        //                 </Popover>\n        //             </div>\n        //         )\n        //     }\n        // }, \n        {\n            title: '参赛类别',\n            dataIndex: 'productType'\n        }, {\n            title: '参赛方向',\n            dataIndex: 'entryDirection'\n        }, {\n            title: '状态',\n            dataIndex: 'opr',\n            render: () => '未打分'\n        }, {\n            title: '操作',\n            dataIndex: 'opr',\n            fixed: 'right',\n            render: (text, record) => {\n                return (\n                    <Space split={<Divider />}>  \n                        <span className='operation'>\n                            <Link to={`/admin/review/${record.id}/score`}>\n                                去打分\n                            </Link >\n                        </span>\n                    </Space>\n                )\n            }\n        }]\n    \n        return columns\n    \n    }, [])\n} \n\nexport default useColumns","import React  from \"react\";\nimport { Table, Space, Select, PageHeader, Card } from 'antd'\nimport useColumns from './useColumns'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { isEmpty, get } from 'lodash'\nimport { useImmer }  from '@friday/immer'\n\n\n\nconst Index = () => {\n\n    const apis = useApiSelector()\n\n    const columns = useColumns()\n\n    const gatList = (arr, filterObj) => {\n        if (isEmpty(arr)) return []\n        return arr.filter(item => {\n            return item.scoring == filterObj.scoring &&\n            (filterObj.productType ? item.productType  == filterObj.productType : true) &&\n            (filterObj.entryDirection ?  item.entryDirection  == filterObj.entryDirection: true) \n        })\n\n    }\n\n    const [state, setState] = useImmer({\n        scoring:false,\n        productType: '',\n        entryDirection: ''\n    })\n\n    const {dataArray, isValidating} = useRequest(apis.admin.reviewList({}))\n\n    const list = gatList(dataArray, state)\n\n\n\n    return (\n        <div>\n            <PageHeader \n                title='未评审作品'\n                ghost={false}\n                className='mg-b-10'\n            />\n            <Card hoverable>\n            <div className='clearfix mg-b-20'>\n                <Space>\n                    <div>\n                        参赛类别：\n                        <Select style={{width: '140px'}} \n                            allowClear \n                            placeholder='请选择参赛类别' \n                            onChange={(e) => setState(dart => { dart.entryDirection = e as any })}\n                        >\n                            <Select.Option value={'系列服装类'}>系列服装类</Select.Option >\n                            <Select.Option value={'经典套装类'}>经典套装类</Select.Option >\n                            <Select.Option value={'毛衫文化品牌类'}>毛衫文化品牌类</Select.Option >\n                        </Select>\n                    </div>\n                    <div>\n                        参赛方向： \n                        <Select style={{width: '140px'}} allowClear placeholder='请选择参赛方向' onChange={(e) => setState(draft => { draft.productType = e as any })}>\n                            <Select.Option value={'个人组'}>个人组</Select.Option>\n                            <Select.Option value={'团体组'}>团体组</Select.Option>\n                            <Select.Option value={'企业组'}>企业组</Select.Option>\n                        </Select>\n                    </div>\n                </Space>\n            </div>\n            <Table \n                columns={columns as any}\n                dataSource={list}\n                scroll={{\n                    x: 'max-content'\n                }}\n                loading={isValidating}\n                rowKey={'id'}\n            />\n            </Card>\n        </div>\n    )\n}\n\nexport default Index","import React from \"react\";\nimport { Divider, Space, Popover, Modal, message } from 'antd'\nimport { Link } from '@friday/router'\nimport { get } from 'lodash'\nimport { useConfiguration } from '@friday/core'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync, useRequest } from '@friday/async'\n\n\nconst useColumns = (revalidate) => {\n\n    const { publicUrl } = useConfiguration()\n    const apis = useApiSelector()\n\n    const submit =(id) => {\n        Modal.confirm({\n            content: '确定要提交',\n            onOk: async () => {\n                const {error} = await dispatchAsync(apis.admin.signupScoringInfo({id}))\n                if (error) return \n                message.success('提交成功')\n                revalidate()\n            }\n        })\n    }\n\n    return React.useMemo(() => {\n        const columns = [{\n            title: '参赛作品编号',\n            dataIndex: 'id'\n        },  {\n            title: '参赛组别',\n            dataIndex: 'productType'\n        }, {\n            title: '参赛者姓名',\n            dataIndex: 'name'\n        },  {\n            title: '参赛作品名称',\n            dataIndex: 'productName'\n        }, {\n            title: '参赛者联系电话',\n            dataIndex: 'contact'\n        }, {\n            title: '参赛者地址',\n            dataIndex: 'address'\n        }, {\n            title: '参赛者邮箱',\n            dataIndex: 'email'\n        },{\n            title: '原创性',\n            dataIndex: 'itemA'\n        },{\n            title: '创新性',\n            dataIndex: 'itemB'\n        },{\n            title: '美观性',\n            dataIndex: 'itemC'\n        },{\n            title: '系列性',\n            dataIndex: 'itemD'\n        },{\n            title: '工业性',\n            dataIndex: 'itemE'\n        },{\n            title: '商业价值',\n            dataIndex: 'itemF'\n        },{\n            title: '评委评分个数',\n            dataIndex: 'reviewCount'\n        },{\n            title: '总分',\n            dataIndex: 'sum'\n        },{\n            title: '操作',\n            dataIndex: 'opr',\n            fixed: 'right',\n            render: (text, record) => {\n                return (\n                    <Space split={<Divider type=\"vertical\" />} >  \n                        <span className='operation'>\n                            <Link to={`/admin/manage/${record.id}/score`}>\n                                查看详情\n                            </Link >\n                        </span>\n                    </Space>\n                )\n            }\n        }]\n    \n        return columns\n    \n    }, [])\n} \n\nexport default useColumns","import {message} from 'antd'\n\nconst isBlob = target => {\n\tif (Object.prototype.toString.call(target) == '[object Blob]') {\n\t\treturn true\n\t}\n\treturn false\n}\n\n\nexport default class DownloadService {\n    donwloadfn (response, name) {\n        const aTag: any = document.createElement(\"a\")\n        if (!isBlob(response)) {\n            return message.warn('文件格式不对')\n        }\n        const url = window.URL.createObjectURL(response)\n        document.body.appendChild(aTag)\n        aTag.style = \"display: none\"\n        aTag.href = url\n        aTag.download = name\n        aTag.click()\n        window.URL.revokeObjectURL(url)\n        document.body.removeChild(aTag)\n    }\n}","import React  from \"react\";\nimport { Table, Space, Select, Button, message, PageHeader, Card } from 'antd'\nimport useColumns from './useColumns'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { isEmpty, get } from 'lodash'\nimport { useImmer }  from '@friday/immer'\nimport DownloadService from 'src/services/downloadService'\n\n\n\nconst Index = () => {\n\n    const apis = useApiSelector()\n\n    const gatList = (arr, filterObj) => {\n        if (isEmpty(arr)) return []\n        return arr.filter(item => {\n            return filterObj.productType ? item.productType  == filterObj.productType : true\n        })\n\n    }\n\n    const [state, setState] = useImmer({\n        scoring:true,\n        productType: '',\n        entryDirection: ''\n    })\n\n    const {dataArray, isValidating, revalidate} = useRequest(apis.admin.manageList({type: 1}))\n\n    const list = gatList(dataArray, state)\n\n    const columns = useColumns(revalidate)\n\n    const download = async () => {\n        const { responseBlob } = await dispatchAsync(apis.admin.manageListDownload({}))\n        const downInstance = new DownloadService()\n        downInstance.donwloadfn(responseBlob, '洪合杯-已评分列表.xls')\n        message.success('导出成功')\n    }\n\n\n\n    return (\n        <div>\n            <PageHeader \n                title='已评分作品'\n                ghost={false}\n                className='mg-b-10'\n            />\n            <Card hoverable>\n                <div className='clearfix mg-b-20'>\n                    <Space>\n                        {/* <div>\n                            参赛类别：\n                            <Select style={{width: '140px'}} \n                                allowClear \n                                placeholder='请选择参赛类别' \n                                onChange={(e) => setState(dart => { dart.entryDirection = e as any })}\n                            >\n                                <Select.Option value={'系列服装类'}>系列服装类</Select.Option >\n                                <Select.Option value={'经典套装类'}>经典套装类</Select.Option >\n                                <Select.Option value={'毛衫文化品牌类'}>毛衫文化品牌类</Select.Option >\n                            </Select>\n                        </div> */}\n                        <div>\n                            参赛组别： \n                            <Select style={{width: '140px'}} allowClear placeholder='请选择参赛方向' onChange={(e) => setState(draft => { draft.productType = e as any })}>\n                                <Select.Option value={'个人组'}>个人组</Select.Option>\n                                <Select.Option value={'团体组'}>团体组</Select.Option>\n                                <Select.Option value={'企业组'}>企业组</Select.Option>\n                            </Select>\n                        </div>\n                    </Space>\n                    <div className='fr'>\n                        <Button onClick={download}>导出列表</Button>\n                    </div>\n                </div>\n                <Table \n                    columns={columns as any}\n                    dataSource={list}\n                    scroll={{\n                        x: 'max-content'\n                    }}\n                    loading={isValidating}\n                    rowKey={'id'}\n                />\n            </Card>\n        </div>\n    )\n}\n\nexport default Index","import React from \"react\";\nimport { Divider, Space, Popover } from 'antd'\nimport { Link } from '@friday/router'\nimport { get } from 'lodash'\nimport { useConfiguration } from '@friday/core'\n\n\nconst useColumns = () => {\n\n    const { publicUrl } = useConfiguration()\n\n    return React.useMemo(() => {\n        const columns = [{\n            title: '参赛作品编号',\n            dataIndex: 'id'\n        }, \n        // {\n        //     title: '缩略图',\n        //     dataIndex: 'productPics',\n        //     width: '150px',\n        //     render: (txt) => {\n        //         const imgUrl = get(eval(txt), '[0]')\n        //         const img =  publicUrl.OPEN_IMG_URL + imgUrl\n        //         return (\n        //             <div className='m-img-thumbs'>\n        //                 <Popover content={<img src={img} />}>\n        //                     <img src={img} />\n        //                 </Popover>\n        //             </div>\n        //         )\n        //     }\n        // }, \n        {\n            title: '参赛组别',\n            dataIndex: 'productType'\n        }, {\n            title: '参赛者姓名',\n            dataIndex: 'name'\n        }, {\n            title: '参赛作品名称',\n            dataIndex: 'productName'\n        }, {\n            title: '原创性',\n            dataIndex: 'itemA'\n        },{\n            title: '创新性',\n            dataIndex: 'itemB'\n        },{\n            title: '美观性',\n            dataIndex: 'itemC'\n        },{\n            title: '系列性',\n            dataIndex: 'itemD'\n        },{\n            title: '工业性',\n            dataIndex: 'itemE'\n        },{\n            title: '商业价值',\n            dataIndex: 'itemF'\n        },{\n            title: '评委评分个数',\n            dataIndex: 'reviewCount'\n        },{\n            title: '总分',\n            dataIndex: 'sum'\n        }]\n    \n        return columns\n    \n    }, [])\n} \n\nexport default useColumns","import React  from \"react\";\nimport { Table, Space, Select, PageHeader, Card } from 'antd'\nimport useColumns from './useColumns'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { isEmpty, get } from 'lodash'\nimport { useImmer }  from '@friday/immer'\n\n\n\nconst Index = () => {\n\n    const apis = useApiSelector()\n\n    const columns = useColumns()\n\n    const gatList = (arr, filterObj) => {\n        if (isEmpty(arr)) return []\n        return arr.filter(item => {\n            return filterObj.productType ? item.productType  == filterObj.productType : true\n        })\n\n    }\n\n    const [state, setState] = useImmer({\n        scoring:false,\n        productType: '',\n        entryDirection: ''\n    })\n\n    const {dataArray, isValidating} = useRequest(apis.admin.manageList({type: 0}))\n\n    const list = gatList(dataArray, state)\n\n\n\n    return (\n        <div>\n            <PageHeader \n                title='未评分作品'\n                ghost={false}\n                className='mg-b-10'\n            />\n            <Card hoverable>\n                <div className='clearfix mg-b-20'>\n                    <Space>\n                        {/* <div>\n                            参赛类别：\n                            <Select style={{width: '140px'}} \n                                allowClear \n                                placeholder='请选择参赛类别' \n                                onChange={(e) => setState(dart => { dart.entryDirection = e as any })}\n                            >\n                                <Select.Option value={'系列服装类'}>系列服装类</Select.Option >\n                                <Select.Option value={'经典套装类'}>经典套装类</Select.Option >\n                                <Select.Option value={'毛衫文化品牌类'}>毛衫文化品牌类</Select.Option >\n                            </Select>\n                        </div> */}\n                        <div>\n                            参赛组别： \n                            <Select style={{width: '140px'}} allowClear placeholder='请选择参赛组别' onChange={(e) => setState(draft => { draft.productType = e as any })}>\n                                <Select.Option value={'个人组'}>个人组</Select.Option>\n                                <Select.Option value={'团体组'}>团体组</Select.Option>\n                                <Select.Option value={'企业组'}>企业组</Select.Option>\n                            </Select>\n                        </div>\n                    </Space>\n                </div>\n                <Table \n                    columns={columns as any}\n                    dataSource={list}\n                    scroll={{\n                        x: 'max-content'\n                    }}\n                    loading={isValidating}\n                    rowKey={'id'}\n                />\n            </Card>\n        </div>\n    )\n}\n\nexport default Index","import React from 'react'\nimport { message, Table, PageHeader, Card} from 'antd'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { useParams, useHistory } from '@friday/router'\n\nconst columns = [{\n    title: '评委id',\n    dataIndex: 'userId'\n}, {\n    title: '评委名称',\n    dataIndex: 'reviewUserName'\n},{\n    title: '作品id',\n    dataIndex: 'signupId'\n},{\n    title: '原创性',\n    dataIndex: 'itemA'\n},{\n    title: '创新性',\n    dataIndex: 'itemB'\n},{\n    title: '美观性',\n    dataIndex: 'itemC'\n},{\n    title: '系列性',\n    dataIndex: 'itemD'\n},{\n    title: '工业性',\n    dataIndex: 'itemE'\n},{\n    title: '商业价值',\n    dataIndex: 'itemF'\n},{\n    title: '总分',\n    dataIndex: 'sum'\n},{\n    title: '是否保存',\n    dataIndex: 'save',\n    render: (text) => {\n        if (text == 0) return '已保存'\n        if (text == 1) return '已提交'\n        return ''\n    }\n}]\n\n\nconst Index = () => {\n    const apis = useApiSelector()\n    \n    const history =useHistory()\n    const { id } = useParams() as any\n\n    const { dataArray } = useRequest(apis.admin.manageInfo({id}))\n\n    return (\n        <div>\n            <PageHeader \n                title='评分详情'\n                ghost={false}\n                className='mg-b-10'\n                onBack={() => history.goBack()}\n            />\n            <Card hoverable>\n                <Table \n                    columns={columns}\n                    dataSource={dataArray}\n                    scroll={{\n                        x: 'max-content'\n                    }}\n                />\n            </Card>\n        </div>\n    )\n}\n\nexport default Index\n","import React, { Suspense } from 'react' \nimport { Route, useScrollTop, useRouteMatch } from '@friday/router'\n\nimport BaseLayout from './BaseLayout'\nimport ReviewHas from '../review/has'\nimport ReviewTreat from '../review/treat'\n\nimport ManageHas from '../manage/has'\nimport ManageTreat from '../manage/treat'\n\nimport Review from '../review/index'\nimport Manage from '../manage/index'\n\nconst PrimaryRoutes = () => {\n    const match = useRouteMatch()\n    useScrollTop()\n    console.log(`${match.path}/reviewhas`)\n    return (\n        <BaseLayout>\n            <Route path={`${match.path}/reviewhas`} exact component={ReviewHas} />\n            <Route path={`${match.path}/reviewtreat`} exact  component={ReviewTreat} />\n            <Route path={`${match.path}/review/:id/:type`} exact component={Review} />\n            <Route path={`${match.path}/managehas`} component={ManageHas} />\n            <Route path={`${match.path}/managetreat`} component={ManageTreat} />\n            <Route path={`${match.path}/manage/:id/:type`} exact component={Manage} />\n        </BaseLayout>\n    )\n}\n\nexport default PrimaryRoutes","import React from 'react'\nimport { Switch, Route, useRouteMatch } from '@friday/router'\nimport Login from './auth/Login'\nimport PrivateRoute from './PrivateRoute'\nimport PrimaryRouter from './layouts/PrimaryRouter'\n\nconst ModuleRouter = () => {\n\tconst match = useRouteMatch()\n    return (\n\t\t<Switch>\n            <Route path={`${match.path}/:type/login`} exact component={Login} />\n            <PrivateRoute path={`${match.path}`} component={PrimaryRouter} />\n        </Switch>\n    )\n}\n\nexport default ModuleRouter","import React, {useEffect} from 'react'\nimport { Form, Input, Button, Row, Col, message} from 'antd'\nimport { Link } from '@friday/router'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\nimport { useHistory } from '@friday/router'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport { dispatchAsync } from '@friday/async'\nimport TokenService from 'src/services/tokenService'\nimport './index.less'\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n\n    const apis = useApiSelector()\n\n    const {dispatchUserInfo} = useUserInfo()\n    \n    const history = useHistory()\n\n    useEffect(() => {\n\t\tTokenService.clear()\n\t}, [])\n\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const respone = await dispatchAsync(apis.user.login(values)) as any\n        if (respone.error) return \n        TokenService.set(respone?.token.token)\n        dispatchUserInfo(respone.dataJson)\n        const { complete } = respone.dataJson\n        if (complete) {\n            message.success('登录成功')\n            history.push('/user/info')\n        } else {\n            message.warning('请完善个人信息')\n            history.push('/user/info/edit')\n        }\n    } \n\n    return (\n        <div className='m-login'>\n            <div className='m-login-header'>\n                <a href='/'>洪合杯</a>\n            </div>\n            <div className='m-login-content'>\n                <div className='m-login-main'>\n                    <h3 className='m-title'>登录</h3>\n                    <Form form={form}\n                        onFinish={onFinish}\n                        layout=\"vertical\"\n                    >\n                        <FormItem \n                            label='手机号' \n                            name='username'\n                            rules={[{\n                                required: true, \n                                message: '请输入正确的手机号', \n                                pattern: /^1[3456789]\\d{9}$/\n                            }]}\n                        >\n                            <Input  placeholder=\"请输入手机号\" size='middle' />\n                        </FormItem>\n                        <FormItem \n                            label='密码' \n                            name='password' \n                            rules={[{required: true, message: '请输入密码'}]}\n                        >\n                            <Input \n                                type=\"password\" \n                                placeholder=\"请输入密码\" \n                                size='middle' \n                            />\n                        </FormItem>\n                        <Form.Item>\n                            <Button\n                                className=\"login-form-button\"\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                size='middle'\n                                block\n                            >\n                                登录\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                    <div className='tc  mg-b-20' style={{fontSize: '12px'}}>\n                        <Link to='/user/reset' className='grey'>\n                            忘记密码\n                        </Link>\n                    </div>\n                    <div className='tc grey mg-b-10' style={{fontSize: '12px'}}>还没有账号?</div>\n                    <div>\n                        <Button block >\n                            <Link to='/user/register' >\n                                注册\n                            </Link>\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Index","import React, { useState } from 'react'\nimport { Form, Input, Button, Row, Col, Radio, message, Cascader } from 'antd'\nimport { Link, useHistory  } from '@friday/router'\nimport { dispatchAsync } from '@friday/async'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport options from 'src/common/city.json'\nimport { omit } from 'lodash'\nimport './index.less'\n\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n    const apis = useApiSelector()\n\n    const [time, setTime] = useState(60)\n    const [isShowCode, setIsShowCode] = useState<boolean>(false)\n    const history = useHistory()\n\n    const sendCode = async () => {\n        const fileds = await form.validateFields(['phone'])\n        if (isShowCode) {\n            return \n        }\n        setIsShowCode(true)\n        const active = setInterval(() => {\n            setTime((preSecond) => {\n              if (preSecond <= 1) {\n                setIsShowCode(false)\n                clearInterval(active)\n                // 重置秒数\n                return 60\n              }\n              return preSecond - 1\n            })\n        }, 1000)\n        const { phone } = fileds\n        const { error, data } = await dispatchAsync(apis.user.sendCode({\n            phone,\n            type: 0\n        }))\n        if (error) return \n        message.success('发送成功')\n    }\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const respone = await dispatchAsync(apis.user.register({\n            ...omit(values, 'pw2'),\n        })) as any\n        if (respone.error) return \n        message.success('注册成功')\n        history.push('/user')\n    } \n\n    return (\n        <div className='m-login'>\n            <div className='m-login-header'>\n                合物创新-洪合杯\n            </div>\n            <div className='m-login-content'>\n                <div className='m-login-main'>\n                    <h3 className='m-title'>注册</h3>\n                    <Form form={form} \n                        labelCol={{ span: 5 }}\n                        onFinish={onFinish}\n                        layout=\"vertical\"\n                    >\n                        <FormItem \n                            name='phone' \n                            label='手机号' \n                            rules={[{required: true, message: '请输入正确的手机号！', pattern: /^1[3456789]\\d{9}$/ }]} \n                        >\n                            <Input placeholder=\"请输入手机号！\" size='middle' />  \n                        </FormItem>\n                        <FormItem \n                            name='code' \n                            label='验证码'\n                            rules={[{required: true, message: '请输入验证码'}]}\n                        >\n                            <Input  \n                                placeholder=\"请输入验证码！\" \n                                size='middle' \n                                maxLength={6}\n                                suffix={<a onClick={() => sendCode()}>\n                                  {isShowCode ? `${time}秒后重新发送` : '发送验证码'}\n                                </a>}\n                            />\n                        </FormItem>\n                        <FormItem \n                            name='password' \n                            label='密码' \n                            rules={[{required: true, message: '请输入密码', pattern: /[a-zA-Z]{6,20}$/}]}\n                        >\n                            <Input  type=\"password\" placeholder=\"请输入密码（6-20个字符）\" size='middle' />\n                        </FormItem>\n                        <FormItem \n                            name='pw2' \n                            label='确认密码' \n                            rules={[\n                                ({getFieldValue})=>({\n                                    validator(rule,value){\n                                        if(!value || getFieldValue('password') === value){\n                                            return Promise.resolve()\n                                        }\n                                        return Promise.reject(\"两次密码输入不一致\")\n                                    }\n                                })\n                            ]}\n                        >\n                            <Input type=\"password\" placeholder=\"请再次输入密码\" size='middle' />\n                        </FormItem>\n                        <Form.Item  wrapperCol={{span: 24}}>\n                            <Button\n                                className=\"login-form-button\"\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                size='middle'\n                                block\n                            >\n                                注册\n                            </Button>\n                        </Form.Item>\n                        <div className='tc  mg-b-20' style={{fontSize: '12px'}}>\n                            <Link to='/user/login' className='grey'>\n                                已有账号，直接登录\n                            </Link>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Index","import React, {useState} from 'react'\nimport { Form, Input, Button, Row, Col, message} from 'antd'\nimport { Link, useHistory  } from '@friday/router'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync } from '@friday/async'\nimport './index.less'\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n    const apis = useApiSelector()\n\n    const [time, setTime] = useState(60)\n    const [isShowCode, setIsShowCode] = useState<boolean>(false)\n    const history = useHistory()\n\n    const sendCode = async () => {\n        const fileds = await form.validateFields(['phone'])\n        if (isShowCode) {\n            return \n        }\n        setIsShowCode(true)\n        const active = setInterval(() => {\n            setTime((preSecond) => {\n              if (preSecond <= 1) {\n                setIsShowCode(false)\n                clearInterval(active)\n                // 重置秒数\n                return 60\n              }\n              return preSecond - 1\n            })\n        }, 1000)\n        const { phone } = fileds\n        const { error, data } = await dispatchAsync(apis.user.sendCode({\n            phone,\n            type: 1\n        }))\n        if (error) return\n        message.success('发送成功')\n    }\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const respone = await dispatchAsync(apis.user.reset(values)) as any\n        if (respone.error) return \n        message.success('重置成功')\n        history.push('/user/login')\n    } \n\n    return (\n        <div className='m-login'>\n            <div className='m-login-header'>\n                洪合杯\n            </div>\n            <div className='m-login-content'>\n                <div className='m-login-main'>\n                    <h3 className='m-title'>重设密码</h3>\n                    <Form \n                        form={form}\n                        labelCol={{ span: 5 }}\n                        onFinish={onFinish}\n                        layout=\"vertical\"\n                        \n                    >\n                        <FormItem \n                            name='phone' \n                            label='手机号'\n                            rules={[{\n                                required: true, \n                                message: '请输入正确的手机号', \n                                pattern: /^1[3456789]\\d{9}$/\n                            }]}\n                        >\n                            <Input  placeholder=\"请输入手机号\" size='middle' />\n                        </FormItem>\n                        <FormItem \n                            name='code' \n                            label='验证码'\n                            rules={[{required: true, message: '请输入验证码'}]}\n                        >\n                            <Input  \n                                placeholder=\"请输入验证码！\" \n                                size='middle' \n                                maxLength={6}\n                                suffix={<a onClick={() => sendCode()}>\n                                  {isShowCode ? `${time}秒后重新发送` : '发送验证码'}\n                                </a>}\n                            />\n                        </FormItem>\n                        <FormItem \n                            name='newPwd' \n                            label='新密码'\n                            rules={[{required: true, message: '请输入新密码', pattern: /[a-zA-Z]{6,20}$/}]}\n                        >\n                            <Input type=\"password\" placeholder=\"请输入新密码（6-20个字符）\" size='middle' />\n                        </FormItem>\n                        <Form.Item>\n                            <Row gutter={16}>\n                                <Col span={12}>\n                                    <Button block>\n                                        <Link to='/user/login'>取消</Link>\n                                    </Button>\n                                </Col>\n                                <Col span={12}>\n                                    <Button\n                                        className=\"login-form-button\"\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        size='middle'\n                                        block\n                                    >\n                                        确定\n                                    </Button>\n                                </Col>\n                            </Row>\n                            \n                        </Form.Item>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Index","import React, { useCallback } from 'react'\nimport { Redirect, Route, RouteComponentProps } from '@friday/router'\nimport TokenServeice from 'src/services/tokenService'\nimport useUserInfo from 'src/hooks/useUserInfo'\nimport LodingCom from 'src/pages/layouts/LodingCom'\nimport { isEmpty } from 'lodash'\n\nconst PrimaryLayout: React.FC<any> = ({ children, ...rest}) => {\n\n    const { userInfo, fetchUserInfo } = useUserInfo()\n    const renderFn = useCallback((renderProps: RouteComponentProps<any>) => {\n        \n        const { component: Component } = rest\n        if (!TokenServeice.isAuthenticated()) {\n            return (\n                <Redirect\n                    to={`/user/login?path=${location.pathname}`}\n                />\n            )\n        }\n        if (!isEmpty(userInfo)) {\n           \n            if (!Component) {\n                return null\n            }\n            return <Component {...renderProps} />\n        }\n        \n        fetchUserInfo()\n        return (<LodingCom />)\n        // return <Component {...renderProps} />\n    }, [ userInfo ])\n    \n    return (\n        <Route {...rest} component={renderFn} />\n    )\n}\n\nexport default PrimaryLayout","import React from 'react'\nimport { Layout, Menu } from 'antd'\nimport { UploadOutlined, UserOutlined, VideoCameraOutlined, LogoutOutlined, EyeInvisibleOutlined } from '@ant-design/icons'\nimport { Link } from '@friday/router'\nimport { useUserInfo } from 'src/hooks'\nimport { useLocation } from '@friday/router'\n\nconst { Header, Content, Footer, Sider } = Layout\n\nimport './index.less'\n\n\nconst Index = ({children}) => {\n\n    const { pathname } = useLocation()\n\n    const { userInfo } = useUserInfo()\n    \n\n    const getkeys = () => {\n        if (pathname.indexOf('product') > -1) return '2'\n        if (pathname.indexOf('info') > -1) return '3'\n        if (pathname.indexOf('password') > -1) return '4'\n        return '2'\n    }\n\n    return (\n        <Layout className='components-layout-demo-responsive'>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    console.log(collapsed, type);\n                }}\n            >\n                <div className=\"m-logo\" />\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[getkeys()]}>\n                    {(userInfo as any).complete &&\n                        <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n                            <Link to='/user/product'> \n                                作品列表\n                            </Link>\n                        </Menu.Item>\n                    }\n                    <Menu.Item key=\"3\" icon={<UserOutlined />}>\n                        <Link to='/user/info'> \n                            个人信息\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"4\" icon={<EyeInvisibleOutlined />}>\n                        <Link to='/user/password'> \n                        修改密码\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"5\" icon={<LogoutOutlined />}>\n                        <Link to='/user/login'> \n                        退出登录\n                        </Link>\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n            <Layout style={{minHeight: '100vh' }}>\n                <Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }} />\n                <Content style={{ margin: '16px 16px 0', minWidth: 328 }} >\n                    <div className=\"site-layout-background\" style={{ minHeight: 360 }}>\n                        {children}\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>洪合杯 ©2021 Created by front </Footer>\n            </Layout>\n        </Layout>)\n}\n\nexport default Index ","import React from 'react'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport { Button, Descriptions, PageHeader, Card } from 'antd'\nimport { useRequest } from '@friday/async'\nimport { Link } from '@friday/router'\n\nconst Index = () => {\n\n    const apis = useApiSelector()\n\n    const { dataJson } = useRequest(apis.user.fetchUserInfo({}))\n\n    console.log(dataJson, 'dataJson')\n\n    const { name, email, address, contact} = dataJson\n\n\n    return (\n        <div>\n            <PageHeader \n                title='个人信息'\n                ghost={false}\n                className='mg-b-10'\n                extra={<Button type='primary'><Link to='/user/info/edit'>修改个人信息</Link></Button>}\n            />\n            <Card>\n                <Descriptions title={name}  column={1}>\n                    <Descriptions.Item label='邮箱地址'>{email}</Descriptions.Item>\n                    <Descriptions.Item label='通讯地址'>{address}</Descriptions.Item>\n                    <Descriptions.Item label='联系方式'>{contact}</Descriptions.Item>\n                </Descriptions>\n            </Card>\n        </div>\n    )\n}\n\nexport default Index","import React  from \"react\";\nimport { Table, Button, PageHeader, Card } from 'antd'\nimport useColumns from './useColumns'\nimport { Link } from '@friday/router'\nimport { useApiSelector } from 'src/hooks'\nimport { useConfiguration } from '@friday/core'\nimport { dispatchAsync, useRequest } from '@friday/async'\n\n\nconst Index = () => {\n\n    const apis = useApiSelector()\n\n    const { publicUrl } = useConfiguration()\n\n\n    const {dataArray, isValidating, revalidate} = useRequest(apis.user.productList({}))\n\n    const columns = useColumns(publicUrl, revalidate)\n\n\n    return (\n        <div>\n             <PageHeader \n                title='作品列表'\n                ghost={false}\n                className='mg-b-10'\n            />\n            <Card hoverable>\n            <div className='mg-b-20'>\n                <Button type='primary'><Link to='/user/product/add' >添加作品</Link></Button>\n            </div>\n\n            <Table \n                columns={columns as any}\n                dataSource={dataArray}\n                loading={isValidating}\n                rowKey='id'\n                scroll={{\n                    x: 'max-content'\n                }}\n            />\n            </Card>\n        </div>\n    )\n}\n\nexport default Index","import React, { useState } from 'react'\nimport { Upload } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { useConfiguration } from '@friday/core'\nimport tokenInstance from 'src/services/tokenService'\nimport { get } from 'lodash'\n\nconst Qrcode = (props) => {\n\n    const { fileList = [], onChange, tips = '上传格式jpg、png、jpeg，大小不超过2M', title='上传图片'  } = props\n\n    const [uploadFileList, setUploadFilelist] = useState<any[]>([])\n\n    const { publicUrl } = useConfiguration()\n\n    const triggerChange = changedValue => {\n        if (onChange) {\n            onChange({ uploadFileList, ...fileList, ...changedValue })\n        }\n    }\n\n    const onUploadChange = ({ fileList }) => {\n        setUploadFilelist(fileList)\n        triggerChange({ fileList })\n    }\n\n    const fileLists = fileList || uploadFileList\n\n    const uploadprops = {\n        name: 'picFile',\n        action: publicUrl.OPEN_API_URL + '/file/upload',\n        accept: 'image/jpeg,image/png,image/jpg',\n        headers: {\n            token: tokenInstance.get() as string\n        },\n        onChange: onUploadChange,\n        fileList: fileLists,\n    }\n\n\n    return (\n        <div>\n            <div className='clearfix'>\n                <Upload\n                    listType=\"picture-card\"\n                    className=\"m-avatar-uploader\"\n                    {...uploadprops}\n                >\n                    \n                    <div>\n                        <PlusOutlined />\n                        <div style={{ marginTop: 8 }}>{title}</div>\n                    </div>\n                </Upload>\n            </div>\n            <div style={{ fontSize: '10px', color: '#999', marginTop: 10 }} >{tips}</div>\n        </div>\n    )\n}\n\nexport default Qrcode","import React, { useState } from 'react'\nimport { Upload, Button } from 'antd'\nimport { PlusOutlined, UploadOutlined } from '@ant-design/icons'\nimport { useConfiguration } from '@friday/core'\nimport tokenInstance from 'src/services/tokenService'\nimport { get } from 'lodash'\n\nconst Qrcode = (props) => {\n\n    const { fileList = [], onChange, tips = '上传格式jpg、png、jpeg，大小不超过2M', title='上传图片'  } = props\n\n    const [uploadFileList, setUploadFilelist] = useState<any[]>([])\n\n    const { publicUrl } = useConfiguration()\n\n    const triggerChange = changedValue => {\n        if (onChange) {\n            onChange({ uploadFileList, ...fileList, ...changedValue })\n        }\n    }\n\n    const onUploadChange = ({ fileList }) => {\n        setUploadFilelist(fileList)\n        triggerChange({ fileList })\n    }\n\n    const fileLists = fileList || uploadFileList\n\n    const uploadprops = {\n        name: 'picFile',\n        action: publicUrl.OPEN_API_URL + '/file/upload',\n        accept: 'video/mp4',\n        headers: {\n            token: tokenInstance.get() as string\n        },\n        onChange: onUploadChange,\n        fileList: fileLists,\n    }\n\n\n    return (\n        <div>\n            <div className='clearfix'>\n                <Upload\n                    listType='picture'\n                    className=\"m-avatar-uploader\"\n                    {...uploadprops}\n                >\n                    \n                    <Button icon={<UploadOutlined />}>{title}</Button>\n                </Upload>\n            </div>\n            <div style={{ fontSize: '10px', color: '#999', marginTop: 10 }} >{tips}</div>\n        </div>\n    )\n}\n\nexport default Qrcode","import React  from \"react\";\nimport { Form, Input, Row, Col, Radio, Button, DatePicker, Cascader, message, PageHeader, Card} from 'antd'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { useHistory, useParams } from '@friday/router'\nimport UploadImg from './UploadImg'\nimport UploadVideo from './UploadVideo'\nimport { isEmpty, get } from 'lodash'\nimport { useConfiguration } from '@friday/core'\n\n\nconst FormItem = Form.Item\n\nconst normFile = (e: any) => {\n    if (Array.isArray(e)) {\n        return e;\n    }\n    return e && e.fileList\n}\n\nconst getUpload = (uploadResponse) => {\n    // 没图片\n    if (isEmpty(uploadResponse)) return ''\n    return uploadResponse.map(item => {\n        return get(item, 'response.filePath') || ''\n    })\n}   \n\nconst transformUpload = (path=[], prefix) => {\n    if (isEmpty(path)) return ''\n    return path.map(item => {\n        return {\n            response: {\n                data: {\n                    path: item\n                },\n                filePath: item\n            },\n            status: \"done\",\n            thumbUrl: prefix + item\n        }\n    })\n}\n\n\nconst Index = () => {\n    const apis = useApiSelector()\n\n    const [ form ] = Form.useForm()\n\n    const { id = 0 } = useParams() as any\n\n    const { dataJson } = useRequest(id ? apis.user.productInfo({id}): null)\n\n    const { publicUrl } = useConfiguration()\n\n    React.useEffect(() => {\n        if (!isEmpty(dataJson)) {\n            const {productPics, productVideos} = dataJson\n            console.log(typeof productPics)\n            const payload = {\n                ...dataJson,\n                productPics: transformUpload(JSON.parse(productPics), publicUrl.OPEN_IMG_URL),\n                productVideos: transformUpload(JSON.parse(productVideos), publicUrl.OPEN_IMG_URL),\n            }\n            form.setFieldsValue(payload)\n        }\n    }, [dataJson])\n\n    const history = useHistory()\n\n    \n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const {productPics, productVideos} = values\n        const respone = await dispatchAsync(apis.user.addProduct({\n            ...values,\n            productPics: JSON.stringify(getUpload(productPics)),\n            productVideos: JSON.stringify(getUpload(productVideos)),\n            id\n        })) as any\n        \n        if (respone.error) return \n        message.success(id ? '编辑成功':'添加成功')\n        history.goBack()\n    }\n\n    return (\n        <div>\n            <PageHeader \n                title={id ? '编辑作品': '添加作品'}\n                ghost={false}\n                className='mg-b-10'\n                onBack={() => history.goBack()}\n            />\n            <Card hoverable>\n            <Form \n                form={form}\n                labelCol={{\n                    xs:24,\n                    md:6\n                }}\n                wrapperCol={{\n                    xs: 24,\n                    md: 14\n                }}\n                onFinish={onFinish}\n            >\n                <FormItem\n                    label={'参赛类别'}\n                    rules={[{required: true, message: '请选择参赛类别'}]}\n                    name='productType'\n                    className='pd-t-20'\n                >\n                    <Radio.Group>\n                        <Radio value={'个人组'}>个人组</Radio>\n                        <Radio value={'团体组'}>团体组</Radio>\n                        <Radio value={'企业组'}>企业组</Radio>\n                    </Radio.Group>\n                </FormItem>\n\n                <FormItem\n                    label={'参赛方向'}\n                    rules={[{required: true, message: '请选择参赛方向'}]}\n                    name='entryDirection'\n                >\n                    <Radio.Group>\n                        <Radio value={'系列服装类'}>系列服装类</Radio>\n                        <Radio value={'经典套装类'}>经典套装类</Radio>\n                        <Radio value={'毛衫文化品牌类'}>毛衫文化品牌类</Radio>\n                    </Radio.Group>\n                </FormItem>\n\n             \n                <FormItem\n                    label={'作品名称(中文)'}\n                    rules={[{required: true, message: '请输入作品名称(中文)'}]}\n                    name='productName'\n                >\n                    <Input placeholder='请输入作品名称(中文)' />\n                </FormItem>\n                <FormItem\n                    label={'作品名称(英文)'}\n                    rules={[{required: true, message: '请输入作品名称(英文)'}]}\n                    name='productNameEn'\n                >\n                    <Input placeholder='请输入作品名称(英文)' />\n                </FormItem>\n                <FormItem\n                    label={'指导教师'}\n                    rules={[{required: false, message: '请输入指导教师'}]}\n                    name='recommendName'\n                >\n                    <Input placeholder='请输入指导教师' />\n                </FormItem>\n\n                <FormItem\n                    label={'作品图片'}\n                    rules={[{required: true,\n                        validator: (_, value) => {\n                            if (isEmpty(value)) return Promise.reject('请上传作品图片');\n                            let isCheckSize = false\n                            value.some(item => {\n                                const size = get(item, 'originFileObj.size')\n                                const sizeM = size/1024/1024\n                                if (sizeM > 2) {\n                                    isCheckSize = true\n                                    return true\n                                }\n                            })\n                            if (isCheckSize) {\n                                return Promise.reject('请上传小于2m的图片');\n                            }\n                            return Promise.resolve();\n                        }}\n                    ]}\n                    name='productPics'\n                    valuePropName=\"fileList\"\n                    getValueFromEvent={normFile}\n                >\n                    <UploadImg title='上传图片' tips='上传格式jpg、png、jpeg，大小不超过2M，A3尺寸，分辨率300dpi，一套作品2-3张图片' />\n                </FormItem>\n                <FormItem\n                    label={'作品视频'}\n                    rules={[{required: false, validator: (_, value) => {\n                        if (isEmpty(value)) return Promise.reject('请上传作品视频');\n                        let isCheckSize = false\n                        value.some(item => {\n                            const size = get(item, 'originFileObj.size')\n                            const sizeM = size/1024/1024\n                            if (sizeM > 10) {\n                                isCheckSize = true\n                                return true\n                            }\n                        })\n                        if (isCheckSize) {\n                            return Promise.reject('请上传小于10m的视频');\n                        }\n                        return Promise.resolve();\n                    }}]}\n                    name='productVideos'\n                    valuePropName=\"fileList\"\n                    getValueFromEvent={normFile}\n                >\n                    <UploadVideo title='上传视频' tips='请上传小于10m的视频' />\n                </FormItem>\n                <FormItem\n                    label={'设计主题及作品说明(中文)'}\n                    rules={[{required: false, message: '请输入设计主题及作品说明(中文)'}]}\n                    name='productDesc'\n                >\n                   围绕作品的创作灵感，分别阐述作品的原创性、文化特征、数字化设计、工艺特点、市场竞争力（每条不超过150字）\n                </FormItem>\n                <FormItem\n                    label={'原创性'}\n                    rules={[{required: true, message: '请输入原创性', max: 150}]}\n                    name='explainA'\n                >\n                    <Input.TextArea placeholder='请输入原创性' rows={3} />\n                </FormItem>\n                <FormItem\n                    label={'文化特性'}\n                    rules={[{required: true, message: '请输入文化特性', max: 150}]}\n                    name='explainB'\n                >\n                    <Input.TextArea placeholder='请输入文化特性' rows={3} />\n                </FormItem>\n                <FormItem\n                    label={'数字化设计'}\n                    rules={[{required: true, message: '请输入数字化设计', max: 150}]}\n                    name='explainC'\n                >\n                    <Input.TextArea placeholder='请输入数字化设计' rows={3}/>\n                </FormItem>\n                <FormItem\n                    label={'工艺特点'}\n                    rules={[{required: true, message: '请输入工艺特点', max: 150}]}\n                    name='explainD'\n                >\n                    <Input.TextArea placeholder='请输入工艺特点' rows={3}/>\n                </FormItem>\n                <FormItem\n                    label={'市场竞争力'}\n                    rules={[{required: true, message: '请输入市场竞争力', max: 150}]}\n                    name='explainE'\n                >\n                    <Input.TextArea placeholder='请输入市场竞争力' rows={3} />\n                </FormItem>\n                <FormItem\n                    label={'设计主题及作品说明(英文)'}\n                    rules={[{required: false, message: '请输入设计主题及作品说明(英文)'}]}\n                    name='productDescEn'\n                >\n                    <Input.TextArea placeholder='请输入设计主题及作品说明(英文)' rows={5} />\n                </FormItem>\n                <div className='tc' style={{width: '300px', margin: '0 auto'}}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size='middle'\n                        block\n                    >\n                        保存\n                    </Button>\n                </div>\n            </Form>\n            </Card>\n        </div>\n    )\n}\n\nexport default Index","import React from 'react'\nimport { Form, Input, Button, message, PageHeader, Card } from 'antd'\nimport { useApiSelector } from 'src/hooks'\nimport { dispatchAsync } from '@friday/async'\n\nconst FormItem = Form.Item\n\nconst Index = () => {\n    const [form] = Form.useForm()\n    const apis = useApiSelector()\n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const respone = await dispatchAsync(apis.user.updatePassword(values)) as any\n        if (respone.error) return \n        message.success('修改成功')\n    } \n    return (\n        <div>\n            <PageHeader \n                title='修改密码'\n                ghost={false}\n                className='mg-b-10'\n            />\n            <Card hoverable>\n            <Form\n                form={form}\n                labelCol={{xs: 6, md: 6}}\n                wrapperCol={{xs: 12, md: 12}}\n                onFinish={onFinish}\n            >\n                <FormItem name='phone' label='手机号'>\n                    <Input  placeholder=\"请输入您的手机号！\" size='middle' />\n                </FormItem>\n                <FormItem name='oldPwd' label='旧密码'>\n                    <Input  placeholder=\"请输入您的旧密码！\" type='password' size='middle' />\n                </FormItem>\n                <FormItem name='newPwd' label='新密码'>\n                    <Input  placeholder=\"请输入您的新密码！\" type='password' size='middle' />\n                </FormItem>\n                <div className='tc' style={{width: '328px', margin: '0 auto'}}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size='middle'\n                        block\n                    >\n                        保存\n                    </Button>\n                </div>\n            </Form>\n            </Card>\n        </div>\n    )\n}\n\nexport default Index","import React from 'react'\n\n\nconst Index = (props) => {\n    const {name, en , required} = props\n    return (\n        <div style={{position: 'relative'}}> \n            <span className='red' style={{fontFamily: 'SimSun, sans-serif'}}>{required ? '*' : ''}</span> {name} \n            <div style={{ fontSize: '10px', color: '#999'}}>{en}</div>\n        </div>\n    )\n}\n\nexport default Index","import React, { useState } from 'react'\nimport { Upload } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { useConfiguration } from '@friday/core'\nimport tokenInstance from 'src/services/tokenService'\nimport { get } from 'lodash'\n\nconst Qrcode = (props) => {\n\n    const { fileList = [], onChange, tips='', title='上传图片' } = props\n\n    const [uploadFileList, setUploadFilelist] = useState<any[]>([])\n\n    const { publicUrl } = useConfiguration()\n\n    const triggerChange = changedValue => {\n        if (onChange) {\n            onChange({ uploadFileList, ...fileList, ...changedValue })\n        }\n    }\n\n    const onUploadChange = ({ fileList }) => {\n        setUploadFilelist(fileList)\n        triggerChange({ fileList })\n    }\n\n    const fileLists = fileList || uploadFileList\n\n    const uploadprops = {\n        name: 'picFile',\n        action: publicUrl.OPEN_API_URL + '/file/upload',\n        accept: 'image/jpeg,image/png,image/jpg',\n        headers: {\n            token: tokenInstance.get() as string\n        },\n        onChange: onUploadChange,\n        fileList: fileLists,\n    }\n\n\n    return (\n        <div>\n            <div className='clearfix'>\n                <Upload\n                    listType=\"picture-card\"\n                    className=\"m-avatar-uploader\"\n                    {...uploadprops}\n                >\n                    {fileList.length > 0 ? null :\n                        <div>\n                            <PlusOutlined />\n                            <div style={{ marginTop: 8 }}>{title}</div>\n                        </div>\n                    }\n                </Upload>\n            </div>\n           {tips !='' && <div style={{ fontSize: '10px', color: '#999', marginTop: 10 }} >{tips}</div>}\n        </div>\n    )\n}\n\nexport default Qrcode","import React from 'react'\nimport { Form, Input, Row, Col, Radio, Button, DatePicker, Cascader, message, PageHeader, Card, Select} from 'antd'\nimport FormLabel from './FormLabel'\nimport options from 'src/common/city.json'\nimport AreaJson from 'src/common/area.json'\nimport UploadImg from './UploadImg'\nimport { useHistory } from '@friday/router'\nimport { useApiSelector, useUserInfo } from 'src/hooks'\nimport { useConfiguration } from '@friday/core'\nimport { dispatchAsync, useRequest } from '@friday/async'\nimport { omit, isEmpty, get, pick } from 'lodash'\nimport moment from 'moment'\nimport './index.less'\n\nconst FormItem = Form.Item\n\n\nconst normFile = (e: any) => {\n    if (Array.isArray(e)) {\n        return e;\n    }\n    return e && e.fileList\n}\n\nconst getUpload = (uploadResponse) => {\n    // 没图片\n    if (isEmpty(uploadResponse)) return  ''\n\n    return get(uploadResponse, '[0].response.filePath') || ''\n}   \n\nconst transformUpload = (path, prefix) => {\n\n    if (!path) return ''\n\n    return [{\n        response: {\n            data: {\n                path: path\n            },\n            filePath: path\n        },\n        status: \"done\",\n        thumbUrl: prefix + path\n    }]\n}\n\n\nconst Index = () => {\n\n    const [form] = Form.useForm()\n\n    const apis = useApiSelector()\n    \n    const history = useHistory()\n\n    const { publicUrl } = useConfiguration()\n\n    const { dataJson, revalidate } = useRequest(apis.user.fetchUserInfo({}))\n\n    const { dispatchUserInfo } = useUserInfo()\n\n    React.useEffect(() => {\n        if (!isEmpty(dataJson)) {\n            const {idcardBack, idcardFront, photo, province, city, county, birthday} = dataJson\n            const area = [province, city, county]\n            const payload = {\n                ...omit(dataJson, ['birthday','idcardBack', 'idcardFront', 'photo']),    \n                area,      \n                idcardBack: transformUpload(idcardBack, publicUrl.OPEN_IMG_URL),\n                idcardFront: transformUpload(idcardFront, publicUrl.OPEN_IMG_URL),\n                birthday: moment(birthday),\n                photo: transformUpload(photo, publicUrl.OPEN_IMG_URL),\n            }\n            console.log(payload, 'payload')\n            form.setFieldsValue(payload)\n        }\n    }, [dataJson]) \n    \n\n    const onFinish = async () => {\n        const values = await form.validateFields()\n        const { birthday, area, idcardBack, idcardFront, photo } = values\n        const [province, city, county] = area\n        const respone = await dispatchAsync(apis.user.completeInfo({\n            ...omit(values, ['birthday', 'area', 'idcardBack', 'idcardFront', 'photo']),\n            birthday: moment(birthday).format('YYYY-MM-DD'),\n            province,\n            city,\n            county,\n            idcardBack: getUpload(idcardBack),\n            idcardFront: getUpload(idcardFront),\n            photo: getUpload(photo)\n        })) as any\n        if (respone.error) return \n        message.success('更新成功')\n        dispatchUserInfo(respone.dataJson)\n        history.push('/user/info')\n        \n    } \n\n    return (\n        <div className='m-info'>\n            <PageHeader \n                title='完善个人信息'\n                ghost={false}\n                className='mg-b-10'\n                onBack={() => history.goBack()}\n            />\n            <Card hoverable>\n            <Form \n                form={form}\n                labelCol={{span: 7}}\n                onFinish={onFinish}\n                className='pd-t-20'\n            >\n                <Row gutter={16}>\n                    <Col span={12} xs={24} md={12}>\n                        <FormItem\n                            label={<FormLabel name='姓名' en='Name' required />}\n                            rules={[{\n                                required: true, \n                                message: '请输入姓名', \n                            }]}\n                            name='name'\n                        >\n                            <Input placeholder='请输入姓名'/>\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='性别' en='Gender' required />}\n                            rules={[{\n                                required: true, \n                                message: '请选择性别', \n                            }]}\n                            name='sex'\n                        >\n                            <Radio.Group>\n                                <Radio value={0}>男</Radio>\n                                <Radio value={1}>女</Radio>\n                            </Radio.Group>\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='照片' en='Photo' required />}\n                            rules={[{\n                                required: true, \n                                validator: (_, value) => {\n                                    if (isEmpty(value)) return Promise.reject('请上传图片');\n                                    const size = get(value, '[0].originFileObj.size')\n                                    const sizeM = size/1024/1024\n                                    if (sizeM > 2) {\n                                      return Promise.reject('请上传小于2m的图片');\n                                    }\n                                    return Promise.resolve();\n                                }\n                            }]}\n                            className='preview'\n                            valuePropName=\"fileList\"\n                            getValueFromEvent={normFile}\n                            name='photo'\n                            \n                        >\n                            <UploadImg tips = '上传格式jpg、png、jpeg，大小不超过2M的1寸免冠照'/>\n                        </FormItem>\n                    </Col>\n                    <Col span={12} xs={24} md={12}>\n                        <FormItem\n                            label={<FormLabel name='出生年/月/日' en='\bBirth date' required />}\n                            rules={[{\n                                required: true, \n                                message: '请选择出生年月日', \n                            }]}\n                            name='birthday'\n                        >\n                            <DatePicker style={{width: '100%'}} />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='身份证号码' en='\bID Card No.' required />}\n                            rules={[{\n                                required: true, \n                                message: '请输入身份证号码', \n                                \n                            }]}\n                            name='idcard'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='身份证照' en='\bID Card Copy' required />}\n                            className='m-info-card'\n                            style={{marginBottom: 0}}\n                        >\n                            <Row>\n                            <Col span={12}>\n                                <FormItem\n                                    name='idcardFront'\n                                    className='preview'\n                                    valuePropName=\"fileList\"\n                                    getValueFromEvent={normFile}\n                                    style={{marginBottom: 0}}\n                                    rules={[{\n                                        required: true, \n                                        validator: (_, value) => {\n                                            if (isEmpty(value)) return Promise.reject('请请上传身份证正面照');\n                                            const size = get(value, '[0].originFileObj.size')\n                                            const sizeM = size/1024/1024\n                                            if (sizeM > 2) {\n                                            return Promise.reject('请上传小于2m的图片');\n                                            }\n                                            return Promise.resolve();\n                                        }\n                                    }]}\n                                >\n                                    <UploadImg title='上传身份证正面照'/>\n                                </FormItem>\n                            </Col>\n                            <Col span={12}>\n                            <FormItem\n                                name='idcardBack'\n                                className='preview'\n                                valuePropName=\"fileList\"\n                                getValueFromEvent={normFile}\n                                style={{marginBottom: 0}}\n                                rules={[{\n                                    required: true, \n                                    validator: (_, value) => {\n                                        if (isEmpty(value)) return Promise.reject('请上传身份证反面照');\n                                        const size = get(value, '[0].originFileObj.size')\n                                        const sizeM = size/1024/1024\n                                        if (sizeM > 2) {\n                                        return Promise.reject('请上传小于2m的图片');\n                                        }\n                                        return Promise.resolve();\n                                    }\n                                }]}\n                            >\n                                <UploadImg  title='上传身份证反面照' />\n                            </FormItem>\n                            </Col>\n                            </Row>\n                            <div style={{ fontSize: '10px', color: '#999', marginTop: 10 }} >上传格式jpg、png、jpeg，大小不超过2M</div>\n                        </FormItem>\n                        \n                    </Col>\n                </Row>\n\n                <Row gutter={16} className='mg-t-20'>\n                    <Col span={12} xs={24} md={12}>\n                        <FormItem\n                            label={<FormLabel name='职业' en='\bOccupation' required />}\n                            name='profession'\n                            rules={[{\n                                required: true, \n                                message: '请输入职业', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='国籍' en='Nation' required />}\n                            name='nationality'\n                            rules={[{\n                                required: true, \n                                message: '请选择国籍', \n                            }]}\n                           \n                        >\n                            <Select  showSearch optionFilterProp=\"children\" >\n                                {AreaJson.map((item, index) => {\n                                    return (\n                                        <Select.OptGroup label={item.name} key={item.name+index}>\n                                            {item.children.map((j, k) => {\n                                                return <Select.Option  value={j.name} key={j.name+k} > {j.name}</Select.Option>\n                                            })}\n                                        </Select.OptGroup>\n                                    )\n                                })}\n                            </Select>\n                        </FormItem>\n                        <FormItem\n                            noStyle\n\t\t\t\t\t\t\tshouldUpdate={(prevValues, currentValues) => ( prevValues.nationality !== currentValues.nationality )}\n                        >\n                            {({ getFieldValue }) => {\n                                const open = getFieldValue('nationality')\n                                if (open != '中国') return\n                                return ( \n                                    <FormItem\n                                        label={<FormLabel name='籍贯' en='Native place' required />}\n                                        name='area'\n                                        rules={[{\n                                            required: true, \n                                            message: '请选择籍贯', \n                                        }]}\n                                    >\n                                        <Cascader  options={options} />\n                                    </FormItem>\n                                ) \n                            }}\n                            \n                        </FormItem>\n                      \n                        <FormItem\n                            label={<FormLabel name='院校名称' en='Educational background'  />}\n                            name='school'\n                            rules={[{\n                                required: false, \n                                message: '请输入院校名称', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='专业' en='specialty' required />}\n                            name='professional'\n                            rules={[{\n                                required: true, \n                                message: '请输入专业', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='学历' en='Education background'  />}\n                            name='education'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='工作单位' en='Company'   />}\n                            name='employer'\n                            rules={[{\n                                required: false, \n                                message: '请输入工作单位', \n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='QQ号' en='QQ'  />}\n                            name='qq'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='微信号' en='WeChat'  />}\n                            name='wechat'\n                            rules={[{\n                                required: false, \n                                message: '请输入微信号', \n                                pattern: /^[a-zA-Z][a-zA-Z\\d_-]{5,19}$/\n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='邮箱' en='E-mail' required />}\n                            name='email'\n                            rules={[{\n                                required: true, \n                                message: '请输入邮箱', \n                                type: 'email'\n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                    </Col>\n                    <Col span={12} xs={24} md={12} >\n                        <FormItem\n                            label={<FormLabel name='职务' en='Postion'  />}\n                            name='position'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='工作经历' en='Work experience'  />}\n                            name='workExperience'\n                        >\n                            <Input.TextArea rows={5}  />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='获奖经历' en='Award experience'  />}\n                            name='awardExperience'\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='通信地址' en='Address' required />}\n                            name='address'\n                            rules={[{\n                                required: true, \n                                message: '请输入通信地址', \n                            }]}\n                        >\n                            <Input.TextArea  rows={5}  />\n                        </FormItem>\n                        <FormItem\n                            label={<FormLabel name='联系方式' en='Contact' required />}\n                            name='contact'\n                            rules={[{\n                                required: true, \n                                message: '请输入联系方式', \n                                pattern: /^1[3456789]\\d{9}$/\n                            }]}\n                        >\n                            <Input />\n                        </FormItem>\n                    </Col>\n                </Row>\n                <div className='tc' style={{width: '300px', margin: '0 auto'}}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size='middle'\n                        block\n                    >\n                        保存\n                    </Button>\n                </div>\n            </Form>\n            </Card>\n        </div>\n    )\n}\n\nexport default Index\n","import React, { Suspense } from 'react' \nimport { Route, useScrollTop, useRouteMatch } from '@friday/router'\n\nimport BaseLayout from './BaseLayout'\nimport Info from '../info'\nimport ProductList from '../product'\nimport ProductAdd from '../product/AddProduct'\nimport PassWord from '../Password'\nimport EditInfo from '../info/EditInfo'\n\n\nconst PrimaryRoutes = () => {\n    const match = useRouteMatch()\n    useScrollTop()\n    return (\n        <BaseLayout>\n            <Route path={`${match.path}/password`} component={PassWord} />\n            <Route path={`${match.path}/info`} exact component={Info} />\n            <Route path={`${match.path}/info/edit`} exact component={EditInfo} />\n            <Route path={`${match.path}/product`} exact component={ProductList} />\n            <Route path={`${match.path}/product/add`} component={ProductAdd} />\n            <Route path={`${match.path}/product/edit/:id`} component={ProductAdd} />\n        </BaseLayout>\n    )\n}\n\nexport default PrimaryRoutes","import React from 'react'\nimport { Switch, Route, Redirect, useRouteMatch } from '@friday/router'\nimport Login from 'src/pages/user/auth/Login'\nimport Register from 'src/pages/user/auth/Register'\nimport Reset from 'src/pages/user/auth/Reset'\nimport PrivateRoute from './PrivateRoute'\nimport PrimaryRouter from './layouts/PrimaryRouter'\n\nconst ModuleRouter = () => {\n\tconst match = useRouteMatch()\n    return (\n\t\t<Switch>\n            <Route path={`${match.path}/login`} exact component={Login} />\n            <Route path={`${match.path}/register`} exact component={Register} />\n            <Route path={`${match.path}/Reset`} exact component={Reset} />\n            <PrivateRoute path={`${match.path}`} component={PrimaryRouter} />\n        </Switch>\n    )\n}\n\nexport default ModuleRouter","\nimport React from 'react'\nimport { Switch, Route, Router } from '@friday/router'\nimport Home from './pages/home'\nimport NotFound from 'src/pages/exception/NotFound'\nimport AdminRouter from 'src/pages/admin/ModuleRouter'\nimport userRouter from 'src/pages/user/ModuleRouter'\n\nimport 'src/styles/index.less'\n\nconst App = ({ history }) => {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/404\"  component={NotFound} />  \n        <Route path=\"/admin\" component={AdminRouter} />  \n        <Route path=\"/user\" component={userRouter} />  \n        <Route path='/' exact component={Home} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","\n\nexport const protocol = document.location.protocol\nexport const upstreams = {\n\tdevelopment: {\n\t\tOPEN_API_URL: '101.42.95.249:8088',\n\t},\n\tproduction: {\n\t\tOPEN_API_URL: '101.35.52.7:8088',\n\t}\n\n}\n\nexport enum BaseUrl {\n\tOPEN_API_URL = 'api',\n}\n","\n\nconst combineUrl = (upstream: string, baseName: string, ) => {\n\n\tif (!upstream) {\n\t\tthrow new Error(`ConfigError upstream is empty`)\n\t}\n\n\tif (baseName) return `${window.location.protocol}//${upstream}/${baseName}`\n\n\treturn `${window.location.protocol}//${upstream}`\n}\n\n\nexport default combineUrl","\nimport configuration_dev from './configuration.dev'\nimport configuration_pro from './configuration.pro'\n\n\nconst configurations = [\n\tconfiguration_dev,\n\tconfiguration_pro\n]\n\nexport default configurations","import { IConfiguration } from '@friday/core'\n\nimport { upstreams, BaseUrl } from './constants'\n\nimport combineUrl from './combineUrl'\n\nconst configuration: IConfiguration = {\n\twhiteHosts: [\n\t\t'localhost:3000',\n\t],\n\tpublicUrl: {\n\t\tOPEN_API_URL: combineUrl(upstreams.development.OPEN_API_URL, BaseUrl.OPEN_API_URL),\n\t\tOPEN_IMG_URL: combineUrl(upstreams.development.OPEN_API_URL, '')\n\t}\n}\n\nexport default configuration\n","import { IConfiguration } from '@friday/core'\nimport { upstreams, BaseUrl, protocol } from './constants'\nimport combineUrl from './combineUrl'\n\nconst configuration: IConfiguration = {\n\twhiteHosts: [\n\t\t'localhost:3009',\n\t\t'101.42.95.249:9005',\n\t\t'test.ruien.work',\n\t\t'test.ruien.work:9005',\n\t\t'101.35.52.7',\n\t],\n\tpublicUrl: {\n\t\tOPEN_API_URL: combineUrl(upstreams.production.OPEN_API_URL, BaseUrl.OPEN_API_URL),\n\t\tOPEN_IMG_URL: combineUrl(upstreams.production.OPEN_API_URL, '')\n\t}\n}\n\nexport default configuration\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport Friday from '@friday/core'\n\n// 如果是微服务中的slave 需要添加该文件在entry 入口上方\n// import '@friday/micro/lib/public-path'\n\nimport configurations from 'src/configurations'\n\n\nimport * as serviceWorker from 'src/serviceWorker'\n\nconst app = new Friday({\n    onInjectConfigBefore() {\n        console.log('onInjectConfigBefore hook')\n    },\n    onInjectConfigAfter() {\n        console.log('onInjectConfigAfter hook')\n    },\n    onInjectRouterAfter() {\n        console.log('onInjectConfigAfter hook')\n    },\n    onStarted(configuration) {\n        console.log('onInjectConfigAfter hook')\n    }\n})\n\n// 注入配置\napp.injectConfigurations(configurations)\n\n// api 模块插件\napp.use(require('./middleware').default)\n\n// 注入路由\napp.injectRouters(require('./App').default)\n\n// 启动器\napp.start('#root')\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n","\nimport { getConfiguration } from '@friday/core'\nimport { httpAxios, request_middleware } from '@friday/async'\nimport TokenService from 'src/services/tokenService'\nimport { message } from 'antd'\nimport { debounce, get, includes } from 'lodash'\n\nconst { publicUrl, history } = getConfiguration()\n\nexport const axiosConifg = {\n\tbaseURL: publicUrl.OPEN_API_URL,\n\ttimeout: 20000,\n\theaders: {\n\t\t'Accept': 'application/json;charset=utf-8',\n\t\t'Content-Type': 'application/json;charset=utf-8',\n\t}\n}\n\nconst errorNotice = debounce((text, response?) => {\n\tmessage.error(text)\n\t// sentry 上报\n}, 500)\n\nconst AUTH_PATH = '/'\n\nexport const isApiTimeout = (error): boolean => {\n\treturn error.code === 'ECONNABORTED' && error.message.indexOf('timeout') !== -1\n}\n\nexport const isNetworkError = (error): boolean => {\n\treturn error.message === 'Network Error'\n}\n\nconst redirect = debounce(() => {\n\tconst nextUrl = `${AUTH_PATH}?path=${location.pathname}`\n\treturn history.replace(nextUrl)\n}, 500)\n\n\nexport const axiosInstance = httpAxios(axiosConifg, {\n\trequestSuccessHook(config) {\n\t\treturn { ...config, headers: { ...config.headers, token: TokenService.get() } }\n\t},\n\tresponseErrorHooks(error) {\n\t\tconst status = error.response.status\n\t\t// 超时、网络异常\n\t\tif (isApiTimeout(error)) {\n\t\t\t// eslint-disable-next-line\n\t\t\terrorNotice('接口请求超时')\n\t\t}\n\n\t\tif (isNetworkError(error)) {\n\t\t\terrorNotice('网络异常')\n\t\t}\n\n\t\tif (error.response && status === 401) {\n\t\t\terrorNotice('登录超时')\n\t\t\tredirect()\n\t\t\treturn Promise.reject(error)\n\t\t}\n\n\t\t// 系统错误\n\t\tif (error.response && status >= 400) {\n\t\t\tconst { data } = error.response\n\t\t\t// blob to  json\n\t\t\tif (Object.prototype.toString.call(data) === \"[object Blob]\" && (data.type === 'application/json')) {\n\t\t\t\tlet reader = new FileReader() as any\n\t\t\t\treader.readAsText(data, 'utf-8');\n\t\t\t\treader.onload = () => {\n\t\t\t\t\tconst text = JSON.parse(reader.result)\n\t\t\t\t\tmessage.error(text.message)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst notice = get(error, 'response.data.msg') || '系统异常'\n\t\t\t\terrorNotice(notice, error.response)\n\t\t\t\tconsole.error(error.response, 'system error')\n\t\t\t}\n\t\t}\n\t\treturn Promise.reject(error)\n\t}\n})\n\nconst axios_middleware = request_middleware({axiosInstance})\n\nexport default axios_middleware\n","import React from 'react'\nimport zhCN from 'antd/lib/locale/zh_CN'\nimport 'moment/locale/zh-cn'\nimport { ConfigProvider } from 'antd'\n\n\nconst validateMessages = {\n  required: \"请填写，该字段是必填字段！\",\n  // ...\n};\n\nconst antd_middleware = ({ App, config }) => {\n\n\treturn {\n\t\tApp(props) {\n\t\t\treturn (\n\t\t\t\t<ConfigProvider form={{validateMessages}} locale = {zhCN}>\n\t\t\t\t\t<App { ...props } />\n\t\t\t\t</ConfigProvider>\n\t\t\t)\n\t\t},\n\t\tconfig\n\t}\n}\n\nexport default antd_middleware","\nimport axios_middleware from './axiosMiddleware'\nimport antd_middleware from './antdMiddleware'\nimport { global_middleware } from './globalMiddleware'\n\nconst middlewares = [\n\tantd_middleware,\n\taxios_middleware,\n\tglobal_middleware,\n]\n\nexport default middlewares\n","import Cookie from 'js-cookie'\n\nexport const TOKEN_NAME = 'Token'\n\nclass TokenService<T extends string > {\n\n    private readonly tokenName: string = TOKEN_NAME\n\n    public set(v: T): void {\n        if (typeof v !== 'string') {\n            return console.warn(`Token accept string key. but params is ${typeof v}`)\n        }\n        Cookie.set(this.tokenName, v)\n    }\n\n    public get(): string | undefined {\n        return Cookie.get(this.tokenName) \n    }\n\n    public clear(): void {\n        return Cookie.remove(this.tokenName)\n    } \n\n    public isAuthenticated(): boolean {\n        return !!this.get()\n    }\n}\n\nexport default new TokenService<string>()"],"sourceRoot":""}